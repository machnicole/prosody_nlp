# Time of run:
# Mon Jul  5 19:28:06 2021
# Command:
# ./berkeley_parse_analyser/classify_german_vm.py sample_data/turn_vm_ger_no_speech_output_dev.txt sample_data/turn_dev_ger.trees classified.vm_ger_turn.no_speech
#
Printing tree transformations
Sentence 1:
0 Initial errors
0 on fringe, 0 iterations

Sentence 2:
0 Initial errors
0 on fringe, 0 iterations

Sentence 3:
9 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
2 Error:Clause Attachment
2 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK konnen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV morgen))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 9))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;36m(SIMPX[00m
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (6, 9))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(SIMPX
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			(LK kommt)
			(MF die bestatigung))
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (15, 16))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (12, 17), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(SIMPX
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			(LK kommt)
			(MF die bestatigung))
		(SIMPX konnen sie es ticket abholen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 9), 'span': (8, 9), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich mache ihnen das jetzt fertig konnen sie morgen kommt die bestatigung konnen sie es ticket abholen)

Sentence 4:
0 Initial errors
0 on fringe, 0 iterations

Sentence 5:
0 Initial errors
0 on fringe, 0 iterations

Sentence 6:
0 Initial errors
0 on fringe, 0 iterations

Sentence 7:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM tag)
		(DM frau meurer)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;36m(ADVX[00m
				(MF
					[01;31m(NX[00m
						(NE fischenbeck)[01;31m)[00m)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['NE'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP tag frau meurer hier ist fischenbeck)

Sentence 8:
0 Initial errors
0 on fringe, 0 iterations

Sentence 9:
0 Initial errors
0 on fringe, 0 iterations

Sentence 10:
0 Initial errors
0 on fringe, 0 iterations

Sentence 11:
0 Initial errors
0 on fringe, 0 iterations

Sentence 12:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF der wievielte)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (0, 3))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(LV[00m
			(PX
				(APPR in)
				(NX zwei wochen))[01;31m)[00m
		(SIMPX das ware der wievielte)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP in zwei wochen das ware der wievielte)

Sentence 13:
0 Initial errors
0 on fringe, 0 iterations

Sentence 14:
0 Initial errors
0 on fringe, 0 iterations

Sentence 15:
0 Initial errors
0 on fringe, 0 iterations

Sentence 16:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(KOORD und)
			(C wenn)
			(FKOORD
				(MVC wir sonntags fahren)
				(KON und)
				(MVC
					(MF
						[01;36m(ADVX[00m
							(ADVX noch)
							[01;31m(ADVX[00m
								(ADV vorher)[01;31m)[00m[01;36m)[00m
						(PX ins theater))
					(VC gehen)))[01;31m)[00m
		(ADVX oder so)))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADV'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (6, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADV'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(KOORD und)
			(C wenn)
			(FKOORD wir sonntags fahren und noch vorher ins theater gehen)[01;31m)[00m
		(ADVX oder so)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'FKOORD'], 'family': ['SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'ADV', 'ADV', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 11), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und wenn wir sonntags fahren und noch vorher ins theater gehen oder so)

Sentence 17:
0 Initial errors
0 on fringe, 0 iterations

Sentence 18:
0 Initial errors
0 on fringe, 0 iterations

Sentence 19:
0 Initial errors
0 on fringe, 0 iterations

Sentence 20:
0 Initial errors
0 on fringe, 0 iterations

Sentence 21:
0 Initial errors
0 on fringe, 0 iterations

Sentence 22:
0 Initial errors
0 on fringe, 0 iterations

Sentence 23:
0 Initial errors
0 on fringe, 0 iterations

Sentence 24:
0 Initial errors
0 on fringe, 0 iterations

Sentence 25:
0 Initial errors
0 on fringe, 0 iterations

Sentence 26:
0 Initial errors
0 on fringe, 0 iterations

Sentence 27:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF vielleicht)
			(LK konnen)
			(MF
				(NX sie)
				(ADVX dann)
				(ADVX auch)
				[01;36m(PX[00m
					(ADVX direkt)
					(PX nach dem intercityhotel)[01;36m)[00m)
			(VC fragen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NE'), 'right siblings': [], 'left siblings': [(NX (PPER sie)), (ADVX (ADV dann)), (ADVX (ADV auch))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja vielleicht konnen sie dann auch direkt nach dem intercityhotel fragen)

Sentence 28:
0 Initial errors
0 on fringe, 0 iterations

Sentence 29:
0 Initial errors
0 on fringe, 0 iterations

Sentence 30:
10 Initial errors
0 on fringe, 6 iterations
4 Error:NP Attachment
2 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				[01;36m(LKM[00m
					[01;31m(LKM[00m [01;33m(LKM[00m
						(LK klare)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(NX das) [01;33mLKM)[00m
								[01;36m(VF[00m
									(NX [01;33m(SIMPX[00m
										(PIS alles))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
					[01;31m(LKM[00m
						(LK kaufe)
						(MF die tickets)[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK rufe)
			(MF ich sie noch mal)
			(VC an)
			(NF [01;33m(PX[00m
				(PX
					(APPR wegen)
					[01;31m(NX[00m
						(NX dem programm) [01;33mPX)[00m
						(PX im ballhaus)[01;31m)[00m)))))
Step:NP Attachment
{'new_parent': 'LKM', 'new_family': ['NX', 'LK', 'MF'], 'mover info': [('NX', (11, 12))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 15), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('PIS', 'PIS'), 'added and moved': True, 'end right siblings': ['LK', 'MF'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				[01;36m(LKM[00m
					(LKM
						(LK klare)
						[01;31m(MF[00m
							(NX
								(PDS das))[01;31m)[00m)
					(SIMPX
						[01;31m(LKM[00m
							[01;36m(VF[00m
								(NX
									(PIS alles))[01;36m)[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m)[01;36m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK rufe)
			(MF ich sie noch mal)
			(VC an)
			(NF [01;33m(PX[00m
				(PX
					(APPR wegen)
					[01;31m(NX[00m
						(NX dem programm) [01;33mPX)[00m
						(PX im ballhaus)[01;31m)[00m)))))
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (26, 28))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (23, 28), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				[01;36m(LKM[00m
					(LKM
						(LK klare)
						[01;31m(MF[00m
							(NX
								(PDS das))[01;31m)[00m)
					(SIMPX
						[01;31m(LKM[00m
							[01;36m(VF[00m
								(NX
									(PIS alles))[01;36m)[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m)[01;36m)[00m))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Clause Attachment
{'subtrees': ['LKM', 'SIMPX'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN rufe))) (MF (PX (APPRART im) (NX (NN reiseburo)))) (VC (PTKVZ an))), (KON und)], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'FKOORD', 'label': 'LKM', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LKM
						(LK klare)
						[01;31m(MF[00m
							(NX
								(PDS das))[01;31m)[00m)
					(SIMPX
						[01;31m(LKM[00m
							[01;36m(VF[00m
								(NX
									(PIS alles))[01;36m)[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS',), 'right siblings': [(LK (VXFIN (VVFIN kaufe))), (MF (NX (ART die) (NN tickets)))], 'left siblings': [], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'LKM', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LKM
						(LK klare)
						[01;31m(MF[00m
							(NX
								(PDS das))[01;31m)[00m)
					(SIMPX
						[01;31m(LKM[00m
							(VF alles)
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (9, 11), 'span': (10, 11), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LKM klare das)
					(SIMPX
						[01;31m(LKM[00m
							(VF alles)
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 15), 'span': (11, 15), 'left siblings': [], 'label': 'LKM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wissen sie was ich rufe im reiseburo an und klare das alles kaufe die tickets und dann rufe ich sie noch mal an wegen dem programm im ballhaus)

Sentence 31:
13 Initial errors
0 on fringe, 10 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(NX[00m
							(ART [01;33m(NX (NF[00m einen)
							(NN zug)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C mit dem)
							(MF wir)
							(VC zuruckfahren)[01;31m)[00m)[01;36m)[00m) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX
						(PX am vierundzwanzigsten)
						(PX
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m))
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VC', 'ART', 'NN'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						[01;36m(VXINF[00m
							(VC
								(ADV ungefahr))[01;36m)[00m
						[01;36m(NX[00m
							(ART [01;33m(NX (NF[00m einen)
							(NN zug)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C mit dem)
							(MF wir)
							(VC zuruckfahren)[01;31m)[00m)[01;36m)[00m) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX
						(PX am vierundzwanzigsten)
						(PX
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m))
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (8, 12), 'span': (8, 12), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						[01;36m(VXINF[00m
							(VC
								(ADV ungefahr))[01;36m)[00m
						[01;36m(NX[00m
							(ART [01;33m(NX (NF[00m einen)
							(NN zug)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(NF mit dem wir zuruckfahren)) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX
						(PX am vierundzwanzigsten)
						(PX
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m))
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'VC', 'NX'], 'mover info': [('VC', (5, 6))], 'old_family': ['VC', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (2, 8), 'movers': ['VC'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;36m(VXINF[00m
						(VC
							(ADV ungefahr))[01;36m)[00m
					[01;33m(NX (NF[00m (NX einen zug)[01;31m)[00m
				(NF mit dem wir zuruckfahren)) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX
						(PX am vierundzwanzigsten)
						(PX
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m))
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Unary
{'subtrees': ['VC'], 'family': ['ADVX', 'ADVX', 'ADVX', 'VXINF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART einen) (NN zug))], 'left siblings': [(ADVX (ADV vielleicht)), (ADVX (ADV vorher)), (ADVX (ADV noch))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'MF', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					(VXINF ungefahr)
					[01;33m(NX (NF[00m (NX einen zug)[01;31m)[00m
				(NF mit dem wir zuruckfahren)) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX
						(PX am vierundzwanzigsten)
						(PX
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m))
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ungefahr))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					(VXINF ungefahr)
					[01;33m(NX (NF[00m (NX einen zug)[01;31m)[00m
				(NF mit dem wir zuruckfahren)) [01;33mNF) NX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (0, 32), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK brauchten)
			[01;31m(MF[00m
				(ADVX vielleicht)
				(ADVX vorher)
				(ADVX noch)
				(VXINF ungefahr)
				[01;33m(NX (NF[00m (NX einen zug)[01;31m)[00m
			(NF mit dem wir zuruckfahren)) [01;33mNF) NX)[00m
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten ungefahr um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'VXINF', 'NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (2, 8), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK brauchten)
			(ADVX vielleicht)
			(ADVX vorher)
			(ADVX noch)
			(VXINF ungefahr)
			[01;36m(NF[00m
				[01;36m(NX[00m
					(NX einen zug)
					(NF mit dem wir zuruckfahren)[01;36m)[00m[01;36m)[00m)
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten ungefahr um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX', 'VXINF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VVFIN brauchten))), (ADVX (ADV vielleicht)), (ADVX (ADV vorher)), (ADVX (ADV noch)), (VXINF (VC (ADV ungefahr)))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK brauchten)
			(ADVX vielleicht)
			(ADVX vorher)
			(ADVX noch)
			(VXINF ungefahr)
			[01;36m(NF[00m
				(NX
					(NX einen zug)
					(NF mit dem wir zuruckfahren))[01;36m)[00m)
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten ungefahr um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VVFIN brauchten))), (ADVX (ADV vielleicht)), (ADVX (ADV vorher)), (ADVX (ADV noch)), (VXINF (VC (ADV ungefahr)))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten ungefahr um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 32), 'span': (18, 26), 'left siblings': ['VF', 'LK', 'APPRART', 'DM', 'DM'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren weil ich mus am nee nee am vierundzwanzigsten ungefahr um vier uhr wieder hier sein weil ich einen termin habe)

Sentence 32:
12 Initial errors
0 on fringe, 6 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m[01;36m)[00m
							(NX ein zug)[01;36m)[00m
						[01;36m(VC[00m [01;31m(ADVX[00m
							(ADV zuruck)[01;31m)[00m[01;36m)[00m
						[01;33m(PX (NF[00m (PX von bonn)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m)) [01;33mNF) PX)[00m
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'ADVX', 'APPR', 'NX'], 'mover info': [('PX', (10, 12))], 'old_family': ['ADJX', 'NX', 'ADVX', 'PX'], 'start left siblings': ['ADJX', 'NX', 'ADVX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (3, 15), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['ADVX', 'APPR', 'NX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m[01;36m)[00m
							(NX ein zug)[01;36m)[00m
						[01;36m(VC[00m [01;31m(ADVX[00m
							(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF
						(PX
							(PX von bonn)
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m))))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX stundlich)
							(NX ein zug)[01;36m)[00m
						[01;36m(VC[00m [01;31m(ADVX[00m
							(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF
						(PX
							(PX von bonn)
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m))))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'VC'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX stundlich)
							(NX ein zug)[01;36m)[00m
						(VC zuruck)[01;31m)[00m
					(NF
						(PX
							(PX von bonn)
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m))))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('VC', (9, 10))], 'old_family': ['ADVX', 'NX', 'VC'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (3, 15), 'movers': ['VC'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					(MF stundlich ein zug)
					(VC zuruck)
					(NF
						(PX
							(PX von bonn)
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m))))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD'), 'right siblings': [], 'left siblings': [(PX (APPR von) (NX (NE bonn))), (ADVX (ADV immer))], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (0, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich sehe grade ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)

Sentence 33:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie ja gleich ein doppelzimmer)
				(VC nehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM oder)))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (8, 10), 'span': (8, 10), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie ja gleich ein doppelzimmer)
				(VC nehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(DM oder)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('DM', (8, 10))], 'old_family': ['LK', 'MF', 'VC', 'DM'], 'start left siblings': ['LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 11), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja konnen sie ja gleich ein doppelzimmer nehmen frau schmidt oder)

Sentence 34:
0 Initial errors
0 on fringe, 0 iterations

Sentence 35:
0 Initial errors
0 on fringe, 0 iterations

Sentence 36:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m
			(DM
				(ITJ tschus))[01;36m)[00m
		(DM frau meurer)))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE meurer)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau meurer)

Sentence 37:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m
			(DM
				(ITJ tschus))[01;36m)[00m
		(DM frau fischenbeck)))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE fischenbeck)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau fischenbeck)

Sentence 38:
0 Initial errors
0 on fringe, 0 iterations

Sentence 39:
0 Initial errors
0 on fringe, 0 iterations

Sentence 40:
0 Initial errors
0 on fringe, 0 iterations

Sentence 41:
0 Initial errors
0 on fringe, 0 iterations

Sentence 42:
0 Initial errors
0 on fringe, 0 iterations

Sentence 43:
0 Initial errors
0 on fringe, 0 iterations

Sentence 44:
0 Initial errors
0 on fringe, 0 iterations

Sentence 45:
0 Initial errors
0 on fringe, 0 iterations

Sentence 46:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(ADJX[00m
			(PX am zehnten juli)
			[01;36m(PX[00m [01;31m(ADJX[00m
				(PX von hannover)
				[01;36m(VF[00m
					(ADVX
						(ADV zuruck))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX ginge das denn dann ab achtzehn uhr)))
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (3, 6), 'span': (3, 6), 'subtrees': ['PX', 'ADVX'], 'parent': 'ADJX', 'over_word': False, 'auto preterminals': ('APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		[01;31m(ADJX[00m
			(PX am zehnten juli)
			(PX
				(PX von hannover)
				[01;36m(VF[00m
					(ADVX
						(ADV zuruck))[01;36m)[00m)[01;31m)[00m
		(SIMPX ginge das denn dann ab achtzehn uhr)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(PX (APPR von) (NX (NE hannover)))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'PX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(ADJX[00m
			(PX am zehnten juli)
			(PX von hannover zuruck)[01;31m)[00m
		(SIMPX ginge das denn dann ab achtzehn uhr)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['ADJX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP am zehnten juli von hannover zuruck ginge das denn dann ab achtzehn uhr)

Sentence 47:
0 Initial errors
0 on fringe, 0 iterations

Sentence 48:
0 Initial errors
0 on fringe, 0 iterations

Sentence 49:
0 Initial errors
0 on fringe, 0 iterations

Sentence 50:
0 Initial errors
0 on fringe, 0 iterations

Sentence 51:
5 Initial errors
0 on fringe, 2 iterations
3 Error:NP Attachment
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX ja)
				[01;31m(ADJX[00m
					[01;31m(ADJX[00m
						(ADVX dreimal)
						[01;36m(ADJX[00m
							(ADVX so)
							(ADJD lang)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
					(NX wie fliegen)[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['ADJX', 'NX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'KOKOM', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 9), 'movers': ['NX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF
				(ADVX ja)
				[01;31m(ADJX[00m
					(ADVX dreimal)
					[01;36m(ADJX[00m
						(ADVX so)
						(ADJD lang)[01;36m)[00m[01;31m)[00m)
			(NX wie fliegen))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP also es ware ja dreimal so lang wie fliegen)

Sentence 52:
0 Initial errors
0 on fringe, 0 iterations

Sentence 53:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			(PX in zehn minuten)
			(ADVX oder so)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TOP', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP in zehn minuten oder so)

Sentence 54:
0 Initial errors
0 on fringe, 0 iterations

Sentence 55:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX konnen sie sich dann bitte um den flug kummern)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK wollen)
					(MF sie mit dem zug)
					(VC reisen)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(SIMPX
		(TURN
			(SIMPX konnen sie sich dann bitte um den flug kummern)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX wollen sie mit dem zug reisen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP konnen sie sich dann bitte um den flug kummern oder wollen sie mit dem zug reisen)

Sentence 56:
0 Initial errors
0 on fringe, 0 iterations

Sentence 57:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(ADJX[00m
	(TURN
		(ADJX
			(ADJX zentral)
			[01;31m(PX[00m
				(PX zum stadtzentrum) [01;33mADJX)[00m
				(KON oder)
				(PX zu ihrem kongresort)[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['ADJX', 'KON', 'PX'], 'mover info': [('KON', (3, 4)), ('PX', (4, 7))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADJD', 'APPRART', 'NN', 'KON', 'APPR', 'PPOSAT', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADJX'}
(TOP zentral zum stadtzentrum oder zu ihrem kongresort)

Sentence 58:
0 Initial errors
0 on fringe, 0 iterations

Sentence 59:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;31m(MF[00m
						[01;36m(C[00m
							(PX
								(APPR in)
								(NX welcher preiskategorie))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(PDS das))[01;36m)[00m[01;31m)[00m
					(VC liegen sollte))))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'MF', 'VC'], 'mover info': [('PX', (5, 8))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PWAT', 'NN', 'PDS', 'VVINF', 'VMFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 11), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;36m(C[00m
						(PX
							(APPR in)
							(NX welcher preiskategorie))[01;36m)[00m
					(MF das)
					(VC liegen sollte))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWAT', 'NN'), 'right siblings': [(MF (NX (PDS das))), (VC (VXINF (VVINF liegen)) (VXFIN (VMFIN sollte)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja und wissen sie schon in welcher preiskategorie das liegen sollte)

Sentence 60:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF
				(NX
					(NX
						(ADVX
							(ADVX so)
							[01;36m(ADVX[00m
								(ADV ungefahr)[01;36m)[00m)
						(ADJX hundert)
						(NN mark))
					(PX pro ubernachtung mit fruhstuck))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja also es sollte so ungefahr hundert mark pro ubernachtung mit fruhstuck)

Sentence 61:
0 Initial errors
0 on fringe, 0 iterations

Sentence 62:
0 Initial errors
0 on fringe, 0 iterations

Sentence 63:
6 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				(DM ja)[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['ADVX', 'DM'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF jetzt)[01;36m)[00m
			(DM ja)[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 4))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP das ware jetzt ja das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)

Sentence 64:
8 Initial errors
0 on fringe, 7 iterations
2 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)[01;31m)[00m
					(PX
						(APPR mit)
						(NX
							[01;31m(NX[00m
								[01;36m(NX[00m
									(BS t)[01;36m)[00m
								[01;36m(NX[00m
									(BS h)[01;36m)[00m[01;31m)[00m
							(KON und)
							(NX
								[01;36m(NX[00m
									(BS i)[01;36m)[00m
								[01;36m(NX[00m
									(BS e)[01;36m)[00m)))[01;31m)[00m[01;31m)[00m)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['BS', 'NX', 'KON', 'NX'], 'mover info': [('BS', (7, 8))], 'old_family': ['BS', 'BS'], 'start left siblings': [], 'auto preterminals': ('BS', 'BS', 'KON', 'BS', 'BS'), 'start right siblings': ['BS'], 'end left siblings': [], 'auto preterminal span': (7, 12), 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'end right siblings': ['NX', 'KON', 'NX'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)[01;31m)[00m
					(PX
						(APPR mit)
						(NX
							[01;36m(NX[00m
								(BS t)[01;36m)[00m
							(NX h)
							(KON und)
							(NX
								[01;36m(NX[00m
									(BS i)[01;36m)[00m
								[01;36m(NX[00m
									(BS e)[01;36m)[00m)))[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(NX (BS h)), (KON und), (NX (BS i) (BS e))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)[01;31m)[00m
					(PX
						(APPR mit)
						(NX
							(NX t)
							(NX h)
							(KON und)
							(NX
								[01;36m(NX[00m
									(BS i)[01;36m)[00m
								[01;36m(NX[00m
									(BS e)[01;36m)[00m)))[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'BS'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(BS e)], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)[01;31m)[00m
					(PX
						(APPR mit)
						(NX
							(NX t)
							(NX h)
							(KON und)
							(NX
								(NX i)
								[01;36m(NX[00m
									(BS e)[01;36m)[00m)))[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(NX (BS i))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)[01;31m)[00m
					(PX mit t h und i e)[01;31m)[00m[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (3, 12), 'span': (3, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel)
					(PX am thielenplatz)
					(PX mit t h und i e)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 12), 'span': (3, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				(NX hotel)
				(PX am thielenplatz)
				(PX mit t h und i e)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (3, 12), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das hotel heist hotel am thielenplatz mit t h und i e)

Sentence 65:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF
				(NX ich)
				(ADVX jetzt)
				(PX fur sie)
				[01;36m(NX[00m
					(NX
						(NX den flug)
						(PX
							(APPRART vom)
							(NX
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJA kolnbonner)[01;31m)[00m[01;36m)[00m
								(NN flughafen))))
					(PX am siebten juli)[01;36m)[00m)
			(VC buchen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK informiere)
			(MF ich mich noch)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;31m(PX[00m
							(ADVX abends)
							[01;36m(PX[00m
								(APPRART am)
								(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
					(VC zuruckfliegen konnten))))))
Step:Single Word Phrase
{'family': ['NX', 'NN'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF
				(NX ich)
				(ADVX jetzt)
				(PX fur sie)
				[01;36m(NX[00m
					(NX den flug vom kolnbonner flughafen)
					(PX am siebten juli)[01;36m)[00m)
			(VC buchen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK informiere)
			(MF ich mich noch)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;31m(PX[00m
							(ADVX abends)
							[01;36m(PX[00m
								(APPRART am)
								(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
					(VC zuruckfliegen konnten))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (36, 37))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (35, 40), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF
				(NX ich)
				(ADVX jetzt)
				(PX fur sie)
				[01;36m(NX[00m
					(NX den flug vom kolnbonner flughafen)
					(PX am siebten juli)[01;36m)[00m)
			(VC buchen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV jetzt)), (PX (APPR fur) (NX (PPER sie)))], 'auto preterminal span': (6, 14), 'span': (6, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
			(VC buchen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 19), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(LK soll)
		(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
		(VC buchen)
		[01;31m(NF[00m
			(PX
				(APPR um)
				(NX sieben uhr zehn))[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 19), 'left siblings': ['DM', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn sie sind dann um acht uhr zehn in hannover und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)

Sentence 66:
0 Initial errors
0 on fringe, 0 iterations

Sentence 67:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK gucke)
			(MF ich dann)
			(NF wie das funktioniert mit dem hotel ob noch was frei ist)[01;31m)[00m))
Step:Unary
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'KOUS', 'PDS', 'VVFIN', 'APPR', 'ART', 'NN', 'KOUS', 'ADV', 'PIS', 'ADJD', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gucke ich dann wie das funktioniert mit dem hotel ob noch was frei ist)

Sentence 68:
0 Initial errors
0 on fringe, 0 iterations

Sentence 69:
0 Initial errors
0 on fringe, 0 iterations

Sentence 70:
0 Initial errors
0 on fringe, 0 iterations

Sentence 71:
0 Initial errors
0 on fringe, 0 iterations

Sentence 72:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Co-ordination
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM frau offergeld)
		(SIMPX
			(VF wie)
			(LK machen)
			(MF wir das denn jetzt)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF wir im am ersten juliwochenende nach hannover)
							[01;33m(VC[00m (VC fliegen wollen)[01;31m)[00m
						(KON oder)
						(MVC nach hannover fahren wollen)[01;31m)[00m))))) [01;33mVC)[00m
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (10, 24), 'span': (10, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM frau offergeld)
		(SIMPX
			(VF wie)
			(LK machen)
			(MF wir das denn jetzt)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MF wir im am ersten juliwochenende nach hannover)
						[01;36m(VC[00m
							(VC fliegen wollen)
							(KON oder)
							(MVC nach hannover fahren wollen)[01;36m)[00m[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'MVC'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(MF (NX (PPER wir)) (APPRART im) (PX (APPRART am) (NX (ADJX (ADJA ersten)) (NN juliwochenende))) (PX (APPR nach) (NX (NE hannover))))], 'auto preterminal span': (17, 24), 'span': (17, 24), 'parent': 'FKOORD', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM frau offergeld)
		(SIMPX
			(VF wie)
			(LK machen)
			(MF wir das denn jetzt)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MF wir im am ersten juliwochenende nach hannover)
						(VC fliegen wollen oder nach hannover fahren wollen)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 24), 'span': (10, 24), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo frau offergeld wie machen wir das denn jetzt wenn wir im am ersten juliwochenende nach hannover fliegen wollen oder nach hannover fahren wollen)

Sentence 73:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				[01;31m(SIMPX[00m
					(LK lassen)
					(MF wir)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 10), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(SIMPX dann lassen wir)
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('SIMPX', (2, 5))], 'old_family': ['SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF', 'PTKANT'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 11), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP ja gut dann lassen wir konnen wir uns besser unterhalten ja)

Sentence 74:
4 Initial errors
0 on fringe, 3 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK ware)
				(MF vielleicht gar nicht so schlecht)[01;31m)[00m
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'APPR', 'ART', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					(NF wegen der expo)
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD schlecht)))], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ware vielleicht gar nicht so schlecht wegen der expo dann)

Sentence 75:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK mussen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX noch)
				[01;36m(ADVX[00m [01;31m(PX[00m
					(PROP daruber)[01;31m)[00m[01;36m)[00m)
			(VC unterhalten))
		(SIMPX wollen sie mit dem zug fahren oder wollen sie fliegen)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP ja da mussen wir uns noch daruber unterhalten wollen sie mit dem zug fahren oder wollen sie fliegen)

Sentence 76:
0 Initial errors
0 on fringe, 0 iterations

Sentence 77:
0 Initial errors
0 on fringe, 0 iterations

Sentence 78:
0 Initial errors
0 on fringe, 0 iterations

Sentence 79:
10 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Different label
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					(VF dann)
					(SIMPX
						(LK gucke)
						[01;36m(VF[00m [01;31m(MF[00m
							(NX
								(PPER ich))[01;31m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m
			(FKOORD
				[01;36m(LKMVCN[00m [01;31m(LKMN[00m
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:Different label
{'family': ['LK', 'VF'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					(VF dann)
					(SIMPX gucke ich)[01;36m)[00m[01;36m)[00m
			(FKOORD
				[01;36m(LKMVCN[00m [01;31m(LKMN[00m
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:Different label
{'family': ['LKMVCN', 'KON', 'LKM'], 'auto preterminal span': (10, 21), 'span': (10, 21), 'subtrees': ['LK', 'MF', 'DM', 'NX', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKMVCN')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					(VF dann)
					(SIMPX gucke ich)[01;36m)[00m[01;36m)[00m
			(FKOORD
				(LKMVCN
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'DM', 'NX'], 'mover info': [('DM', (13, 14)), ('NX', (14, 17))], 'old_family': ['LK', 'MF', 'DM', 'NX', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (10, 21), 'movers': ['DM', 'NX'], 'old_parent': 'LKMVCN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					(VF dann)
					(SIMPX gucke ich)[01;36m)[00m[01;36m)[00m
			(FKOORD
				(LKMVCN
					(LK erkundige)
					(MF
						(NX ich)
						(NX mich)
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m)
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER'), 'right siblings': [(FKOORD (LKMVCN (LK (VXFIN (VVFIN erkundige))) (MF (NX (PPER ich)) (NX (PRF mich)) (DM (ITJ ah)) (NX (ADVX (ADV hier)) (NX (ART die) (NN fluge)))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (ART die) (NN fluge))) (VC (VXFIN (VVFIN stattfinden)))))) (KON und) (LKM (LK (VXFIN (VVFIN buche))) (MF (ADVX (ADV dann)) (PX (APPR fur) (NX (NX (PPER uns)) (NX (PIS beiden)))))))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			[01;36m(ADVX[00m
				(VF
					(VF dann)
					(SIMPX gucke ich))[01;36m)[00m
			(FKOORD
				(LKMVCN
					(LK erkundige)
					(MF
						(NX ich)
						(NX mich)
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m)
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:Unary
{'subtrees': ['VF'], 'family': ['ADVX', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER'), 'right siblings': [(FKOORD (LKMVCN (LK (VXFIN (VVFIN erkundige))) (MF (NX (PPER ich)) (NX (PRF mich)) (DM (ITJ ah)) (NX (ADVX (ADV hier)) (NX (ART die) (NN fluge)))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (ART die) (NN fluge))) (VC (VXFIN (VVFIN stattfinden)))))) (KON und) (LKM (LK (VXFIN (VVFIN buche))) (MF (ADVX (ADV dann)) (PX (APPR fur) (NX (NX (PPER uns)) (NX (PIS beiden)))))))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			(ADVX dann gucke ich)
			(FKOORD
				(LKMVCN
					(LK erkundige)
					(MF
						(NX ich)
						(NX mich)
						[01;31m(DM[00m
							(ITJ ah)[01;31m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m)
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['NX', 'NX', 'DM', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 14), 'left siblings': ['NX', 'NX'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX
			(ADVX dann gucke ich)
			(FKOORD
				(LKMVCN
					(LK erkundige)
					(MF
						(NX ich)
						(NX mich)
						(ITJ ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m)
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX', 'ITJ', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (14, 17), 'left siblings': ['NX', 'NX', 'ITJ'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also ich kann beim reiseburo anrufen dann gucke ich erkundige ich mich ah hier die fluge wann die fluge stattfinden und buche dann fur uns beiden)

Sentence 80:
7 Initial errors
0 on fringe, 7 iterations
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		[01;31m(SIMPX[00m
			(SIMPX ich hatte mich auch informiert)
			[01;36m(KOORD[00m
				(KON [01;33m(SIMPX (SIMPX[00m und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF immer noch so) [01;33mSIMPX)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX nur am wochenende) [01;33mSIMPX)[00m
						(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV immer)) (ADVX (ADV noch)) (ADVX (ADV so))) (NF (PX (PX (ADVX (ADV nur)) (APPRART am) (NX (NN wochenende))) (ADVX (PTKNEG nicht)))))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert))))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		[01;31m(SIMPX[00m
			(SIMPX ich hatte mich auch informiert)
			[01;33m(SIMPX (SIMPX[00m (KOORD und)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF immer noch so) [01;33mSIMPX)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX nur am wochenende) [01;33mSIMPX)[00m
						(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (2, 17), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		[01;33m(SIMPX (SIMPX[00m (KOORD und)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF immer noch so) [01;33mSIMPX)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX nur am wochenende) [01;33mSIMPX)[00m
					(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (8, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		[01;36m(SIMPX[00m
			[01;33m(SIMPX[00m (KOORD und)
			(VF das)
			(LK ist)
			(MF immer noch so)[01;36m)[00m
		[01;31m(NF[00m
			[01;31m(PX[00m
				(PX nur am wochenende) [01;33mSIMPX)[00m
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV'), 'right siblings': [(NF (PX (PX (ADVX (ADV nur)) (APPRART am) (NX (NN wochenende))) (ADVX (PTKNEG nicht)))), (SIMPX (KOORD (KON aber)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV ja)) (ADVX (ADV auch)) (ADVX (ADV sowieso)) (ADVX (PTKNEG nicht)) (PX (APPRART am) (NX (NN wochenende)))) (VC (VXINF (VVINF fliegen))))], 'left siblings': [(DM (PTKANT ja)), (NX (PPER wir)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert))))], 'auto preterminal span': (7, 13), 'span': (7, 13), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		[01;33m(SIMPX[00m (SIMPX und das ist immer noch so)
		[01;31m(NF[00m
			[01;31m(PX[00m
				(PX nur am wochenende) [01;33mSIMPX)[00m
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Unary
{'subtrees': ['PX', 'ADVX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (13, 17), 'span': (13, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		[01;33m(SIMPX[00m (SIMPX und das ist immer noch so)
		[01;31m(NF[00m
			(PX nur am wochenende) [01;33mSIMPX)[00m
			(ADVX nicht)[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (13, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		[01;36m(SIMPX[00m
			(SIMPX und das ist immer noch so)
			(PX nur am wochenende)[01;36m)[00m
		(ADVX nicht)
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [(ADVX (PTKNEG nicht)), (SIMPX (KOORD (KON aber)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV ja)) (ADVX (ADV auch)) (ADVX (ADV sowieso)) (ADVX (PTKNEG nicht)) (PX (APPRART am) (NX (NN wochenende)))) (VC (VXINF (VVINF fliegen))))], 'left siblings': [(DM (PTKANT ja)), (NX (PPER wir)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert))))], 'auto preterminal span': (7, 16), 'span': (7, 16), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja wir ich hatte mich auch informiert und das ist immer noch so nur am wochenende nicht aber wir mussen ja auch sowieso nicht am wochenende fliegen)

Sentence 81:
0 Initial errors
0 on fringe, 0 iterations

Sentence 82:
0 Initial errors
0 on fringe, 0 iterations

Sentence 83:
0 Initial errors
0 on fringe, 0 iterations

Sentence 84:
0 Initial errors
0 on fringe, 0 iterations

Sentence 85:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV naturlich)[01;31m)[00m[01;36m)[00m
						(ADVX auch)
						(ADJX sehr komfortabel))
					(VC ist))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF eine eigene sauna)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF eine eigene sauna)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (0, 7))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(LV[00m
			(SIMPX
				(KOORD und)
				(C was)
				(MF naturlich auch sehr komfortabel)
				(VC ist))[01;31m)[00m
		(SIMPX es hat eine eigene sauna)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 7), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und was naturlich auch sehr komfortabel ist es hat eine eigene sauna)

Sentence 86:
0 Initial errors
0 on fringe, 0 iterations

Sentence 87:
0 Initial errors
0 on fringe, 0 iterations

Sentence 88:
0 Initial errors
0 on fringe, 0 iterations

Sentence 89:
0 Initial errors
0 on fringe, 0 iterations

Sentence 90:
0 Initial errors
0 on fringe, 0 iterations

Sentence 91:
0 Initial errors
0 on fringe, 0 iterations

Sentence 92:
0 Initial errors
0 on fringe, 0 iterations

Sentence 93:
0 Initial errors
0 on fringe, 0 iterations

Sentence 94:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF in anbetracht der knappen zeit)
					[01;36m(SIMPX[00m
						(LK konnte)
						(MF man die tage sicherlich durch fliegen am effektivsten)
						(VC nutzen)[01;36m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PIS', 'ART', 'NN', 'ADV', 'APPR', 'NN', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR in) (NX (NX (NN anbetracht)) (NX (ART der) (ADJX (ADJA knappen)) (NN zeit)))))], 'auto preterminal span': (8, 18), 'span': (8, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(NF in anbetracht der knappen zeit konnte man die tage sicherlich durch fliegen am effektivsten nutzen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'ADJA', 'NN', 'VMFIN', 'PIS', 'ART', 'NN', 'ADV', 'APPR', 'NN', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (1, 18), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich denke in anbetracht der knappen zeit konnte man die tage sicherlich durch fliegen am effektivsten nutzen)

Sentence 95:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK denken)
			(MF [01;33m(MF[00m
				(NX sie)
				(NX sich)
				(ADVX doch)
				(ADVX mal)
				[01;31m(NX[00m
					(NX was) [01;33mMF)[00m
					(NX schones)[01;31m)[00m)
			(VC aus))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (5, 6))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (1, 7), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('PIS', 'PIS'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP denken sie sich doch mal was schones aus)

Sentence 96:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM auf wiedersehen)
		(DM
			(NX
				[01;36m(NX[00m
					(NN fraulein)[01;36m)[00m
				[01;36m(DM[00m
					[01;36m(NX[00m
						(NE schmidt)[01;36m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NE schmidt)], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM auf wiedersehen)
		(DM
			(NX
				(NX fraulein)
				[01;36m(DM[00m
					[01;36m(NX[00m
						(NE schmidt)[01;36m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NN fraulein))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM auf wiedersehen)
		(DM
			(NX
				(NX fraulein)
				[01;36m(DM[00m
					(NX
						(NE schmidt))[01;36m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NN fraulein))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP auf wiedersehen fraulein schmidt)

Sentence 97:
0 Initial errors
0 on fringe, 0 iterations

Sentence 98:
0 Initial errors
0 on fringe, 0 iterations

Sentence 99:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX bei mir sieht es etwas eng aus)
		(SIMPX
			(VF ich)
			(LK konnte)
			(MF
				(PX
					(PX in der zweiten juniwoche)
					[01;36m(PX[00m
						(PX in der letzten juliwoche)
						(KON oder)
						(PX in der ersten augustwoche)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['PX', 'KON', 'PX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (ART der) (ADJX (ADJA zweiten)) (NN juniwoche)))], 'auto preterminal span': (15, 24), 'span': (15, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja also bei mir sieht es etwas eng aus ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)

Sentence 100:
0 Initial errors
0 on fringe, 0 iterations

Sentence 101:
0 Initial errors
0 on fringe, 0 iterations

Sentence 102:
0 Initial errors
0 on fringe, 0 iterations

Sentence 103:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:NP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX nix)
					(PX gegen sonntag abend)[01;31m)[00m
				[01;36m(NX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVIZU',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX nix)
					(PX gegen sonntag abend)[01;31m)[00m
				(NX
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m)[01;36m)[00m)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX'], 'mover info': [('NX', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'NX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VAFIN', 'PIS', 'APPR', 'NN', 'ADV', 'VVIZU'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 7), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVIZU', 'VVIZU'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(NX nix)
				(PX gegen sonntag abend)
				(NX
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['VVIZU'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVIZU',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 7), 'span': (6, 7), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ich habe nix gegen sonntag abend einzuwenden)

Sentence 104:
0 Initial errors
0 on fringe, 0 iterations

Sentence 105:
0 Initial errors
0 on fringe, 0 iterations

Sentence 106:
18 Initial errors
0 on fringe, 14 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
2 Error:UNSET move
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK fahren)
				(MF wir wieder mit dem zug)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX (SIMPX[00m
								(ADVX so)
								(ADV zirka))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(PX
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV [01;33m(PX[00m so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m [01;33mPX)[00m
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK fahren)
				(MF wir wieder mit dem zug)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX (SIMPX[00m
								(ADVX so)
								(ADV zirka))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV [01;33m(PX[00m so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m [01;33mPX)[00m
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC', 'DM'], 'mover info': [('NF', (7, 15))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 46), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX (SIMPX[00m
								(ADVX so)
								(ADV zirka))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV [01;33m(PX[00m so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m [01;33mPX)[00m
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['ADV', 'APPR', 'NX'], 'mover info': [('ADV', (24, 25))], 'old_family': ['KON', 'ADVX', 'ADV', 'PX'], 'start left siblings': ['KON', 'ADVX'], 'auto preterminals': ('KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (22, 29), 'movers': ['ADV'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX (SIMPX[00m
								(ADVX so)
								(ADV zirka))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;31m(PX[00m
				(PX
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					(APPR um)
					(NX den dreh))
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'left siblings': [(PX (ADVX (ADV so)) (APPR um) (NX (ADJX (CARD achtzehn)) (NN uhr)))], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'PX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;31m(PX[00m
				(PX
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					(APPR um)
					(NX den dreh))
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(ADVX (ADV so)), (PX (PX (ADV so) (APPR um) (NX (ART den) (NN dreh))) (ADVX (ADV rum)))], 'left siblings': [], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					(APPR um)
					(NX den dreh))
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'APPR', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [(APPR um), (NX (ART den) (NN dreh))], 'left siblings': [], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX so um den dreh)
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV so)), (APPR um)], 'auto preterminal span': (35, 38), 'span': (35, 38), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr)
						[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX so um den dreh)
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NF', 'LK', 'MF', 'VC', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD'), 'right siblings': ['LK', 'MF', 'VC', 'DM'], 'parent': 'SIMPX', 'auto preterminal span': (7, 22), 'span': (7, 15), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			[01;31m(ADVX[00m
				(ADVX vielleicht)
				(ADVX abends)
				[01;31m(PX[00m
					(PX so um achtzehn uhr)
					[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX so um den dreh)
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['ADVX', 'LK', 'MF', 'VC', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD'), 'right siblings': ['LK', 'MF', 'VC', 'DM'], 'parent': 'SIMPX', 'auto preterminal span': (7, 22), 'span': (7, 15), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(ADVX abends)
			[01;31m(PX[00m
				(PX so um achtzehn uhr)
				[01;33m(SIMPX (SIMPX[00m (VF so zirka)[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken) [01;33mSIMPX)[00m
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX so um den dreh)
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'ADVX', 'PX', 'VF', 'LK', 'MF', 'VC', 'DM'], 'mover info': [('VF', (13, 15))], 'old_family': ['PX', 'VF'], 'start left siblings': ['PX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX', 'PX'], 'auto preterminal span': (7, 22), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['LK', 'MF', 'VC', 'DM'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(ADVX abends)
			(PX so um achtzehn uhr)
			[01;33m(SIMPX[00m (SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)[01;31m)[00m
		(PX
			(ADVX aber)
			(ADVX so)
			[01;31m(PX[00m
				(PX so um den dreh)
				(ADVX rum)[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'DM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (7, 22), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr)
		[01;36m(SIMPX[00m
			(SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(PX
				(ADVX aber)
				(ADVX so)
				[01;31m(PX[00m
					(PX so um den dreh)
					(ADVX rum)[01;31m)[00m)[01;36m)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'subtrees': ['SIMPX', 'DM', 'PX'], 'family': ['DM', 'SIMPX', 'ADVX', 'ADVX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER wir)) (PX (ADVX (ADV so)) (APPR um) (PX (APPR um) (NX (ADJX (ADJD halb)) (CARD elf)))) (PX (APPR in) (NX (NE hannover))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch)) (NX (PIS was))) (VC (VXINF (VVINF unternehmen))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (PX (APPR mit) (NX (ART dem) (NN zug))))), (ADVX (ADV vielleicht)), (ADVX (ADV abends)), (PX (ADVX (ADV so)) (APPR um) (NX (ADJX (CARD achtzehn)) (NN uhr)))], 'auto preterminal span': (13, 29), 'span': (13, 29), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr)
		(SIMPX
			(SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(PX
				(ADVX aber)
				(ADVX so)
				[01;31m(PX[00m
					(PX so um den dreh)
					(ADVX rum)[01;31m)[00m))
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (21, 22), 'span': (21, 22), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr)
		(SIMPX
			(SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM genau)
			(PX
				(ADVX aber)
				(ADVX so)
				[01;31m(PX[00m
					(PX so um den dreh)
					(ADVX rum)[01;31m)[00m))
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (22, 29), 'span': (24, 29), 'left siblings': ['ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka muste ich dann noch mal nachkucken genau aber so so um den dreh rum und dann waren wir so um um halb elf in hannover da konnten wir noch was unternehmen)

Sentence 107:
0 Initial errors
0 on fringe, 0 iterations

Sentence 108:
0 Initial errors
0 on fringe, 0 iterations

Sentence 109:
0 Initial errors
0 on fringe, 0 iterations

Sentence 110:
0 Initial errors
0 on fringe, 0 iterations

Sentence 111:
0 Initial errors
0 on fringe, 0 iterations

Sentence 112:
0 Initial errors
0 on fringe, 0 iterations

Sentence 113:
0 Initial errors
0 on fringe, 0 iterations

Sentence 114:
0 Initial errors
0 on fringe, 0 iterations

Sentence 115:
0 Initial errors
0 on fringe, 0 iterations

Sentence 116:
0 Initial errors
0 on fringe, 0 iterations

Sentence 117:
0 Initial errors
0 on fringe, 0 iterations

Sentence 118:
0 Initial errors
0 on fringe, 0 iterations

Sentence 119:
0 Initial errors
0 on fringe, 0 iterations

Sentence 120:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX nach hannover)[01;31m)[00m
		(DM genau)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'NE', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 4), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP anderthalb tage nach hannover genau)

Sentence 121:
15 Initial errors
0 on fringe, 7 iterations
6 Error:PP Attachment
3 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:NP Internal Structure
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(VF anderthalb tage)
					(LK fahren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover) [01;33mNF) SIMPX)[00m[01;36m)[00m
						[01;31m(PX[00m
							(APPRART im)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX zeitraum)
								[01;31m(NX[00m
									[01;31m(NX[00m
										[01;31m(NX[00m
											(NN januar)[01;31m)[00m [01;33mNX)[00m
										(NX februar)
										[01;33m(NX[00m (NX marz)[01;31m)[00m
									(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'VC', 'NF', 'PX'], 'mover info': [('PX', (19, 25))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (9, 25), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF anderthalb tage fahren wir nach hannover)
			[01;31m(PX[00m
				(APPRART im)
				[01;31m(NX[00m [01;33m(NX[00m
					(NX zeitraum)
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN januar)[01;31m)[00m [01;33mNX)[00m
							(NX februar)
							[01;33m(NX[00m (NX marz)[01;31m)[00m
						(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NN'], 'mover info': [('NX', (20, 21))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (20, 25), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NN'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF anderthalb tage fahren wir nach hannover)
			[01;31m(PX[00m
				(APPRART im)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX zeitraum januar)
						(NX februar)
						[01;33m(NX[00m (NX marz)[01;31m)[00m
					(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNX)[00m
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['VF', 'LK', 'VC', 'NF', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (9, 25), 'span': (9, 10), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			(KON und)
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF anderthalb tage fahren wir nach hannover)
			[01;31m(PX[00m
				(APPRART im)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX zeitraum januar)
						(NX februar)
						[01;33m(NX[00m (NX marz)[01;31m)[00m
					(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNX)[00m
Step:PP Attachment
{'subtrees': ['KON', 'VF', 'LK', 'VC', 'NF', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (9, 25), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KON und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		(NF anderthalb tage fahren wir nach hannover)
		[01;31m(PX[00m
			(APPRART im)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX zeitraum januar)
					(NX februar)
					[01;33m(NX[00m (NX marz)[01;31m)[00m
				(NX achtundneunzig)[01;31m)[00m[01;31m)[00m)) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'VC', 'NF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (19, 25), 'left siblings': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'VC', 'NF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KON und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		(NF anderthalb tage fahren wir nach hannover)
		(APPRART im)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NX zeitraum januar)
				(NX februar)
				[01;33m(NX[00m (NX marz)[01;31m)[00m
			(NX achtundneunzig)[01;31m)[00m)) [01;33mNX)[00m
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (20, 25), 'span': (20, 24), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KON und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		(NF anderthalb tage fahren wir nach hannover)
		(APPRART im)
		[01;31m(NX[00m
			(NX zeitraum januar)
			(NX februar)
			[01;36m(NX[00m
				(NX marz)
				(NX achtundneunzig)[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'VC', 'NF', 'APPRART', 'NX', 'NX', 'NX'], 'mover info': [('NX', (20, 22)), ('NX', (22, 23))], 'old_family': ['NX', 'NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'VC', 'NF', 'APPRART'], 'auto preterminal span': (0, 25), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP also ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)

Sentence 122:
0 Initial errors
0 on fringe, 0 iterations

Sentence 123:
0 Initial errors
0 on fringe, 0 iterations

Sentence 124:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF
				(PX
					(ADVX gleich)
					[01;36m(PX[00m
						(APPR zu)
						(NX beginn des januar)[01;36m)[00m))
			(VC versuchen)
			(NF einen termin zu finden))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV gleich))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP wir konnten gleich zu beginn des januar versuchen einen termin zu finden)

Sentence 125:
0 Initial errors
0 on fringe, 0 iterations

Sentence 126:
0 Initial errors
0 on fringe, 0 iterations

Sentence 127:
0 Initial errors
0 on fringe, 0 iterations

Sentence 128:
0 Initial errors
0 on fringe, 0 iterations

Sentence 129:
19 Initial errors
0 on fringe, 13 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				(VF
					[01;31m(NX[00m
						(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
						[01;31m(R[00m [01;33m(NX[00m
							[01;31m(C[00m
								(NX
									(PRELS der))[01;31m)[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									[01;31m(PX[00m
										(APPR um)
										[01;33m(NX[00m (NX acht uhr)[01;31m)[00m[01;31m)[00m
								[01;36m(ADJX[00m [01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN stattfindet)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				(ADVX dann)[01;31m)[00m
			(VC weg)[01;31m)[00m)) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'VC'], 'mover info': [('VC', (11, 12))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (7, 12), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'R', 'POS confusion': ('VVFIN', 'VVFIN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				(VF
					[01;31m(NX[00m
						(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
						[01;31m(R[00m [01;33m(NX[00m
							[01;31m(C[00m
								(NX
									(PRELS der))[01;31m)[00m
							[01;31m(MF[00m
								(PX
									(APPR um)
									(NX
										(NX acht uhr)
										[01;36m(ADJX[00m [01;31m(VC[00m
											[01;31m(VXFIN[00m
												(VVFIN stattfindet)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(VC weg)[01;31m)[00m)) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
						[01;31m(R[00m [01;33m(NX[00m
							[01;31m(C[00m
								(NX
									(PRELS der))[01;31m)[00m
							[01;31m(MF[00m
								(PX
									(APPR um)
									(NX
										(NX acht uhr)
										[01;36m(ADJX[00m [01;31m(VC[00m
											[01;31m(VXFIN[00m
												(VVFIN stattfindet)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(VC weg)[01;31m)[00m)) [01;33mNX)[00m
Step:Different label
{'family': ['NX', 'ADJX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VXFIN'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADJX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
						[01;31m(R[00m [01;33m(NX[00m
							[01;31m(C[00m
								(NX
									(PRELS der))[01;31m)[00m
							[01;31m(MF[00m
								(PX
									(APPR um)
									(NX
										(NX acht uhr)
										(ADJX
											[01;31m(VXFIN[00m
												(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(VC weg)[01;31m)[00m)) [01;33mNX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX', 'PX', 'ADVX', 'VC'], 'mover info': [('ADVX', (3, 4)), ('PX', (4, 12)), ('ADVX', (12, 13))], 'old_family': ['NX', 'ADVX', 'PX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 14), 'movers': ['ADVX', 'PX', 'ADVX'], 'old_parent': 'MF', 'end right siblings': ['VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF siebenundzwanzigster)
			(LK konnte)
			(MF ich)
			(ADVX naturlich)
			[01;31m(PX[00m [01;33m(PX[00m
				(APPR nach)
				[01;31m(NX[00m
					(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
					[01;31m(R[00m [01;33m(NX[00m
						[01;31m(C[00m
							(NX
								(PRELS der))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR um)
								(NX
									(NX acht uhr)
									(ADJX
										[01;31m(VXFIN[00m
											(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(VC weg)[01;31m)[00m)) [01;33mNX)[00m
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'ADVX', 'PX', 'ADVX', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(VF siebenundzwanzigster)
		(LK konnte)
		(MF ich)
		(ADVX naturlich)
		[01;31m(PX[00m [01;33m(PX[00m
			(APPR nach)
			[01;31m(NX[00m
				(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
				[01;31m(R[00m [01;33m(NX[00m
					[01;31m(C[00m
						(NX
							(PRELS der))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX
								(NX acht uhr)
								(ADJX
									[01;31m(VXFIN[00m
										(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(ADVX dann)
		(VC weg))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['VF', 'LK', 'MF', 'ADVX', 'PX', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['ADVX', 'VC'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (4, 12), 'left siblings': ['VF', 'LK', 'MF', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(VF siebenundzwanzigster)
		(LK konnte)
		(MF ich)
		(ADVX naturlich)
		(APPR [01;33m(PX[00m nach)
		[01;31m(NX[00m
			(NX meinem zahnarzttermin) [01;33mPX) SIMPX)[00m
			[01;31m(R[00m [01;33m(NX[00m
				[01;31m(C[00m
					(NX
						(PRELS der))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX
							(NX acht uhr)
							(ADJX
								[01;31m(VXFIN[00m
									(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(ADVX dann)
		(VC weg))) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'NX', 'R', 'ADVX', 'VC'], 'mover info': [('R', (7, 12))], 'old_family': ['NX', 'R'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'NX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['R'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['ADVX', 'VC'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(VF siebenundzwanzigster)
			(LK konnte)
			(MF ich)
			(ADVX naturlich)
			[01;36m(PX[00m
				(APPR nach)
				(NX meinem zahnarzttermin)[01;36m)[00m[01;36m)[00m
		(NX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS der))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX
							(NX acht uhr)
							(ADJX
								[01;31m(VXFIN[00m
									(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(VC weg))))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'NX'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [(NX (R (C (NX (PRELS der))) (MF (PX (APPR um) (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (VXFIN (VVFIN stattfindet))))))) (ADVX (ADV dann)) (VC (PTKVZ weg)))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			(MF ich)
			(ADVX naturlich)
			[01;36m(PX[00m
				(APPR nach)
				(NX meinem zahnarzttermin)[01;36m)[00m)
		(NX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS der))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX
							(NX acht uhr)
							(ADJX
								[01;31m(VXFIN[00m
									(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(VC weg))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['VF', 'LK', 'MF', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (NN siebenundzwanzigster))), (LK (VXFIN (VVFIN konnte))), (MF (NX (PPER ich))), (ADVX (ADV naturlich))], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin)
		(NX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS der))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX
							(NX acht uhr)
							(ADJX
								[01;31m(VXFIN[00m
									(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(VC weg))))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN'), 'right siblings': ['MF'], 'parent': 'R', 'auto preterminal span': (7, 12), 'span': (7, 8), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin)
		(NX
			[01;31m(R[00m
				(NX der)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX
							(NX acht uhr)
							(ADJX
								[01;31m(VXFIN[00m
									(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(VC weg))))
Step:UNSET remove
{'subtrees': ['NX', 'MF'], 'family': ['R', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['ADVX', 'VC'], 'parent': 'NX', 'auto preterminal span': (7, 14), 'span': (7, 12), 'left siblings': [], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin)
		(NX
			(NX der)
			[01;31m(MF[00m
				(PX
					(APPR um)
					(NX
						(NX acht uhr)
						(ADJX
							[01;31m(VXFIN[00m
								(VVFIN stattfindet)[01;31m)[00m)))[01;31m)[00m
			(ADVX dann)
			(VC weg))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'MF', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['ADVX', 'VC'], 'parent': 'NX', 'auto preterminal span': (7, 14), 'span': (8, 12), 'left siblings': ['NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin)
		(NX
			(NX der)
			(PX
				(APPR um)
				(NX
					(NX acht uhr)
					(ADJX
						[01;31m(VXFIN[00m
							(VVFIN stattfindet)[01;31m)[00m)))
			(ADVX dann)
			(VC weg))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin der um acht uhr stattfindet dann weg)

Sentence 130:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(PX[00m
			(NX acht uhr morgens)
			(PX zum zahnarzt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 5), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP acht uhr morgens zum zahnarzt)

Sentence 131:
0 Initial errors
0 on fringe, 0 iterations

Sentence 132:
0 Initial errors
0 on fringe, 0 iterations

Sentence 133:
0 Initial errors
0 on fringe, 0 iterations

Sentence 134:
7 Initial errors
0 on fringe, 4 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			[01;36m(PX[00m
				[01;36m(MF[00m
					[01;36m(ADVX[00m [01;31m(MF[00m
						[01;31m(ADJX[00m
							(ADJD knapp)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR ab)
							(NX zehn uhr)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['MF', 'APPR', 'NX'], 'mover info': [('MF', (1, 2))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': ['APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NF[00m
					(PX
						[01;36m(ADVX[00m [01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD knapp)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						(APPR ab)
						(NX zehn uhr))[01;31m)[00m))))
Step:Different label
{'family': ['ADVX', 'APPR', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADJX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NF[00m
					(PX
						(ADVX
							[01;31m(ADJX[00m
								(ADJD knapp)[01;31m)[00m)
						(APPR ab)
						(NX zehn uhr))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NF[00m
					(PX
						(ADVX knapp)
						(APPR ab)
						(NX zehn uhr))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 5), 'span': (1, 5), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wird knapp ab zehn uhr)

Sentence 135:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX knapp)
			[01;36m(NX[00m
				(ADJX zehn)
				(NN uhr)[01;36m)[00m[01;31m)[00m
		(NX
			[01;36m(NX[00m
				[01;36m(NX[00m
					(NX elf)
					(NX zwolf)[01;36m)[00m
				(NX eins)[01;36m)[00m
			(NX zwei))
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['ADVX', 'NX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (0, 1))], 'old_family': ['ADVX', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['ADJX', 'NN'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(ADVX knapp)
		(NX zehn uhr)
		(NX
			[01;36m(NX[00m
				[01;36m(NX[00m
					(NX elf)
					(NX zwolf)[01;36m)[00m
				(NX eins)[01;36m)[00m
			(NX zwei))
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD'), 'right siblings': [(NX (CARD eins)), (NX (CARD zwei))], 'left siblings': [], 'auto preterminal span': (3, 5), 'span': (3, 5), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(ADVX knapp)
		(NX zehn uhr)
		(NX
			[01;36m(NX[00m
				(NX elf zwolf)
				(NX eins)[01;36m)[00m
			(NX zwei))
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD'), 'right siblings': [(NX (CARD zwei))], 'left siblings': [], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(ADVX knapp)
		(NX zehn uhr)
		(NX elf zwolf eins zwei)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['ADVX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (7, 13), 'left siblings': ['ADVX', 'NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP knapp zehn uhr elf zwolf eins zwei sind wir um drei uhr da)

Sentence 136:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(NX[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN genugt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(MF[00m [01;33m(NX[00m
				(NX
					(PDS das))[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m)) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'NX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(NX
					(VVFIN genugt))[01;31m)[00m
			[01;31m(MF[00m [01;33m(NX[00m
				(NX
					(PDS das))[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m)) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['MF', 'NX', 'ADVX', 'ADVX'], 'mover info': [('MF', (1, 2))], 'old_family': ['LK', 'MF'], 'start left siblings': ['LK'], 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['MF'], 'old_parent': 'SIMPX', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': ['NX', 'ADVX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(NX
					(VVFIN genugt))[01;31m)[00m[01;31m)[00m
		(NX
			[01;31m(MF[00m
				(NX
					(PDS das))[01;31m)[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch))))
Step:Unary
{'subtrees': ['LK'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(LK[00m
			(NX
				(VVFIN genugt))[01;31m)[00m
		(NX
			[01;31m(MF[00m
				(NX
					(PDS das))[01;31m)[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX genugt)
		(NX
			[01;31m(MF[00m
				(NX
					(PDS das))[01;31m)[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX', 'ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (1, 7), 'span': (1, 2), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genugt das ein halber tag dann noch)

Sentence 137:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das muste also)
		(SIMPX fur den ersten halben tag muste das eigentlich reichen)
		(DM also)
		(NX die)
		(SIMPX dann quetschen wir die termine ein bischen zusammen)
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				(ADJX
					(ADJD flexibel))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 36), 'span': (35, 36), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das muste also fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen also da mussen die leute jetzt auch mal etwas variabel sein ich meine flexibel)

Sentence 138:
0 Initial errors
0 on fringe, 0 iterations

Sentence 139:
0 Initial errors
0 on fringe, 0 iterations

Sentence 140:
0 Initial errors
0 on fringe, 0 iterations

Sentence 141:
0 Initial errors
0 on fringe, 0 iterations

Sentence 142:
8 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
3 Error:UNSET move
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		[01;36m(PX[00m
			(APPR mit)
			[01;31m(PX[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR mit)
					[01;33m(NX[00m (NX schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
			(PX direkt am hauptbahnhof) [01;33mNX) PX)[00m[01;36m)[00m
		(SIMPX das hort sich gut an)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (6, 9))], 'old_family': ['APPR', 'PX', 'PX', 'SIMPX'], 'start left siblings': ['APPR', 'PX'], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP [01;33m(PX[00m
	(TURN
		[01;36m(PX[00m
			(APPR mit)
			[01;31m(PX[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
				(PX mit schwimm und dampfbad direkt am hauptbahnhof)[01;31m)[00m[01;36m)[00m
		(SIMPX das hort sich gut an)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'ADVX', 'PX'], 'mover info': [('APPR', (0, 1))], 'old_family': ['APPR', 'PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['PX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'TURN', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(PX
			(PX
				(APPR mit)
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m)
			(PX mit schwimm und dampfbad direkt am hauptbahnhof))
		(SIMPX das hort sich gut an)))
Step:Single Word Phrase
{'family': ['APPR', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP mit naturlich mit schwimm und dampfbad direkt am hauptbahnhof das hort sich gut an)

Sentence 143:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF es also)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es)) (ADVX (ADV also)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es)) (ADVX (ADV dann)) (ADVX (ADV mal))) (VC (VXINF (VVINF machen))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 25), 'span': (1, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF es also)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (26, 30), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben also ich wurde es also ich wurde es dann mal machen)

Sentence 144:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				(NX
					(PPOSAT mein)
					(NE gott))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C wer)
					(MF hier schon wieder eine nacht)
					(VC opfert))[01;36m)[00m))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				(NX
					(PPOSAT mein)
					(NE gott))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C wer)
					(MF hier schon wieder eine nacht)
					(VC opfert))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (MF (ADVX (ADV auch)))), (DM (NX (PPOSAT mein) (NE gott)))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				(NX
					(PPOSAT mein)
					(NE gott))[01;31m)[00m
			(NF wer hier schon wieder eine nacht opfert))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (3, 5), 'left siblings': ['SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich denke auch mein gott wer hier schon wieder eine nacht opfert)

Sentence 145:
0 Initial errors
0 on fringe, 0 iterations

Sentence 146:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			(ADVX nicht)[01;31m)[00m
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX nicht)
					(ADVX weiter)
					[01;36m(PX[00m [01;31m(ADJX[00m
						(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'PX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			(ADVX nicht)[01;31m)[00m
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KON', (19, 20)), ('DM', (20, 21))], 'old_family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['KON', 'DM'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			(ADVX nicht)[01;31m)[00m
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN brauchen))), (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (PX (ADJD grosartig))), (VC (VXINF (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			(ADVX nicht)[01;31m)[00m
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['NX', 'ADVX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht)
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'right siblings': ['NX', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 19), 'span': (6, 7), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht)
		(NX theater nicht)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(NX wir) [01;33mNX)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX', 'LK', 'MF'], 'family': ['DM', 'NX', 'ADVX', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (6, 19), 'left siblings': ['DM', 'NX', 'ADVX', 'NX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht)
		(NX theater nicht)
		[01;36m(NX[00m
			(ADVX dann)
			(ADVX vielleicht)
			(NX wir)[01;36m)[00m
		(LK gehen)
		(MF wir einfach in eine kneipe nach der nach dem meeting)
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'NX', 'ADVX', 'NX', 'NX', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'PPER'), 'right siblings': [(LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (ART eine) (NN kneipe))) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting)))), (SIMPX (KOORD (KON und)) (DM (PTKANT ja)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (PX (ADJD grosartig))) (VC (VXINF (VVINF planen))))], 'left siblings': [(DM (ADVX (ADV also))), (NX (NN kino)), (ADVX (PTKNEG nicht)), (NX (NX (NN theater)) (ADVX (PTKNEG nicht)))], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP also kino nicht theater nicht dann vielleicht wir gehen wir einfach in eine kneipe nach der nach dem meeting und ja dann brauchen wir nicht weiter grosartig planen)

Sentence 147:
0 Initial errors
0 on fringe, 0 iterations

Sentence 148:
0 Initial errors
0 on fringe, 0 iterations

Sentence 149:
0 Initial errors
0 on fringe, 0 iterations

Sentence 150:
0 Initial errors
0 on fringe, 0 iterations

Sentence 151:
0 Initial errors
0 on fringe, 0 iterations

Sentence 152:
0 Initial errors
0 on fringe, 0 iterations

Sentence 153:
0 Initial errors
0 on fringe, 0 iterations

Sentence 154:
0 Initial errors
0 on fringe, 0 iterations

Sentence 155:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(PX[00m
			[01;36m(PX[00m
				(PX wann)
				(ADVX denn)[01;36m)[00m
			(NX donnerstag)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['PX', 'NX'], 'mover info': [('NX', (2, 3))], 'old_family': ['PX', 'ADVX', 'NX'], 'start left siblings': ['PX', 'ADVX'], 'auto preterminals': ('PWAV', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (0, 3), 'movers': ['NX'], 'old_parent': 'PX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP wann denn donnerstag)

Sentence 156:
0 Initial errors
0 on fringe, 0 iterations

Sentence 157:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ice)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX ja)
				[01;33m(ADJX[00m (ADJX relativ zugig)[01;31m)[00m
			[01;31m(NF[00m
				(PX ab munchen) [01;33mADJX) MF)[00m
				(ADVX dann)[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'start right siblings': ['ADVX'], 'end left siblings': ['ADVX', 'ADJX'], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SIMPX
			(VF ice)
			(LK ist)
			(MF ja relativ zugig ab munchen)
			[01;31m(NF[00m
				(ADVX
					(ADV dann))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (7, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ice ist ja relativ zugig ab munchen dann)

Sentence 158:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(LK wurde)
					(MF ich auch)
					(VC nehmen))[01;31m)[00m
			(LK wurde)
			(MF ich)
			(VC sagen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (1, 5), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja wurde ich auch nehmen wurde ich sagen)

Sentence 159:
0 Initial errors
0 on fringe, 0 iterations

Sentence 160:
0 Initial errors
0 on fringe, 0 iterations

Sentence 161:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LV
				(NX
					[01;31m(NX[00m
						(NX ein hotel)
						[01;33m(PX[00m (PX in hannover)[01;31m)[00m
					(PX fur hundert neunzehn mark))) [01;33mPX)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK mus)
				(MF schon eine absteige)
				(VC sein)[01;36m)[00m[01;31m)[00m
		(DM oder)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'LV', 'SIMPX', 'DM'], 'mover info': [('LV', (1, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'CARD', 'CARD', 'NN', 'PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF', 'ITJ'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 16), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(LV
			(NX
				[01;31m(NX[00m
					(NX ein hotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				(PX fur hundert neunzehn mark))) [01;33mPX)[00m
		(SIMPX das mus schon eine absteige sein)
		(DM oder)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (3, 5))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'NE', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (1, 9), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP also ein hotel in hannover fur hundert neunzehn mark das mus schon eine absteige sein oder)

Sentence 162:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(ADVX doch)[01;31m)[00m
		(DM oder)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP immer doch oder)

Sentence 163:
5 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(VF (PX[00m
	(TURN
		(PX vor allem)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPR in)
					(NX munchen))[01;31m)[00m [01;33mPX) VF)[00m
			[01;36m(SIMPX[00m
				(LK haben)
				(MF wir eh alles)[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (0, 2))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(PX vor allem in munchen)
			[01;36m(SIMPX[00m
				(LK haben)
				(MF wir eh alles)[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['PX', 'SIMPX'], 'mover info': [('PX', (0, 4))], 'old_family': ['PX', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP vor allem in munchen haben wir eh alles)

Sentence 164:
0 Initial errors
0 on fringe, 0 iterations

Sentence 165:
0 Initial errors
0 on fringe, 0 iterations

Sentence 166:
0 Initial errors
0 on fringe, 0 iterations

Sentence 167:
0 Initial errors
0 on fringe, 0 iterations

Sentence 168:
0 Initial errors
0 on fringe, 0 iterations

Sentence 169:
0 Initial errors
0 on fringe, 0 iterations

Sentence 170:
0 Initial errors
0 on fringe, 0 iterations

Sentence 171:
0 Initial errors
0 on fringe, 0 iterations

Sentence 172:
16 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Clause Attachment
3 Error:Co-ordination
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							(C bis)
							[01;31m(MF[00m [01;33m(MF[00m
								(NX du)
								(ADVX immer)
								[01;31m(PX[00m
									(PX am flughafen) [01;33mMF)[00m
									[01;36m(VXFIN[00m
										[01;36m(VC[00m
											(PROP drausen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(VF[00m [01;36m(NX[00m [01;31m(VC[00m [01;33m(SIMPX[00m
							[01;31m(VXFIN[00m
								(VAFIN bist)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF schon die erste stunde vorbei)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['PROP', 'VXFIN'], 'mover info': [('PROP', (10, 11))], 'old_family': ['PX', 'PROP'], 'start left siblings': ['PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['PROP'], 'old_parent': 'PX', 'POS confusion': ('PROP', 'PROP'), 'end right siblings': ['VXFIN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(C bis)
						(MF du immer am flughafen)
						[01;31m(VC[00m
							[01;36m(VXFIN[00m
								[01;36m(VC[00m
									(PROP drausen) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(VF[00m [01;36m(NX[00m [01;31m(VXFIN[00m [01;33m(SIMPX[00m
								(VAFIN bist)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF schon die erste stunde vorbei)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:VP Attachment
{'new_parent': 'VF', 'new_family': ['SIMPX', 'VXFIN'], 'mover info': [('VXFIN', (11, 12))], 'old_family': ['PROP', 'VXFIN'], 'start left siblings': ['PROP'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (5, 12), 'movers': ['VXFIN'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(SIMPX
						(C bis)
						(MF du immer am flughafen)
						[01;36m(VXFIN[00m
							(VC
								(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
					[01;36m(VF[00m [01;36m(NX[00m [01;31m(VXFIN[00m [01;33m(SIMPX[00m
						(VAFIN bist)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
				(LK ist)
				(MF schon die erste stunde vorbei)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Single Word Phrase
{'family': ['SIMPX', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VAFIN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('VAFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'NX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(SIMPX
						(C bis)
						(MF du immer am flughafen)
						[01;36m(VXFIN[00m
							(VC
								(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
					[01;36m(VF[00m
						(NX [01;33m(SIMPX[00m
							(VAFIN bist))[01;36m)[00m[01;31m)[00m
				(LK ist)
				(MF schon die erste stunde vorbei)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 18), 'movers': ['SIMPX'], 'old_parent': 'VF', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			[01;31m(SIMPX[00m
				(SIMPX
					(C bis)
					(MF du immer am flughafen)
					[01;36m(VXFIN[00m
						(VC
							(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(VF bist)
					(LK ist)
					(MF schon die erste stunde vorbei)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Co-ordination
{'new_parent': 'P', 'new_family': ['SIMPX', 'KON', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['SIMPX', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'KON'], 'auto preterminal span': (0, 18), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					(C bis)
					(MF du immer am flughafen)
					[01;36m(VXFIN[00m
						(VC
							(PROP drausen))[01;36m)[00m))
			(SIMPX bist ist schon die erste stunde vorbei)[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Unary
{'subtrees': ['VC'], 'family': ['C', 'MF', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(C (KOUS bis)), (MF (NX (PPER du)) (ADVX (ADV immer)) (PX (APPRART am) (NX (NN flughafen))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen denn bis du immer am flughafen drausen)
			(SIMPX bist ist schon die erste stunde vorbei)[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (0, 18), 'left siblings': [], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP konnen wir ruhig machen denn bis du immer am flughafen drausen bist ist schon die erste stunde vorbei und mit dem ice ist es bequem)

Sentence 173:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(DM also)
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'VVINF', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also also wurden wir sagen wir konnten stundlich vier uhr dreiundvierzig ich wurde sagen acht uhr dreiundvierzig)

Sentence 174:
0 Initial errors
0 on fringe, 0 iterations

Sentence 175:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX kommen wir am fruhen nachmittag an)
		[01;36m(SIMPX[00m
			(SIMPX haben den ganzen nachmittag zeit)
			(SIMPX konnen dann abends noch was unternehmen)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER wir)) (PX (APPRART am) (NX (ADJX (ADJA fruhen)) (NN nachmittag)))) (VC (PTKVZ an)))], 'auto preterminal span': (6, 17), 'span': (6, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP kommen wir am fruhen nachmittag an haben den ganzen nachmittag zeit konnen dann abends noch was unternehmen)

Sentence 176:
0 Initial errors
0 on fringe, 0 iterations

Sentence 177:
0 Initial errors
0 on fringe, 0 iterations

Sentence 178:
6 Initial errors
0 on fringe, 3 iterations
3 Error:Co-ordination
2 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(NX[00m
				[01;31m(NX[00m
					(NX hotel)
					[01;33m(NX[00m (NX royal)[01;31m)[00m
				(NX schloshotel) [01;33mNX)[00m[01;36m)[00m
			[01;36m(NF[00m
				[01;36m(NX[00m
					(KON und)
					(NX hotel amgeorgengarten)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (2, 3))], 'old_family': ['NX', 'NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'NE', 'KON', 'NN', 'NE'), 'start right siblings': ['KON', 'NX'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX hotel royal schloshotel)
			[01;36m(NF[00m
				[01;36m(NX[00m
					(KON und)
					(NX hotel amgeorgengarten)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (0, 3))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'NE', 'KON', 'NN', 'NE'), 'start right siblings': ['KON', 'NX'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(NX hotel royal schloshotel)
		[01;36m(NF[00m
			(NX
				(KON und)
				(NX hotel amgeorgengarten))[01;36m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'NE'), 'right siblings': [], 'left siblings': [(NX (NX (NN hotel)) (NX (NX (NE royal)) (NX (NE schloshotel))))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP hotel royal schloshotel und hotel amgeorgengarten)

Sentence 179:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(DM[00m
	(TOP
		(TURN
			(NX
				(NE schloshotel))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP schloshotel)

Sentence 180:
0 Initial errors
0 on fringe, 0 iterations

Sentence 181:
0 Initial errors
0 on fringe, 0 iterations

Sentence 182:
9 Initial errors
0 on fringe, 5 iterations
4 Error:NP Attachment
2 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF (MF[00m
				(NX das)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(NX eulen) [01;33mMF)[00m
						[01;36m(MF[00m
							(PX
								(APPR nach)
								(NX athen))[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD wir in hannover ins theater gehen und in munchen alles vor der haustur haben))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX'], 'mover info': [('NX', (14, 15))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (9, 33), 'movers': ['NX'], 'old_parent': 'MF', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;33m(MF[00m (MF das doch eulen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD wir in hannover ins theater gehen und in munchen alles vor der haustur haben))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (15, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminal span': (9, 33), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': ['NF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;33m(MF[00m (MF das doch eulen)
			[01;31m(SIMPX[00m
				(MF nach athen) [01;33mMF)[00m
				(VC tragen)[01;31m)[00m
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'NF'], 'family': ['SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (9, 33), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;33m(MF[00m (MF das doch eulen)
		[01;31m(SIMPX[00m
			(MF nach athen) [01;33mMF)[00m
			(VC tragen)[01;31m)[00m
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (15, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;36m(MF[00m
			(MF das doch eulen)
			(MF nach athen)[01;36m)[00m
		(VC tragen)
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:Co-ordination
{'subtrees': ['MF', 'MF'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': [(VC (VXINF (VVINF tragen))), (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))) (PX (APPRART ins) (NX (NN theater)))) (VC (VXFIN (VVFIN gehen)))) (KON und) (MVC (MF (PX (APPR in) (NX (NE munchen))) (NX (PIS alles)) (PX (APPR vor) (NX (ART der) (NN haustur)))) (VC (VXFIN (VAFIN haben))))))), (DM (ITJ oder))], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PIS irgendwas)) (PX (APPRART im) (NX (NN theater)))) (VC (VXFIN (VVFIN lauft)))))), (KOORD (KON aber)), (VF (ADVX (ADV eigentlich))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP wir konnten mal kucken ob irgendwas im theater lauft aber eigentlich ist das doch eulen nach athen tragen wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben oder)

Sentence 183:
0 Initial errors
0 on fringe, 0 iterations

Sentence 184:
2 Initial errors
0 on fringe, 101 iterations
no path found

Sentence 185:
5 Initial errors
0 on fringe, 5 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(MVC[00m
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(CARD ein)[01;31m)[00m
							(KON oder)
							(ADJX zwei)[01;31m)[00m
						(NN nachte)))
				(VC buchen)[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(MVC
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(CARD ein)[01;31m)[00m
							(KON oder)
							(ADJX zwei)[01;31m)[00m
						(NN nachte)))
				(VC buchen))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'MVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': ['MVC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(KON und)
			(MVC
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(CARD ein)[01;31m)[00m
							(KON oder)
							(ADJX zwei)[01;31m)[00m
						(NN nachte)))
				(VC buchen))[01;31m)[00m))
Step:Unary
{'subtrees': ['KON', 'MVC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(KON und)
		(MVC
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(CARD ein)[01;31m)[00m
						(KON oder)
						(ADJX zwei)[01;31m)[00m
					(NN nachte)))
			(VC buchen))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'KON', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'KON', 'CARD'), 'right siblings': ['KON', 'ADJX'], 'parent': 'ADJX', 'auto preterminal span': (3, 6), 'span': (3, 4), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(KON und)
		(MVC
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						(CARD ein)
						(KON oder)
						(ADJX zwei)[01;31m)[00m
					(NN nachte)))
			(VC buchen))))
Step:Modifier Attachment
{'subtrees': ['CARD', 'KON', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'KON', 'CARD', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP und dann eben ein oder zwei nachte buchen)

Sentence 186:
0 Initial errors
0 on fringe, 0 iterations

Sentence 187:
0 Initial errors
0 on fringe, 0 iterations

Sentence 188:
17 Initial errors
0 on fringe, 12 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m [01;33m(VF (PX[00m
			(VF dann)
			(LK schlage)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			[01;33m(VF (NX (NX[00m (NX mitte)
			(APPR [01;33m(PX[00m bis)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;36m(NX[00m [01;31m(ADVX[00m
								(ADV spatestens)[01;31m)[00m [01;33mPX) NX)[00m[01;36m)[00m
							[01;36m(PX[00m
								(APPR bis)
								(NX mitte nachster woche)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX) VF) MF) PX) VF)[00m
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'ADVX', 'APPR', 'NX'], 'mover info': [('VF', (2, 3)), ('LK', (3, 4)), ('MF', (4, 5)), ('VC', (5, 6)), ('NX', (6, 7)), ('APPR', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'movers': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR'], 'old_parent': 'SIMPX', 'end right siblings': ['ADVX', 'APPR', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX
										(PPER ich))[01;31m)[00m
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								[01;36m(NX[00m
									[01;36m(VF[00m
										[01;36m(NX[00m
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												[01;36m(NX[00m [01;31m(ADVX[00m
													(ADV spatestens)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NX', 'APPR', 'NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX
										(PPER ich))[01;31m)[00m
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								[01;36m(NX[00m
									[01;36m(VF[00m
										[01;36m(NX[00m
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												(NX spatestens)[01;36m)[00m[01;36m)[00m
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'VC', 'NX', 'APPR', 'NX', 'APPR', 'NX'], 'mover info': [('VC', (5, 6)), ('NX', (6, 7)), ('APPR', (7, 8)), ('NX', (8, 9)), ('APPR', (9, 10)), ('NX', (10, 13))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NX', 'APPR', 'NX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (2, 13), 'movers': ['VC', 'NX', 'APPR', 'NX', 'APPR', 'NX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								[01;36m(NX[00m
									[01;36m(VF[00m
										[01;36m(NX[00m
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												(NX spatestens)[01;36m)[00m[01;36m)[00m
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m[01;36m)[00m[01;36m)[00m)))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET add
{'subtrees': ['NX', 'APPR', 'NX'], 'family': ['NX', 'VC', 'NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV'), 'right siblings': [(APPR bis), (NX (NX (NN mitte)) (NX (ADJX (ADJA nachster)) (NN woche)))], 'left siblings': [(NX (PPER ich)), (VC (PTKVZ vor))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								[01;36m(NX[00m
									[01;36m(VF[00m
										(NX
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												(NX spatestens)[01;36m)[00m)
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m[01;36m)[00m[01;36m)[00m)))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET add
{'subtrees': ['NX', 'APPR', 'NX'], 'family': ['NX', 'VC', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'MF', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								[01;36m(NX[00m
									(VF
										(NX
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												(NX spatestens)[01;36m)[00m)
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m)[01;36m)[00m)))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['VF'], 'family': ['NX', 'VC', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								(NX
									(VF
										(NX
											(NX mitte)
											[01;36m(PX[00m
												(APPR bis)
												(NX spatestens)[01;36m)[00m)
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m)))))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NN mitte))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								(NX
									(VF
										(NX mitte bis spatestens)
										[01;36m(PX[00m
											(APPR bis)
											(NX mitte nachster woche)[01;36m)[00m)))))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (NX (NN mitte)) (PX (APPR bis) (NX (ADV spatestens))))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'VF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF
						(PX
							(VF dann)
							(LK schlage)
							(MF
								(NX ich)
								[01;31m(VC[00m
									(PTKVZ vor)[01;31m)[00m
								(NX mitte bis spatestens bis mitte nachster woche))))
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(VF dann)
						(LK schlage)
						(MF
							(NX ich)
							[01;31m(VC[00m
								(PTKVZ vor)[01;31m)[00m
							(NX mitte bis spatestens bis mitte nachster woche))))
				(LK haben)
				(MF wir sie)
				(VC informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (2, 17), 'span': (2, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(NF[00m
			(VF
				(PX
					(VF dann)
					(LK schlage)
					(MF
						(NX ich)
						[01;31m(VC[00m
							(PTKVZ vor)[01;31m)[00m
						(NX mitte bis spatestens bis mitte nachster woche))))
			(LK haben)
			(MF wir sie)
			(VC informiert)[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'ADVX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(VF
			(PX
				(VF dann)
				(LK schlage)
				(MF
					(NX ich)
					[01;31m(VC[00m
						(PTKVZ vor)[01;31m)[00m
					(NX mitte bis spatestens bis mitte nachster woche))))
		(LK haben)
		(MF wir sie)
		(VC informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['NX', 'VC', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (5, 6), 'left siblings': ['NX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP gut dann dann schlage ich vor mitte bis spatestens bis mitte nachster woche haben wir sie informiert das muste ja dann auch noch reichen wenn wir erst im august)

Sentence 189:
0 Initial errors
0 on fringe, 0 iterations

Sentence 190:
0 Initial errors
0 on fringe, 0 iterations

Sentence 191:
0 Initial errors
0 on fringe, 0 iterations

Sentence 192:
0 Initial errors
0 on fringe, 0 iterations

Sentence 193:
0 Initial errors
0 on fringe, 0 iterations

Sentence 194:
0 Initial errors
0 on fringe, 0 iterations

Sentence 195:
0 Initial errors
0 on fringe, 0 iterations

Sentence 196:
0 Initial errors
0 on fringe, 0 iterations

Sentence 197:
0 Initial errors
0 on fringe, 0 iterations

Sentence 198:
13 Initial errors
0 on fringe, 11 iterations
2 Error:Different label
2 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Unary
1 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK gibt)
					(MF es auch hervorragende zugverbindungen)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(R[00m
						(C die)
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								[01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
								[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVFIN bestehen))[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wie)
								(MF ich hier grade)
								(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Different label
{'family': ['C', 'MF', 'LK', 'NF'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK gibt)
					(MF es auch hervorragende zugverbindungen)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(R[00m
						(C die)
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								[01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
								[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
						(LK bestehen)
						[01;31m(NF[00m
							(SIMPX
								(C wie)
								(MF ich hier grade)
								(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'P', 'new_family': ['SIMPX', 'NF', 'KON', 'SIMPX'], 'mover info': [('NF', (7, 19))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (1, 27), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['KON', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m [01;33m(SIMPX[00m
			(SIMPX dann gibt es auch hervorragende zugverbindungen)
			[01;31m(NF[00m
				[01;31m(R[00m
					(C die)
					[01;31m(MF[00m
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
							[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
					(LK bestehen)
					[01;31m(NF[00m
						(SIMPX
							(C wie)
							(MF ich hier grade)
							(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'NF', 'KON', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (SIMPX dann gibt es auch hervorragende zugverbindungen)
		[01;31m(NF[00m
			[01;31m(R[00m
				(C die)
				[01;31m(MF[00m
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
						[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
				(LK bestehen)
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(MF ich hier grade)
						(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['C', 'MF', 'LK', 'NF'], 'family': ['R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 19), 'span': (7, 19), 'left siblings': [], 'label': 'R', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (SIMPX dann gibt es auch hervorragende zugverbindungen)
		[01;31m(NF[00m
			(C die)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					[01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
					[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
			(LK bestehen)
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(MF ich hier grade)
					(VC lese))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Co-ordination
{'subtrees': ['C', 'MF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (7, 19), 'left siblings': ['DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (SIMPX dann gibt es auch hervorragende zugverbindungen)
		(C die)
		[01;31m(MF[00m
			[01;31m(ADJX[00m
				[01;31m(ADJX[00m
					(ADJD stundlich)[01;31m)[00m [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
		(LK bestehen)
		[01;31m(NF[00m
			(SIMPX
				(C wie)
				(MF ich hier grade)
				(VC lese))[01;31m)[00m [01;33mSIMPX)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'ADJX', 'auto preterminal span': (8, 13), 'span': (8, 9), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (SIMPX dann gibt es auch hervorragende zugverbindungen)
		(C die)
		[01;31m(MF[00m
			[01;31m(ADJX[00m
				(ADJD stundlich) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m
		(LK bestehen)
		[01;31m(NF[00m
			(SIMPX
				(C wie)
				(MF ich hier grade)
				(VC lese))[01;31m)[00m [01;33mSIMPX)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['ADJD', 'PX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 13), 'span': (8, 13), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (SIMPX dann gibt es auch hervorragende zugverbindungen)
		(C die)
		[01;31m(MF[00m
			(ADJD stundlich) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (PX ab vier uhr dreiundvierzig)[01;31m)[00m
		(LK bestehen)
		[01;31m(NF[00m
			(SIMPX
				(C wie)
				(MF ich hier grade)
				(VC lese))[01;31m)[00m [01;33mSIMPX)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:PP Attachment
{'subtrees': ['ADJD', 'PX'], 'family': ['DM', 'SIMPX', 'C', 'MF', 'LK', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['LK', 'NF', 'KON', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (8, 13), 'left siblings': ['DM', 'SIMPX', 'C'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;36m(SIMPX[00m
			(SIMPX dann gibt es auch hervorragende zugverbindungen)
			(C die)
			(ADJD stundlich)[01;36m)[00m
		[01;36m(SIMPX[00m
			(PX ab vier uhr dreiundvierzig)
			(LK bestehen)
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(MF ich hier grade)
					(VC lese))[01;31m)[00m[01;36m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:UNSET add
{'subtrees': ['SIMPX', 'C', 'ADJD'], 'family': ['DM', 'SIMPX', 'PX', 'LK', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD'), 'right siblings': [(PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD dreiundvierzig)))), (LK (VXFIN (VVFIN bestehen))), (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER ich)) (ADVX (ADV hier)) (ADVX (ADV grade))) (VC (VXFIN (VVFIN lese))))), (KON denn), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (ART den) (NN fahrplan)) (PX (APPR vor) (NX (PRF mir)))) (VC (VXINF (VVINF liegen))))], 'left siblings': [(DM (ITJ gut))], 'auto preterminal span': (1, 9), 'span': (1, 9), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich)
		[01;36m(SIMPX[00m
			(PX ab vier uhr dreiundvierzig)
			(LK bestehen)
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(MF ich hier grade)
					(VC lese))[01;31m)[00m[01;36m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:UNSET add
{'subtrees': ['PX', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [(KON denn), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (ART den) (NN fahrplan)) (PX (APPR vor) (NX (PRF mir)))) (VC (VXINF (VVINF liegen))))], 'left siblings': [(DM (ITJ gut)), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV auch)) (NX (ADJX (ADJA hervorragende)) (NN zugverbindungen)))) (C (NX (PRELS die))) (ADJD stundlich))], 'auto preterminal span': (9, 19), 'span': (9, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich)
		(SIMPX
			(PX ab vier uhr dreiundvierzig)
			(LK bestehen)
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(MF ich hier grade)
					(VC lese))[01;31m)[00m)
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 19), 'span': (14, 19), 'left siblings': ['PX', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese denn ich habe den fahrplan vor mir liegen)

Sentence 199:
0 Initial errors
0 on fringe, 0 iterations

Sentence 200:
0 Initial errors
0 on fringe, 0 iterations

Sentence 201:
0 Initial errors
0 on fringe, 0 iterations

Sentence 202:
0 Initial errors
0 on fringe, 0 iterations

Sentence 203:
0 Initial errors
0 on fringe, 0 iterations

Sentence 204:
0 Initial errors
0 on fringe, 0 iterations

Sentence 205:
0 Initial errors
0 on fringe, 0 iterations

Sentence 206:
0 Initial errors
0 on fringe, 0 iterations

Sentence 207:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX schloshotel)
			(NX hannover)[01;31m)[00m
		(DM ja)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP schloshotel hannover ja)

Sentence 208:
0 Initial errors
0 on fringe, 0 iterations

Sentence 209:
0 Initial errors
0 on fringe, 0 iterations

Sentence 210:
0 Initial errors
0 on fringe, 0 iterations

Sentence 211:
0 Initial errors
0 on fringe, 0 iterations

Sentence 212:
0 Initial errors
0 on fringe, 0 iterations

Sentence 213:
0 Initial errors
0 on fringe, 0 iterations

Sentence 214:
0 Initial errors
0 on fringe, 0 iterations

Sentence 215:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(LV[00m
			(SIMPX [01;33m(SIMPX[00m
				(C wenn)
				(MF ihnen oktober nicht so gut)
				(VC past))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK habe)
			(MF ich auch urlaub) [01;33mSIMPX)[00m
			(NF ende oktober)[01;31m)[00m
		(DM also)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (NX (NN urlaub))) (NF (NX (NX (NN ende)) (NX (NN oktober))))), (DM (ADVX (ADV also)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (LV wenn ihnen oktober nicht so gut past)
		[01;31m(SIMPX[00m
			(VF da)
			(LK habe)
			(MF ich auch urlaub) [01;33mSIMPX)[00m
			(NF ende oktober)[01;31m)[00m
		(DM also)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'ADV'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (8, 15), 'left siblings': ['DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(LV wenn ihnen oktober nicht so gut past)
			(VF da)
			(LK habe)
			(MF ich auch urlaub)[01;36m)[00m
		(NF ende oktober)
		(DM also)))
Step:UNSET add
{'subtrees': ['LV', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN'), 'right siblings': [(NF (NX (NX (NN ende)) (NX (NN oktober)))), (DM (ADVX (ADV also)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 13), 'span': (1, 13), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja wenn ihnen oktober nicht so gut past da habe ich auch urlaub ende oktober also)

Sentence 216:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK kommt)
			(MF
				[01;36m(NX[00m
					(ADVX erst)
					[01;31m(NX[00m
						(ART der)
						(NN november)[01;31m)[00m[01;36m)[00m
				(PX in frage)))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'NN'], 'mover info': [('ADVX', (1, 2))], 'old_family': ['ADVX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NN'), 'start right siblings': ['NX', 'PX'], 'end left siblings': [], 'auto preterminal span': (1, 6), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP kommt erst der november in frage)

Sentence 217:
0 Initial errors
0 on fringe, 0 iterations

Sentence 218:
0 Initial errors
0 on fringe, 0 iterations

Sentence 219:
0 Initial errors
0 on fringe, 0 iterations

Sentence 220:
0 Initial errors
0 on fringe, 0 iterations

Sentence 221:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ab munchen)
			(LK dauert)
			(MF
				(NX es)
				[01;36m(NX[00m [01;31m(PX[00m
					(ADVX nur)
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV etwas)[01;31m)[00m[01;36m)[00m
					(APPR uber)
					(NX vier stunden)[01;31m)[00m[01;36m)[00m))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['ADVX', 'ADVX', 'APPR', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX
			(VF ab munchen)
			(LK dauert)
			(MF
				(NX es)
				(NX
					(ADVX nur)
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV etwas)[01;31m)[00m[01;36m)[00m
					(APPR uber)
					(NX vier stunden))))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'APPR', 'NX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 28), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(SIMPX[00m
						(C so das)
						(MF wir mittags die geschaftspartner)
						(VC treffen)[01;31m)[00m
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 28))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (17, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			(NF
				(SIMPX
					(C so das)
					(MF wir mittags die geschaftspartner)
					(VC treffen)
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS so) (KOUS das)), (MF (NX (PPER wir)) (ADVX (ADV mittags)) (NX (ART die) (NN geschaftspartner))), (VC (VXFIN (VVFIN treffen)))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ab munchen dauert es nur etwas uber vier stunden und wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)

Sentence 222:
0 Initial errors
0 on fringe, 0 iterations

Sentence 223:
0 Initial errors
0 on fringe, 0 iterations

Sentence 224:
0 Initial errors
0 on fringe, 0 iterations

Sentence 225:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK nehmen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX wir)
					(ADVX dann)
					(ADVX doch)
					(NX das in der mitte)[01;36m)[00m
				[01;36m(NF[00m
					(ADVX
						(ADV vielleicht))[01;36m)[00m[01;31m)[00m)
		(SIMPX das ware das zentralhotel)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 9), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK nehmen)
			(MF wir dann doch das in der mitte)
			[01;36m(NF[00m
				(ADVX
					(ADV vielleicht))[01;36m)[00m)
		(SIMPX das ware das zentralhotel)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN nehmen))), (MF (NX (PPER wir)) (ADVX (ADV dann)) (ADVX (ADV doch)) (NX (NX (PDS das)) (PX (APPR in) (NX (ART der) (NN mitte)))))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP nehmen wir dann doch das in der mitte vielleicht das ware das zentralhotel)

Sentence 226:
0 Initial errors
0 on fringe, 0 iterations

Sentence 227:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX und ob wir am abend noch was unternehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK konnen)
			(MF wir ja dort)
			(VC absprechen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 14), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ob wir am abend noch was unternehmen das konnen wir ja dort absprechen)

Sentence 228:
0 Initial errors
0 on fringe, 0 iterations

Sentence 229:
0 Initial errors
0 on fringe, 0 iterations

Sentence 230:
0 Initial errors
0 on fringe, 0 iterations

Sentence 231:
0 Initial errors
0 on fringe, 0 iterations

Sentence 232:
0 Initial errors
0 on fringe, 0 iterations

Sentence 233:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(ADVX dann)
				(PX bis dann)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ADV'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 4), 'span': (1, 4), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX dann)
			(PX bis dann)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'APPR', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 4), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja dann bis dann)

Sentence 234:
0 Initial errors
0 on fringe, 0 iterations

Sentence 235:
0 Initial errors
0 on fringe, 0 iterations

Sentence 236:
0 Initial errors
0 on fringe, 0 iterations

Sentence 237:
0 Initial errors
0 on fringe, 0 iterations

Sentence 238:
0 Initial errors
0 on fringe, 0 iterations

Sentence 239:
0 Initial errors
0 on fringe, 0 iterations

Sentence 240:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK hatten)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(NX lust)
					(PX auf eine zugfahrt)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 7), 'span': (3, 7), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja hatten sie lust auf eine zugfahrt)

Sentence 241:
0 Initial errors
0 on fringe, 0 iterations

Sentence 242:
0 Initial errors
0 on fringe, 0 iterations

Sentence 243:
0 Initial errors
0 on fringe, 0 iterations

Sentence 244:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK fahrt)
			(MF
				[01;36m(ADJX[00m [01;31m(PX[00m
					(PX ab vier uhr dreiundvierzig)
					(ADJX stundlich)[01;31m)[00m[01;36m)[00m
				(NX ein zug)))
		(SIMPX
			(KOORD und)
			(VF die fahrtdauer)
			(LK betragt)
			[01;36m(NX[00m
				(MF
					(ADVX ubrigens)
					[01;31m(NX[00m
						(ADJX viereinhalb)
						(NN stunden)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['ADJX', 'NX'], 'auto preterminal span': (3, 8), 'span': (3, 8), 'subtrees': ['PX', 'ADJX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		(SIMPX es fahrt ab vier uhr dreiundvierzig stundlich ein zug)
		(SIMPX
			(KOORD und)
			(VF die fahrtdauer)
			(LK betragt)
			[01;36m(NX[00m
				(MF
					(ADVX ubrigens)
					[01;31m(NX[00m
						(ADJX viereinhalb)
						(NN stunden)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (14, 15))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (14, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP also es fahrt ab vier uhr dreiundvierzig stundlich ein zug und die fahrtdauer betragt ubrigens viereinhalb stunden)

Sentence 245:
0 Initial errors
0 on fringe, 0 iterations

Sentence 246:
0 Initial errors
0 on fringe, 0 iterations

Sentence 247:
9 Initial errors
0 on fringe, 8 iterations
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Co-ordination
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					[01;36m(MF[00m
						(MF [01;33m(FKOORD[00m
							[01;36m(NX[00m
								(ADVX zwar)
								(NX beide)[01;36m)[00m
							(ADJX zentral))
						[01;31m(NF[00m
							[01;31m(PX[00m
								[01;31m(ADVX[00m
									(ADV aber)[01;31m)[00m
								(ADVX nicht)
								(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m[01;31m)[00m [01;33mFKOORD)[00m
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS'), 'right siblings': [(ADJX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					[01;36m(MF[00m
						[01;33m(FKOORD[00m (MF zwar beide zentral)
						[01;31m(NF[00m
							[01;31m(PX[00m
								[01;31m(ADVX[00m
									(ADV aber)[01;31m)[00m
								(ADVX nicht)
								(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m[01;31m)[00m [01;33mFKOORD)[00m
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN sind)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'LKMN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					(MF [01;33m(FKOORD[00m
						(MF zwar beide zentral)
						[01;31m(NF[00m
							[01;31m(PX[00m
								[01;31m(ADVX[00m
									(ADV aber)[01;31m)[00m
								(ADVX nicht)
								(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m[01;31m)[00m [01;33mFKOORD)[00m
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (1, 20), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK sind)
				(MF [01;33m(FKOORD[00m
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher)[01;31m)[00m [01;33mFKOORD)[00m
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Co-ordination
{'subtrees': ['LK', 'MF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (4, 20), 'span': (4, 15), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		[01;31m(FKOORD[00m
			(LK sind)
			[01;36m(FKOORD[00m
				(MF
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKM liegen auch etwas hoher)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'FKOORD', 'SIMPX', 'SIMPX'], 'mover info': [('LK', (4, 5))], 'old_family': ['LK', 'MF', 'KON', 'LKM'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'start right siblings': ['MF', 'KON', 'LKM'], 'end left siblings': ['DM', 'VF'], 'auto preterminal span': (0, 38), 'movers': ['LK'], 'old_parent': 'FKOORD', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': ['FKOORD', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(FKOORD
			(MF
				(MF zwar beide zentral)
				[01;31m(NF[00m
					[01;31m(PX[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)
			(KON und)
			(LKM liegen auch etwas hoher))
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['ADVX', 'PX'], 'parent': 'PX', 'auto preterminal span': (8, 15), 'span': (8, 9), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(FKOORD
			(MF
				(MF zwar beide zentral)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADV aber)
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)
			(KON und)
			(LKM liegen auch etwas hoher))
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 15), 'span': (8, 15), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(FKOORD
			(MF
				(MF zwar beide zentral)
				[01;31m(PX[00m
					(ADV aber)
					(ADVX nicht)
					(PX in der nahe vom hauptbahnhof)[01;31m)[00m)
			(KON und)
			(LKM liegen auch etwas hoher))
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:PP Attachment
{'subtrees': ['ADV', 'ADVX', 'PX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 15), 'span': (8, 15), 'left siblings': ['MF'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher und ich weis nicht wie ihr budget aussieht aber mir wurde eigentlich dieses schloshotel hannover am besten passen)

Sentence 248:
0 Initial errors
0 on fringe, 0 iterations

Sentence 249:
6 Initial errors
0 on fringe, 2 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK musten)
			(MF wir uns)
			(VC erkundigen)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX die)
							(ADVX abends)[01;36m)[00m
						[01;36m(VXINF[00m [01;31m(ADJX[00m [01;33m(VC[00m
							(ADJD geoffnet)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(VC[00m
						(VXFIN
							(VAFIN haben))[01;31m)[00m))) [01;33mVC)[00m
		(SIMPX aber museumsbesuche finde ich auch sehr reizvoll)))
Step:Modifier Attachment
{'new_parent': 'VC', 'new_family': ['ADJX', 'VXFIN'], 'mover info': [('ADJX', (9, 10))], 'old_family': ['NX', 'ADVX', 'ADJX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['VXFIN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK musten)
			(MF wir uns)
			(VC erkundigen)
			(NF
				(SIMPX
					(C ob)
					(MF die abends)
					(VC
						[01;36m(VXINF[00m [01;31m(ADJX[00m
							(ADJD geoffnet)[01;31m)[00m[01;36m)[00m
						(VXFIN haben)))))
		(SIMPX aber museumsbesuche finde ich auch sehr reizvoll)))
Step:Single Word Phrase
{'family': ['VXINF', 'VXFIN'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP ja da musten wir uns erkundigen ob die abends geoffnet haben aber museumsbesuche finde ich auch sehr reizvoll)

Sentence 250:
0 Initial errors
0 on fringe, 0 iterations

Sentence 251:
0 Initial errors
0 on fringe, 0 iterations

Sentence 252:
0 Initial errors
0 on fringe, 0 iterations

Sentence 253:
0 Initial errors
0 on fringe, 0 iterations

Sentence 254:
0 Initial errors
0 on fringe, 0 iterations

Sentence 255:
0 Initial errors
0 on fringe, 0 iterations

Sentence 256:
0 Initial errors
0 on fringe, 0 iterations

Sentence 257:
0 Initial errors
0 on fringe, 0 iterations

Sentence 258:
0 Initial errors
0 on fringe, 0 iterations

Sentence 259:
0 Initial errors
0 on fringe, 0 iterations

Sentence 260:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['NX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP abgedeckt ja)

Sentence 261:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['NX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP abgedeckt ja)

Sentence 262:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;36m(NX[00m
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			[01;31m(ADVX[00m
				(ADVX erst)
				(ADVX mal)[01;31m)[00m[01;36m)[00m
		(DM und auf wiedersehen)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX', 'DM', 'ADVX', 'ADVX', 'DM'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['DM', 'DM', 'ADVX', 'DM'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(NX
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			(ADVX erst)
			(ADVX mal))
		(DM und auf wiedersehen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (2, 7), 'span': (3, 5), 'left siblings': ['ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann vielen dank erst mal und auf wiedersehen)

Sentence 263:
0 Initial errors
0 on fringe, 0 iterations

Sentence 264:
0 Initial errors
0 on fringe, 0 iterations

Sentence 265:
0 Initial errors
0 on fringe, 0 iterations

Sentence 266:
0 Initial errors
0 on fringe, 0 iterations

Sentence 267:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseburo)
				[01;33m(NX[00m (NX bonn)[01;31m)[00m[01;31m)[00m
		(DM flammersfeld) [01;33mNX)[00m
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(DM[00m
			(NX reiseburo)
			[01;33m(NX[00m (NX bonn)[01;31m)[00m
		(DM flammersfeld) [01;33mNX)[00m
		(DM guten tag)))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'ADJA', 'NN'), 'right siblings': ['DM', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX reiseburo)
		[01;36m(NX[00m
			(NX bonn)
			(DM flammersfeld)[01;36m)[00m
		(DM guten tag)))
Step:UNSET add
{'subtrees': ['NX', 'DM'], 'family': ['NX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'left siblings': [(NX (NN reiseburo))], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP reiseburo bonn flammersfeld guten tag)

Sentence 268:
0 Initial errors
0 on fringe, 0 iterations

Sentence 269:
0 Initial errors
0 on fringe, 0 iterations

Sentence 270:
0 Initial errors
0 on fringe, 0 iterations

Sentence 271:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX vierter funfter august ist auch nicht so gut weil ich dann am sechsten gleich nach potsdam fahre)
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (ADJX (ADJX (ADJA vierter)) (ADJX (ADJA funfter))) (NN august))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPRART am) (NX (NN sechsten))) (ADVX (ADV gleich)) (PX (APPR nach) (NX (NE potsdam)))) (VC (VXFIN (VVFIN fahre))))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP vierter funfter august ist auch nicht so gut weil ich dann am sechsten gleich nach potsdam fahre und)

Sentence 272:
0 Initial errors
0 on fringe, 0 iterations

Sentence 273:
3 Initial errors
0 on fringe, 1 iterations
3 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF die reiseunterlagen)
			(LK kann)
			(MF
				(NX ich)
				(ADVX dann)
				[01;36m(PX[00m [01;31m(ADVX[00m
					(PX am tag)
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(PX im buro))
			(VC abholen))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP die reiseunterlagen kann ich dann am tag vorher im buro abholen)

Sentence 274:
0 Initial errors
0 on fringe, 0 iterations

Sentence 275:
0 Initial errors
0 on fringe, 0 iterations

Sentence 276:
5 Initial errors
0 on fringe, 2 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM schonen guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				[01;36m(DM[00m
					(NX
						(NN reiseburo))[01;36m)[00m
				[01;36m(DM[00m [01;31m(NX[00m
					(NE okpue)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'NX'], 'mover info': [('NX', (4, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 5), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM schonen guten tag)
		(DM reiseburo)
		[01;36m(DM[00m [01;31m(NX[00m
			(NE okpue)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'DM'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NE'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP schonen guten tag reiseburo okpue)

Sentence 277:
0 Initial errors
0 on fringe, 0 iterations

Sentence 278:
10 Initial errors
0 on fringe, 10 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;36m(LV[00m
				(NX
					(ART die)
					(NN abreise))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(NX (ART die) (NN abreise))], 'left siblings': [], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'NX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KOORD und)
			[01;36m(LV[00m
				(NX
					(ART die)
					(NN abreise))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['KOORD', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'NX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KOORD und)
			(LV die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KOORD und)
			(LV die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					[01;36m(NF[00m
						(SIMPX
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will))[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KOORD und)
			(LV die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF
			(ADVX da)
			[01;31m(PX[00m
				(PX an eine anreise)
				(ADVX freitags den vierten juli)[01;31m)[00m)
		[01;31m(NX[00m
			(KOORD und)
			(LV die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (13, 21), 'span': (14, 21), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		[01;31m(NX[00m
			(KOORD und)
			(LV die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'LV'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (21, 24), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		(KOORD und)
		(LV die abreise)
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF
				(NX ich)
				[01;31m(ADVX[00m
					(ADVX noch)
					(PTKNEG nicht)[01;31m)[00m
				(ADJX so genau))
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (24, 48), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		(KOORD und)
		(LV die abreise)
		(VF das)
		(LK weis)
		(MF
			(NX ich)
			[01;31m(ADVX[00m
				(ADVX noch)
				(PTKNEG nicht)[01;31m)[00m
			(ADJX so genau))
		(NF
			(SIMPX
				(NF da ich eventuell ein paar tage noch in hannover verbringen will)
				[01;31m(NF[00m
					(PX
						(ADVX so)
						(APPR um)
						(NX den siebten achten juli))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'PTKNEG'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (26, 31), 'span': (27, 29), 'left siblings': ['NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		(KOORD und)
		(LV die abreise)
		(VF das)
		(LK weis)
		(MF ich noch nicht so genau)
		(NF
			(SIMPX
				(NF da ich eventuell ein paar tage noch in hannover verbringen will)
				[01;31m(NF[00m
					(PX
						(ADVX so)
						(APPR um)
						(NX den siebten achten juli))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 48), 'span': (42, 48), 'left siblings': ['NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also die termin der ware am samstag den funften juli und ich dachte da an eine anreise freitags den vierten juli und die abreise das weis ich noch nicht so genau da ich eventuell ein paar tage noch in hannover verbringen will so um den siebten achten juli)

Sentence 279:
0 Initial errors
0 on fringe, 0 iterations

Sentence 280:
0 Initial errors
0 on fringe, 0 iterations

Sentence 281:
0 Initial errors
0 on fringe, 0 iterations

Sentence 282:
21 Initial errors
0 on fringe, 10 iterations
4 Error:Modifier Attachment
4 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(PX zum einen)
					(NX das hotel am thielenplatz))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				[01;36m(PX[00m
					(MF [01;33m(PX[00m
						(ADVX so)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR bis)
								(NX hundert dreisig mark)[01;31m)[00m [01;33mPX)[00m
							(PX pro zimmer)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF [01;33m(NX (MF[00m
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (21, 22))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (21, 28), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(PX zum einen)
					(NX das hotel am thielenplatz))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF [01;33m(NX (MF[00m
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KON', 'PX'], 'mover info': [('KON', (46, 47)), ('PX', (47, 52))], 'old_family': ['KON', 'PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['NX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 69), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(PX zum einen)
					(NX das hotel am thielenplatz))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(MF[00m
				(NX
					[01;36m(PX[00m
						(MF
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
					(KON und)
					[01;31m(PX[00m
						[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADVX[00m
							(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['LK', 'ADVX', 'PX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'LK')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(PX zum einen)
					(NX das hotel am thielenplatz))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(MF[00m
				(NX
					[01;36m(PX[00m
						(MF
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
					(KON und)
					[01;31m(PX[00m
						[01;36m(VXFIN[00m
							(LK
								(ADV naturlich))[01;36m)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'auto preterminal span': (62, 63), 'span': (62, 63), 'subtrees': ['PWAV'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(PX zum einen)
					(NX das hotel am thielenplatz))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(MF[00m
				(NX
					[01;36m(PX[00m
						(MF
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
					(KON und)
					[01;31m(PX[00m
						[01;36m(VXFIN[00m
							(LK
								(ADV naturlich))[01;36m)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('LV', (13, 19))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 69), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			(NX
				(PX zum einen)
				(NX das hotel am thielenplatz))[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(MF[00m
				(NX
					[01;36m(PX[00m
						(MF
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
					(KON und)
					[01;31m(PX[00m
						[01;36m(VXFIN[00m
							(LK
								(ADV naturlich))[01;36m)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (42, 43))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 46), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			(NX
				(PX zum einen)
				(NX das hotel am thielenplatz))[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(MF[00m
				(NX
					(MF so bis zweihundert zwanzig)
					(KON und)
					[01;31m(PX[00m
						[01;36m(VXFIN[00m
							(LK
								(ADV naturlich))[01;36m)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['MF', 'KON', 'LK', 'ADVX', 'PX'], 'mover info': [('LK', (47, 48)), ('ADVX', (48, 49))], 'old_family': ['LK', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['MF', 'KON'], 'auto preterminal span': (42, 52), 'adding node already present': False, 'movers': ['LK', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			(NX
				(PX zum einen)
				(NX das hotel am thielenplatz))[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			(MF
				(NX
					(MF so bis zweihundert zwanzig)
					(KON und)
					[01;36m(VXFIN[00m
						(LK
							(ADV naturlich))[01;36m)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche))))
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Unary
{'subtrees': ['LK'], 'family': ['MF', 'KON', 'VXFIN', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADVX (ADV jetzt)), (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))], 'left siblings': [(MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig)))), (KON und)], 'auto preterminal span': (47, 48), 'span': (47, 48), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			(NX
				(PX zum einen)
				(NX das hotel am thielenplatz))[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['C', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen)))))), (LV (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer)))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN geht))) (MF (NX (MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig)))) (KON und) (VXFIN (LK (ADV naturlich))) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))))), (NX (ART das) (NE grandhotel)), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen))))], 'auto preterminal span': (62, 69), 'span': (62, 69), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			(NX
				(PX zum einen)
				(NX das hotel am thielenplatz))[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche)
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen zum einen das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel da musten sie allerdings schon funfhundert mark hinlegen wobei ich weis ja nicht ob das)

Sentence 283:
0 Initial errors
0 on fringe, 0 iterations

Sentence 284:
0 Initial errors
0 on fringe, 0 iterations

Sentence 285:
0 Initial errors
0 on fringe, 0 iterations

Sentence 286:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(ADVX[00m
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV naturlich)[01;31m)[00m[01;36m)[00m
			(ADVX da)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'ADVX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(ADVX[00m
			(DM naturlich)
			(ADVX da)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX'], 'family': ['DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(ADVX da)
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja naturlich da grade am wochenende)

Sentence 287:
0 Initial errors
0 on fringe, 0 iterations

Sentence 288:
0 Initial errors
0 on fringe, 0 iterations

Sentence 289:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(DM
				(ITJ tschus))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 290:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(NX
				(NX schonen dank)
				(PX fur den anruf))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja schonen dank fur den anruf)

Sentence 291:
0 Initial errors
0 on fringe, 0 iterations

Sentence 292:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(DM
				(ITJ tschus))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 293:
12 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX erst)
					(ADVX mal)
					[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
				[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(CARD drei)[01;31m)[00m[01;36m)[00m
					[01;31m(ADVX[00m
						[01;31m(ADVX[00m
							(ADV morgens)[01;31m)[00m [01;33mNX)[00m
						(ADVX mittags) [01;33mNX)[00m
						(KON und)
						(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (6, 11))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(CARD drei)[01;31m)[00m[01;36m)[00m
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADV morgens)[01;31m)[00m [01;33mNX)[00m
							(ADVX mittags) [01;33mNX)[00m
							(KON und)
							(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Single Word Phrase
{'family': ['ADJX', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['CARD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
						(ADJX drei)
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADV morgens)[01;31m)[00m [01;33mNX)[00m
							(ADVX mittags) [01;33mNX)[00m
							(KON und)
							(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (6, 11), 'span': (6, 11), 'subtrees': ['ADJX', 'ADVX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'NX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					(NX [01;33m(NX (NX[00m
						(ADJX drei)
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADV morgens)[01;31m)[00m [01;33mNX)[00m
							(ADVX mittags) [01;33mNX)[00m
							(KON und)
							(ADVX abends)[01;31m)[00m)))[01;31m)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'ADVX', 'KON', 'ADVX'], 'mover info': [('ADVX', (8, 9)), ('KON', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'KON', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (4, 11), 'adding node already present': False, 'movers': ['ADVX', 'KON', 'ADVX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					(NX
						[01;36m(NX[00m
							(NX
								(ADJX drei)
								[01;31m(ADVX[00m
									(ADV morgens)[01;31m)[00m)
							(ADVX mittags)[01;36m)[00m
						(KON und)
						(ADVX abends))))[01;31m)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV', 'ADV'), 'right siblings': [(KON und), (ADVX (ADV abends))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					(NX
						(NX
							(NX
								(ADJX drei)
								[01;31m(ADVX[00m
									(ADV morgens)[01;31m)[00m)
							(ADVX mittags))
						(KON und)
						(ADVX abends))))[01;31m)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (0, 11), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF da)
		(LK fahren)
		(MF
			(ADVX erst)
			(ADVX mal)
			(NX
				(NX verschiedene zuge)
				(NX
					(NX
						(NX
							(ADJX drei)
							[01;31m(ADVX[00m
								(ADV morgens)[01;31m)[00m)
						(ADVX mittags))
					(KON und)
					(ADVX abends))))
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADJX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 8), 'span': (7, 8), 'left siblings': ['ADJX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP da fahren erst mal verschiedene zuge drei morgens mittags und abends da konnten sie sich schon mal auswahlen)

Sentence 294:
0 Initial errors
0 on fringe, 0 iterations

Sentence 295:
6 Initial errors
0 on fringe, 6 iterations
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX
			(VF da)
			(LK haben)
			(MF
				(NX wir)
				(NX
					[01;31m(ADJX[00m
						(ADJA verschiedene)[01;31m)[00m
					(NN preisklassen))))
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				[01;36m(PX[00m
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							[01;31m(PX[00m
								(APPR bis)
								[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m))[01;36m)[00m)))) [01;33mNX)[00m
Step:PP Attachment
{'subtrees': ['APPR', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (24, 30), 'span': (24, 30), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX
			(VF da)
			(LK haben)
			(MF
				(NX wir)
				(NX
					[01;31m(ADJX[00m
						(ADJA verschiedene)[01;31m)[00m
					(NN preisklassen))))
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(PX
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							[01;31m(PX[00m
								(APPR bis)
								[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m))))))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['KON', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (0, 10), 'span': (2, 10), 'left siblings': ['KON', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX und dann diese zwei nachte die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX
			(VF da)
			(LK haben)
			(MF
				(NX wir)
				(NX
					[01;31m(ADJX[00m
						(ADJA verschiedene)[01;31m)[00m
					(NN preisklassen))))
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(PX
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							[01;31m(PX[00m
								(APPR bis)
								[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m))))))) [01;33mNX)[00m
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (18, 20), 'span': (18, 19), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(NX und dann diese zwei nachte die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(PX
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							[01;31m(PX[00m
								(APPR bis)
								[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m))))))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (27, 30), 'span': (27, 29), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX und dann diese zwei nachte die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(PX
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							(APPR bis)
							[01;36m(NX[00m
								(NX funfhundert)
								[01;31m(ADVX[00m
									(ADV aufwarts)[01;31m)[00m[01;36m)[00m)))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'left siblings': [(APPR bis)], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX und dann diese zwei nachte die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(PX
					(APPR zwischen)
					(PX
						(PX von funfundachtzig)
						(PX
							(APPR bis)
							(NX
								(NX funfhundert)
								[01;31m(ADVX[00m
									(ADV aufwarts)[01;31m)[00m))))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['NX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und dann diese zwei nachte die sie da bleiben mochten da wurde ich mal nachschauen da haben wir verschiedene preisklassen und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)

Sentence 296:
9 Initial errors
0 on fringe, 5 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			[01;36m(PX[00m
				(VF
					[01;31m(NX[00m
						(NN hauptsache)[01;31m)[00m)[01;36m)[00m
			(LK ist)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS das)[01;31m)[00m
					[01;36m(NX[00m
						(MF
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
					(VC liegt))))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (13, 14))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (11, 14), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			[01;36m(PX[00m
				(VF
					[01;31m(NX[00m
						(NN hauptsache)[01;31m)[00m)[01;36m)[00m
			(LK ist)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS das)[01;31m)[00m
					(MF
						(NX
							(ART das)
							(NX
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
					(VC liegt))))))
Step:Single Word Phrase
{'family': ['PX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS das)[01;31m)[00m
					(MF
						(NX
							(ART das)
							(NX
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
					(VC liegt))))))
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS das)[01;31m)[00m
					(MF
						(NX
							(ART das)
							(NX
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m
								(NX zentral))))
					(VC liegt))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS das)[01;31m)[00m
					(MF das hotel zentral)
					(VC liegt))))))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (10, 15), 'span': (10, 11), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP es kann schon eine gehobene preisklasse sein und hauptsache ist das das hotel zentral liegt)

Sentence 297:
0 Initial errors
0 on fringe, 0 iterations

Sentence 298:
0 Initial errors
0 on fringe, 0 iterations

Sentence 299:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ ach)[01;36m)[00m
			[01;36m(DM[00m
				(ITJ gut)[01;36m)[00m[01;31m)[00m
		(DM herr doll)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['ITJ', 'DM', 'DM'], 'mover info': [('ITJ', (0, 1))], 'old_family': ['ITJ', 'ITJ'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'NE'), 'start right siblings': ['ITJ'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ITJ'], 'old_parent': 'DM', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(DM herr doll)))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'DM', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (ITJ gut)), (DM (NX (NN herr) (NE doll)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ach gut herr doll)

Sentence 300:
0 Initial errors
0 on fringe, 0 iterations

Sentence 301:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM einen moment)
		(SIMPX
			(VF da)
			(LK mus)
			(MF
				(NX ich)
				(ADVX erst)
				(ADVX mal)
				[01;31m(NX[00m
					(PPOSAT mein)
					(NN portemonnaie)[01;31m)[00m)
			(VC aufmachen))
		(SIMPX die kontonummer ist neun vier sechs zwo drei acht)))
Step:UNSET remove
{'subtrees': ['PPOSAT', 'NN'], 'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 10), 'span': (8, 10), 'left siblings': ['NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja einen moment da mus ich erst mal mein portemonnaie aufmachen die kontonummer ist neun vier sechs zwo drei acht)

Sentence 302:
0 Initial errors
0 on fringe, 0 iterations

Sentence 303:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX neun)
			(NX vier)
			(NX sechs)
			(NX zwei)
			(NX drei)
			(NX acht)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (0, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP neun vier sechs zwei drei acht)

Sentence 304:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(NX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LV die bank)[01;36m)[00m
			(VF das)
			(LK ist)
			(MF die raiffeisenbank in bonn)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'LV'], 'family': ['NX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN'), 'right siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ist))), (MF (NX (NX (ART die) (NE raiffeisenbank)) (PX (APPR in) (NX (NE bonn)))))], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LV die bank))
			(VF das)
			(LK ist)
			(MF die raiffeisenbank in bonn)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LV'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN'), 'right siblings': ['LV'], 'parent': 'NX', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(NX und die bank)
			(VF das)
			(LK ist)
			(MF die raiffeisenbank in bonn)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (0, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und die bank das ist die raiffeisenbank in bonn)

Sentence 305:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(PX[00m [01;31m(NX[00m
			[01;31m(NX[00m
				(NE raiffeisenbank)[01;31m)[00m
			(NX bonn)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['DM', 'PX'], 'auto preterminal span': (1, 3), 'span': (1, 3), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('NE', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(DM ja)
		(PX
			[01;31m(NX[00m
				(NE raiffeisenbank)[01;31m)[00m
			(NX bonn))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (1, 3), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja raiffeisenbank bonn)

Sentence 306:
0 Initial errors
0 on fringe, 0 iterations

Sentence 307:
11 Initial errors
0 on fringe, 8 iterations
2 Error:UNSET move
2 Error:Co-ordination
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ ach)[01;36m)[00m
			[01;36m(DM[00m
				(ITJ gut)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX (NF[00m ob)[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								[01;33m(NX[00m (NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes))) [01;33mNX)[00m
					(VC ist)))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'ITJ', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('ITJ', (1, 2))], 'old_family': ['ITJ', 'ITJ'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['ITJ'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 23), 'movers': ['ITJ'], 'old_parent': 'DM', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX (NF[00m ob)[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								[01;33m(NX[00m (NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes))) [01;33mNX)[00m
					(VC ist)))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'KON', 'NX'], 'mover info': [('NX', (13, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIS', 'NN', 'KON', 'PIS', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (12, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['KON', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX (NF[00m ob)[01;31m)[00m
					(MF das nix halbes und nix ganzes)
					(VC ist)))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'ITJ', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (18, 19))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'ITJ', 'DM', 'SIMPX'], 'auto preterminal span': (0, 23), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX (NF[00m ob)[01;31m)[00m
					(MF das nix halbes und nix ganzes)
					(VC ist)))) [01;33mNF) SIMPX)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (ITJ gut)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN hort))) (MF (NX (PRF sich)) (ADVX (ADV immer)) (ADVX (ADV so))) (VC (PTKVZ an)) (NF (SIMPX (C (KOUS als) (KOUS ob)) (MF (NX (PDS das)) (NX (NX (PIS nix)) (NX (NX (NN halbes)) (KON und) (NX (NX (PIS nix)) (NX (NN ganzes)))))) (VC (VXFIN (VAFIN ist)))))), (KOORD (KON oder)), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)) (NX (PDS das))))], 'left siblings': [(DM (ITJ aha))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ach)
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX (NF[00m ob)[01;31m)[00m
					(MF das nix halbes und nix ganzes)
					(VC ist)))) [01;33mNF) SIMPX)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:UNSET remove
{'subtrees': ['KOUS', 'KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (9, 18), 'span': (9, 11), 'left siblings': [], 'label': 'C', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ach)
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					(KOUS als)
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(KOUS ob)
							(MF das nix halbes und nix ganzes)
							(VC ist)[01;36m)[00m[01;36m)[00m)))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:UNSET add
{'subtrees': ['KOUS', 'MF', 'VC'], 'family': ['KOUS', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOUS als)], 'auto preterminal span': (10, 18), 'span': (10, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ach)
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					(KOUS als)
					[01;36m(NF[00m
						(SIMPX
							(KOUS ob)
							(MF das nix halbes und nix ganzes)
							(VC ist))[01;36m)[00m)))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOUS', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOUS als)], 'auto preterminal span': (10, 18), 'span': (10, 18), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ach)
		(DM gut)
		(SIMPX das hort sich immer so an als ob das nix halbes und nix ganzes ist)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (18, 19), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP aha ach gut das hort sich immer so an als ob das nix halbes und nix ganzes ist oder wie sehe ich das)

Sentence 308:
11 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
4 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					[01;31m(NX[00m [01;33m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP vermerkt)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX wenn sie mir ihre adresse grade noch geben wurden) [01;33mSIMPX)[00m
				(NX das)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['PDS', 'VC'], 'mover info': [('VC', (5, 6))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP'), 'start right siblings': [], 'end left siblings': ['PDS'], 'auto preterminal span': (1, 6), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX wenn sie mir ihre adresse grade noch geben wurden) [01;33mSIMPX)[00m
				(NX das)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (11, 20)), ('NX', (20, 21))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'NX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 21), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(SIMPX und ich schicke ihnen dann)
			(SIMPX wenn sie mir ihre adresse grade noch geben wurden)[01;36m)[00m
		(NX das)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [(NX (PDS das))], 'left siblings': [(DM (PTKANT nein)), (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das) (VC (VXINF (VVPP vermerkt))))))], 'auto preterminal span': (6, 20), 'span': (6, 20), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
		(NX das)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['PDS', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VXINF[00m
						(VVPP vermerkt)[01;31m)[00m)))
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
		(NX das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['PDS', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP nein jetzt habe ich das vermerkt und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)

Sentence 309:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(NN strase)[01;36m)[00m[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX hirschberger)
							[01;36m(ADVX[00m
								(NN strase)[01;36m)[00m[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADVX (ADJA hirschberger))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX hirschberger)
							(ADVX strase)[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (3, 6), 'span': (3, 5), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADVX hirschberger)
						(ADVX strase)
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (3, 13), 'span': (3, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ADVX hirschberger)
					(ADVX strase)
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (3, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				(ADVX hirschberger)
				(ADVX strase)
				(NX vierundsechzig)
				(PX
					(APPR in)
					(NX
						[01;31m(NX[00m
							(NX funf)
							(NX drei)
							(NX eins)
							(NX eins)
							(NX neun)[01;31m)[00m
						(NE bonn)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP ja da ist hirschberger strase vierundsechzig in funf drei eins eins neun bonn)

Sentence 310:
0 Initial errors
0 on fringe, 0 iterations

Sentence 311:
0 Initial errors
0 on fringe, 0 iterations

Sentence 312:
10 Initial errors
0 on fringe, 5 iterations
6 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			(MF sie mit der bahn)
			(VC fahren)
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							(KON oder)
							(PX mit dem bus) [01;33mSIMPX) NF) SIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(DM[00m
						(KON oder)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'SIMPX', 'KON'], 'mover info': [('KON', (18, 19))], 'old_family': ['KON', 'PX', 'KON'], 'start left siblings': ['KON', 'PX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)) (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten))))), (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus))))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX', 'SIMPX'], 'family': ['NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (0, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX erst)
		(ADVX mal)
		(NX die frage)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(SIMPX wie sie anreisen mochten)
				(SIMPX ob sie mit der bahn fahren oder mit dem bus)[01;36m)[00m[01;36m)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['ADVX', 'ADVX', 'NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(ADVX (ADV erst)), (ADVX (ADV mal)), (NX (ART die) (NN frage))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX erst)
		(ADVX mal)
		(NX die frage)
		[01;36m(NF[00m
			(SIMPX
				(SIMPX wie sie anreisen mochten)
				(SIMPX ob sie mit der bahn fahren oder mit dem bus))[01;36m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['ADVX', 'ADVX', 'NX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(ADVX (ADV erst)), (ADVX (ADV mal)), (NX (ART die) (NN frage))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP erst mal die frage wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus oder)

Sentence 313:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX moglichst)
					[01;36m(PX[00m
						(APPR mit)
						(NX der bahn)[01;36m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 8), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja ich dachte mir moglichst mit der bahn)

Sentence 314:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK hatten)
			(MF sie sich schon)
			(VC uberlegt)
			(NF
				(SIMPX
					(C wann)
					(MF sie)
					(VC ankommen mochten)
					[01;31m(NF[00m
						(ADVX
							(ADVX morgens)
							(KON oder)
							(ADVX abends))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (6, 13), 'span': (10, 13), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und hatten sie sich schon uberlegt wann sie ankommen mochten morgens oder abends)

Sentence 315:
4 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			[01;31m(ADVX[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD lieber)[01;31m)[00m[01;36m)[00m
				(ADVX gern)
				(ADVX morgens)[01;31m)[00m))[01;36m)[00m
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (1, 2)), ('ADVX', (2, 3))], 'old_family': ['ADJX', 'ADVX', 'ADVX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('ADJD', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 3), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(PX
		(TURN
			(ADVX
				[01;31m(ADJX[00m
					(ADJD lieber)[01;31m)[00m)
			(ADVX gern)
			(ADVX morgens))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP lieber gern morgens)

Sentence 316:
0 Initial errors
0 on fringe, 0 iterations

Sentence 317:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF was)
			(LK hatten)
			(MF
				[01;36m(MF[00m
					(NX sie)
					(ADVX denn)
					(ADVX da)[01;36m)[00m
				(APPR fur)
				(ART eine)
				(PX fur eine zugverbindung)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['MF', 'APPR', 'ART', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV'), 'right siblings': [(APPR fur), (ART eine), (PX (APPR fur) (NX (ART eine) (NN zugverbindung)))], 'left siblings': [], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP was hatten sie denn da fur eine fur eine zugverbindung)

Sentence 318:
0 Initial errors
0 on fringe, 0 iterations

Sentence 319:
0 Initial errors
0 on fringe, 0 iterations

Sentence 320:
0 Initial errors
0 on fringe, 0 iterations

Sentence 321:
0 Initial errors
0 on fringe, 0 iterations

Sentence 322:
0 Initial errors
0 on fringe, 0 iterations

Sentence 323:
0 Initial errors
0 on fringe, 0 iterations

Sentence 324:
0 Initial errors
0 on fringe, 0 iterations

Sentence 325:
0 Initial errors
0 on fringe, 0 iterations

Sentence 326:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das musten sie)
		(SIMPX
			(VF das)
			(LK musten)
			[01;31m(FKOORD[00m
				(MVC sie schon selber zum zum bahnhof bringen)
				(KON und)
				(MVCN von da aus dann halt transportieren lassen vielleicht)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPRART', 'APPRART', 'NN', 'VVINF', 'KON', 'APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (6, 22), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das musten sie das musten sie schon selber zum zum bahnhof bringen und von da aus dann halt transportieren lassen vielleicht)

Sentence 327:
0 Initial errors
0 on fringe, 0 iterations

Sentence 328:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(DM herr klein)
		[01;36m(SIMPX[00m
			(SIMPX ich mache das fertig)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					(MF ich sie noch mal)
					(VC anrufen)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(DM herr klein)
		(SIMPX
			(SIMPX ich mache das fertig)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX dann werde ich sie noch mal anrufen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (4, 16), 'span': (8, 9), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja sicher herr klein ich mache das fertig und dann werde ich sie noch mal anrufen)

Sentence 329:
0 Initial errors
0 on fringe, 0 iterations

Sentence 330:
0 Initial errors
0 on fringe, 0 iterations

Sentence 331:
0 Initial errors
0 on fringe, 0 iterations

Sentence 332:
0 Initial errors
0 on fringe, 0 iterations

Sentence 333:
0 Initial errors
0 on fringe, 0 iterations

Sentence 334:
0 Initial errors
0 on fringe, 0 iterations

Sentence 335:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK wurden)
					(MF
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD besser)[01;31m)[00m[01;36m)[00m
						(ADJX ziemlich fruh))
					(VC fahren)
					(NF
						(SIMPX
							(C damit)
							(FKOORD
								(MVC
									(MF
										(NX wir)
										(ADVX morgens)
										[01;31m(ADVX[00m
											(ADV direkt)[01;31m)[00m
										(ADVX da))
									(VC sind))
								(KON und)
								(MVC dann direkt auf die messe losgehen konnen)))))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK wurden)
					(MF besser ziemlich fruh)
					(VC fahren)
					(NF
						(SIMPX
							(C damit)
							(FKOORD
								(MVC
									(MF
										(NX wir)
										(ADVX morgens)
										[01;31m(ADVX[00m
											(ADV direkt)[01;31m)[00m
										(ADVX da))
									(VC sind))
								(KON und)
								(MVC dann direkt auf die messe losgehen konnen)))))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['NX', 'ADVX', 'ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (11, 15), 'span': (13, 14), 'left siblings': ['NX', 'ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich wurde sagen wir wurden besser ziemlich fruh fahren damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)

Sentence 336:
0 Initial errors
0 on fringe, 0 iterations

Sentence 337:
0 Initial errors
0 on fringe, 0 iterations

Sentence 338:
0 Initial errors
0 on fringe, 0 iterations

Sentence 339:
0 Initial errors
0 on fringe, 0 iterations

Sentence 340:
0 Initial errors
0 on fringe, 0 iterations

Sentence 341:
0 Initial errors
0 on fringe, 0 iterations

Sentence 342:
0 Initial errors
0 on fringe, 0 iterations

Sentence 343:
0 Initial errors
0 on fringe, 0 iterations

Sentence 344:
0 Initial errors
0 on fringe, 0 iterations

Sentence 345:
0 Initial errors
0 on fringe, 0 iterations

Sentence 346:
0 Initial errors
0 on fringe, 0 iterations

Sentence 347:
0 Initial errors
0 on fringe, 0 iterations

Sentence 348:
0 Initial errors
0 on fringe, 0 iterations

Sentence 349:
0 Initial errors
0 on fringe, 0 iterations

Sentence 350:
0 Initial errors
0 on fringe, 0 iterations

Sentence 351:
0 Initial errors
0 on fringe, 0 iterations

Sentence 352:
0 Initial errors
0 on fringe, 0 iterations

Sentence 353:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ tschus)[01;36m)[00m
			(ADVX dann)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ITJ', 'ADVX'], 'start left siblings': ['ITJ'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 3), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja tschus dann)

Sentence 354:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(DM
				(ITJ tschus))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 355:
3 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseagentur)
				[01;33m(NX[00m (NX maritim)[01;31m)[00m[01;31m)[00m
		(DM fischenbeck am apparat) [01;33mNX)[00m
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'right siblings': ['DM', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX reiseagentur)
			[01;33m(NX[00m (NX maritim)[01;31m)[00m
		(DM fischenbeck am apparat) [01;33mNX)[00m
		(DM guten tag)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'DM', 'DM'], 'mover info': [('NX', (1, 2))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['DM', 'DM'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP reiseagentur maritim fischenbeck am apparat guten tag)

Sentence 356:
0 Initial errors
0 on fringe, 0 iterations

Sentence 357:
0 Initial errors
0 on fringe, 0 iterations

Sentence 358:
0 Initial errors
0 on fringe, 0 iterations

Sentence 359:
7 Initial errors
0 on fringe, 2 iterations
5 Error:NP Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (NX[00m
		(TURN
			(NX geschaft)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN geschaft))[01;31m)[00m [01;33mNX) VF)[00m
				(LK ist)
				[01;36m(ADVX[00m
					(MF
						[01;31m(NX[00m
							(NN geschaft)[01;31m)[00m)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'VAFIN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX
			(NX geschaft geschaft)
			(LK ist)
			[01;36m(ADVX[00m
				(MF
					[01;31m(NX[00m
						(NN geschaft)[01;31m)[00m)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP geschaft geschaft ist geschaft)

Sentence 360:
0 Initial errors
0 on fringe, 0 iterations

Sentence 361:
0 Initial errors
0 on fringe, 0 iterations

Sentence 362:
0 Initial errors
0 on fringe, 0 iterations

Sentence 363:
0 Initial errors
0 on fringe, 0 iterations

Sentence 364:
4 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK macht)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX achtundsiebzig mark) [01;33mMF)[00m
					[01;36m(NF[00m
						(ADVX
							(ADV einfach))[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 6), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK macht)
			(MF dann achtundsiebzig mark)
			[01;36m(NF[00m
				(ADVX
					(ADV einfach))[01;36m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VVFIN macht))), (MF (ADVX (ADV dann)) (NX (ADJX (CARD achtundsiebzig)) (NN mark)))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP das macht dann achtundsiebzig mark einfach)

Sentence 365:
0 Initial errors
0 on fringe, 0 iterations

Sentence 366:
14 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				[01;31m(NX[00m [01;33m(NX[00m
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel) [01;33mNX)[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(VC anbieten))
		[01;36m(NF[00m
			[01;36m(NX[00m
				(ART [01;33m(NX[00m das)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zentrale)
						(NN lage)[01;31m)[00m [01;33mNX)[00m
					(PX mit garage)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN'], 'mover info': [('ART', (8, 9))], 'old_family': ['SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				[01;31m(NX[00m [01;33m(NX[00m
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel) [01;33mNX)[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(VC anbieten))
		[01;36m(NF[00m
			(NX
				(NX das zentrale lage)
				(PX mit garage))[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'NX'], 'mover info': [('NX', (6, 7))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'PPER', 'ART', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (2, 7), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX das grandhotel)
				[01;36m(ADJX[00m [01;31m(NX[00m
					(NE musmann)[01;31m)[00m[01;36m)[00m)
			(VC anbieten))
		[01;36m(NF[00m
			(NX
				(NX das zentrale lage)
				(PX mit garage))[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:Single Word Phrase
{'family': ['NX', 'NX', 'NX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['NE'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
		[01;36m(NF[00m
			(NX
				(NX das zentrale lage)
				(PX mit garage))[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (22, 25))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (20, 33), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
		[01;36m(NF[00m
			(NX
				(NX das zentrale lage)
				(PX mit garage))[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'NN'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER sie)) (ADVX (ADV zwar)) (ADVX (PTKNEG nicht)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN liegt))) (MF (NX (ART die) (NN preiskategorie)) (PX (PX (APPR fur) (NX (ART ein) (NN einzelzimmer))) (PX (APPR bei) (NX (NX (ADJX (CARD hundert) (CARD achtundsiebzig)) (NN mark)) (APPR bis) (NX (ADJX (CARD funfhundert) (CARD achtzehn)) (NN mark)))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (ART das) (NX (NE grandhotel))) (ADJX (NE musmann))) (VC (VXINF (VVINF anbieten))))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
		(NF das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (26, 33), 'span': (30, 33), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
		(NF das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX
							[01;36m(ADJX[00m
								(NX hundert achtundsiebzig mark)
								(APPR bis)
								(ADJX funfhundert achtzehn)[01;36m)[00m
							(NN mark))))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (26, 32), 'span': (26, 32), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage die brauchen sie zwar nicht da liegt die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)

Sentence 367:
0 Initial errors
0 on fringe, 0 iterations

Sentence 368:
0 Initial errors
0 on fringe, 0 iterations

Sentence 369:
0 Initial errors
0 on fringe, 0 iterations

Sentence 370:
0 Initial errors
0 on fringe, 0 iterations

Sentence 371:
9 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
4 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK waren)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV dann)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF wieviel)
						(LK sagten)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m[01;31m)[00m
					(NX zweihundert)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (19, 22)), ('NX', (22, 23))], 'old_family': ['ADVX', 'SIMPX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 23), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)))
		(SIMPX das waren dann)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wieviel)
				(LK sagten)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			(NX zweihundert)[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 23), 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)))
		(SIMPX das waren dann)
		(SIMPX wieviel sagten sie zweihundert)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (15, 16), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach das waren dann wieviel sagten sie zweihundert)

Sentence 372:
0 Initial errors
0 on fringe, 0 iterations

Sentence 373:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX zweihundert dreisig mark)
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m
				(NX eine einfache fahrt)
				(ADVX zuruck)[01;31m)[00m[01;31m)[00m
		(DM ja)))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (3, 8), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX zweihundert dreisig mark)
		(KON und)
		[01;31m(NX[00m
			(NX eine einfache fahrt)
			(ADVX zuruck)[01;31m)[00m
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (4, 8), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP zweihundert dreisig mark und eine einfache fahrt zuruck ja)

Sentence 374:
0 Initial errors
0 on fringe, 0 iterations

Sentence 375:
0 Initial errors
0 on fringe, 0 iterations

Sentence 376:
0 Initial errors
0 on fringe, 0 iterations

Sentence 377:
0 Initial errors
0 on fringe, 0 iterations

Sentence 378:
0 Initial errors
0 on fringe, 0 iterations

Sentence 379:
0 Initial errors
0 on fringe, 0 iterations

Sentence 380:
0 Initial errors
0 on fringe, 0 iterations

Sentence 381:
0 Initial errors
0 on fringe, 0 iterations

Sentence 382:
0 Initial errors
0 on fringe, 0 iterations

Sentence 383:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(LK sagen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					(NX mir)
					(NX ihren namen)
					(ADVX noch)
					(ADVX mal)[01;31m)[00m[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(DM[00m
				(PTKANT bitte)[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'DM'], 'mover info': [('DM', (7, 8))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVIMP', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'PTKANT'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK sagen)
			(MF
				(NX sie)
				(NX mir)
				(NX ihren namen)
				(ADVX noch)
				(ADVX mal)
				[01;36m(ADVX[00m [01;31m(DM[00m
					(PTKANT bitte)[01;31m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['PTKANT'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP sagen sie mir ihren namen noch mal bitte)

Sentence 384:
0 Initial errors
0 on fringe, 0 iterations

Sentence 385:
0 Initial errors
0 on fringe, 0 iterations

Sentence 386:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX im august)
		(DM ja)
		(SIMPX
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				[01;36m(NX[00m
					(NX einen romantischen termin)
					(PX im august)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER es)), (ADVX (ADV da))], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP im august ja gibt es da einen romantischen termin im august)

Sentence 387:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX
							(NX dienstag nacht)
							[01;36m(PX[00m
								(APPR bis)
								(NX freitag nacht)[01;36m)[00m)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NX (NN dienstag)) (ADVX (ADV nacht)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX dienstag nacht bis freitag nacht)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen)[01;31m)[00m))
Step:Unary
{'subtrees': ['KOORD', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'PPER', 'PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (0, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(KOORD und)
		(LK wurden)
		(MF
			(NX sie)
			(NX mir)
			(ADVX bitte)
			(ADVX noch)
			(PX [01;33m(PX[00m
				(APPR fur)
				[01;31m(NX[00m
					(NX die nachte) [01;33mPX)[00m
					(APPRART vom)
					(DM also)
					(NX dienstag nacht bis freitag nacht)[01;31m)[00m)
			(ADVX noch)
			(NX das hotel))
		(VC buchen)))
Step:UNSET remove
{'subtrees': ['NX', 'APPRART', 'DM', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (6, 16), 'span': (7, 16), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(KOORD und)
		(LK wurden)
		(MF
			(NX sie)
			(NX mir)
			(ADVX bitte)
			(ADVX noch)
			(PX
				[01;36m(PX[00m
					(APPR fur)
					(NX die nachte)[01;36m)[00m
				(APPRART vom)
				(DM also)
				(NX dienstag nacht bis freitag nacht))
			(ADVX noch)
			(NX das hotel))
		(VC buchen)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'APPRART', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(APPRART vom), (DM (ADVX (ADV also))), (NX (NX (NX (NN dienstag)) (ADVX (ADV nacht))) (PX (APPR bis) (NX (NX (NN freitag)) (ADVX (ADV nacht)))))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und wurden sie mir bitte noch fur die nachte vom also dienstag nacht bis freitag nacht noch das hotel buchen)

Sentence 388:
0 Initial errors
0 on fringe, 0 iterations

Sentence 389:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		[01;31m(PX[00m
			(APPR fur)
			[01;31m(NX[00m
				(NX hundert funfundvierzig mark) [01;33mPX)[00m
				(NX das einzelzimmer)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['PX', 'NX'], 'mover info': [('NX', (4, 6))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (0, 6), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP fur hundert funfundvierzig mark das einzelzimmer)

Sentence 390:
0 Initial errors
0 on fringe, 0 iterations

Sentence 391:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						(ADJX
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADV richtig)[01;31m)[00m[01;36m)[00m
							[01;36m(VXINF[00m
								(ADJD informiert)[01;36m)[00m))
					(VC bin)))
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die frage)
			[01;31m(LK[00m
				(VXFIN
					(VAFIN ist))[01;31m)[00m
			(NF haben sie irgendwelche praferierten termine von sich aus)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'ADJD'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADV'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						(ADJX
							(ADJX richtig)
							[01;36m(VXINF[00m
								(ADJD informiert)[01;36m)[00m))
					(VC bin)))
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die frage)
			[01;31m(LK[00m
				(VXFIN
					(VAFIN ist))[01;31m)[00m
			(NF haben sie irgendwelche praferierten termine von sich aus)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADV richtig))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'ADJX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die frage)
			[01;31m(LK[00m
				(VXFIN
					(VAFIN ist))[01;31m)[00m
			(NF haben sie irgendwelche praferierten termine von sich aus)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'VVINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (21, 32), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(DM ja)
		(VF die frage)
		[01;31m(LK[00m
			(VXFIN
				(VAFIN ist))[01;31m)[00m
		(NF haben sie irgendwelche praferierten termine von sich aus)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'VVINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (23, 24), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP grus gott frau johann wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren ja die frage ist haben sie irgendwelche praferierten termine von sich aus)

Sentence 392:
0 Initial errors
0 on fringe, 0 iterations

Sentence 393:
10 Initial errors
0 on fringe, 6 iterations
3 Error:UNSET move
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF das wir am eine ubernachtung in hannover brauchten)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF sie irgendwelche vorstellungen davon)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN hotel)[01;36m)[00m[01;31m)[00m)
					(VC aussehen sollte))))
		(DM oder)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VC', 'NF'], 'mover info': [('NF', (9, 17))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(NF das wir am eine ubernachtung in hannover brauchten)
						(VC vorausgesetzt))[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF sie irgendwelche vorstellungen davon)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN hotel)[01;36m)[00m[01;31m)[00m)
					(VC aussehen sollte))))
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (9, 18))], 'old_family': ['SIMPX', 'NF'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (9, 29), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				[01;36m(NF[00m
					(SIMPX
						(NF das wir am eine ubernachtung in hannover brauchten)
						(VC vorausgesetzt))[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF sie irgendwelche vorstellungen davon)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN hotel)[01;36m)[00m[01;31m)[00m)
					(VC aussehen sollte))))
		(DM oder)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (44, 45))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (44, 46), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				[01;36m(NF[00m
					(SIMPX
						(NF das wir am eine ubernachtung in hannover brauchten)
						(VC vorausgesetzt))[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN kriegen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NX (NN dienstag)) (ADVX (ADV abend)))) (ADVX (ADV noch)) (NX (NX (ART den) (NN flug)) (PX (APPR nach) (NX (NE berlin))))))], 'left siblings': [], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'NF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				(NF das wir am eine ubernachtung in hannover brauchten vorausgesetzt)
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (5, 9), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(SIMPX
			(NF
				(NF das wir am eine ubernachtung in hannover brauchten vorausgesetzt)
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (9, 29), 'span': (18, 29), 'left siblings': ['NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja das ware mir recht das wurde ja bedeuten das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)

Sentence 394:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(NX eines)
							(PX mit sauna))[01;36m)[00m
					(NX ein anderes mit hallenbad)))[01;31m)[00m
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN'), 'right siblings': [(NX (NX (ART ein) (PIS anderes)) (PX (APPR mit) (NX (NN hallenbad))))], 'left siblings': [], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF eines mit sauna ein anderes mit hallenbad)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (1, 10), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF es)
		(LK gabe)
		(MF eines mit sauna ein anderes mit hallenbad)
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (10, 14), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF es)
		(LK gabe)
		(MF eines mit sauna ein anderes mit hallenbad)
		(ADVX scheinbar)
		(ADVX nicht)
		[01;31m(NX[00m
			(NX beides)
			(ADVX zusammen)[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (12, 14), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es gabe eines mit sauna ein anderes mit hallenbad scheinbar nicht beides zusammen sie wurden dann die sauna vorziehen)

Sentence 395:
10 Initial errors
0 on fringe, 6 iterations
3 Error:Clause Attachment
2 Error:Different label
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						[01;36m(R[00m
							(NF
								[01;31m(SIMPX[00m
									(C was)
									(MF
										(ADVX dann)
										(ADVX sicherlich)
										[01;36m(DM[00m [01;31m(ADVX[00m
											(ADV ja)[01;31m)[00m[01;36m)[00m
										(ADVX auch)
										(ADJX verkehrsgunstig))
									(VC ist)[01;31m)[00m)[01;36m)[00m)))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge) [01;33mSIMPX)[00m
				(MF das)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (33, 39))], 'old_family': ['DM', 'P', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'P', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 41), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						[01;36m(R[00m
							(NF
								[01;31m(SIMPX[00m
									(C was)
									(MF
										(ADVX dann)
										(ADVX sicherlich)
										[01;36m(DM[00m [01;31m(ADVX[00m
											(ADV ja)[01;31m)[00m[01;36m)[00m
										(ADVX auch)
										(ADJX verkehrsgunstig))
									(VC ist)[01;31m)[00m)[01;36m)[00m)))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge))
			(MF das))))
Step:Different label
{'family': ['R'], 'auto preterminal span': (20, 27), 'span': (20, 27), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF
							(R
								(C was)
								(MF
									(ADVX dann)
									(ADVX sicherlich)
									[01;36m(DM[00m [01;31m(ADVX[00m
										(ADV ja)[01;31m)[00m[01;36m)[00m
									(ADVX auch)
									(ADJX verkehrsgunstig))
								(VC ist))))))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge))
			(MF das))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'DM', 'ADVX', 'ADJX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF was dann sicherlich ja auch verkehrsgunstig ist))))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge))
			(MF das))))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN nahe))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge))
			(MF das))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX es scheint mir sowieso gunstig)
		(KOUS weil)
		(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge))
			(MF das))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LK'], 'parent': 'SIMPX', 'auto preterminal span': (33, 40), 'span': (33, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist ja dann werde ich die buchen kummern sie sich um die fluge ginge das)

Sentence 396:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich mit dem hotelbuchen einfach noch)
			(VC warten)
			(NF
				(SIMPX
					(C bis)
					(MF
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJD geklart)[01;31m)[00m)
					(VC ist))))))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (26, 28), 'span': (26, 27), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich mit dem hotelbuchen einfach noch)
			(VC warten)
			(NF
				(SIMPX
					(C bis)
					(MF
						(PDS das)
						[01;31m(ADJX[00m
							(ADJD geklart)[01;31m)[00m)
					(VC ist))))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PDS', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (26, 28), 'span': (27, 28), 'left siblings': ['PDS'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP mir ware beides recht also dienstag abend oder mittwoch morgen muste man ja dann sagen genau dann wurde ich mit dem hotelbuchen einfach noch warten bis das geklart ist)

Sentence 397:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF die frage)
				(LK ist)
				(MF jetzt noch)[01;36m)[00m
			(SIMPX
				(VF man)
				(LK hat)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX hier)
						[01;36m(PX[00m
							(APPR bei)
							(NX der mappe)[01;36m)[00m[01;31m)[00m
					(ADVX auch)
					(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
				(VC hingelegt))
			[01;31m(NF[00m
				(SIMPX
					(SIMPX haben sie da auch interesse)
					(SIMPX soll ich da irgendwas buchen))[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'mover info': [('SIMPX', (12, 27)), ('NF', (27, 37))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 38), 'movers': ['SIMPX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX
			(VF man)
			(LK hat)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX hier)
					[01;36m(PX[00m
						(APPR bei)
						(NX der mappe)[01;36m)[00m[01;31m)[00m
				(ADVX auch)
				(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
			(VC hingelegt))
		[01;31m(NF[00m
			(SIMPX
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen))[01;31m)[00m
		(DM oder)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'NX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (14, 26), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			(SIMPX
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen))[01;31m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 37), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das sollte dann zu machen sein ja die frage ist jetzt noch man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt haben sie da auch interesse soll ich da irgendwas buchen oder)

Sentence 398:
22 Initial errors
0 on fringe, 16 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:PP Attachment
2 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m [01;33m(PX (MF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX diese richtung) [01;33mMF) PX) SIMPX)[00m
						[01;31m(NX[00m [01;33m(NX[00m
							[01;36m(NX[00m
								[01;36m(VF[00m
									(ART der)
									[01;31m(ADJX[00m
										(ADJA darstellenden)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(LK[00m
								[01;36m(VXFIN[00m
									(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					[01;31m(NX[00m
						(NX opernbesuche) [01;33mNX)[00m
						(KON und)
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NN gospelkonzert)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(MF[00m
					(PX [01;33m(SIMPX (NF[00m
						(APPR an)
						(NX dem abend))[01;36m)[00m[01;31m)[00m
			(VC zu buchen)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 19), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(PX
						(APPR in)
						(NX diese richtung)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;31m(NX[00m [01;33m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							[01;36m(VF[00m
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m
							[01;36m(VXFIN[00m
								(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					[01;31m(NX[00m
						(NX opernbesuche) [01;33mNX)[00m
						(KON und)
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NN gospelkonzert)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(MF[00m
					(PX [01;33m(SIMPX (NF[00m
						(APPR an)
						(NX dem abend))[01;36m)[00m[01;31m)[00m
			(VC zu buchen)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'family': ['NX', 'KON', 'ADJX'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(PX
						(APPR in)
						(NX diese richtung)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;31m(NX[00m [01;33m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							[01;36m(VF[00m
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m
							[01;36m(VXFIN[00m
								(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					[01;31m(NX[00m
						(NX opernbesuche) [01;33mNX)[00m
						(KON und)
						(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
				[01;36m(MF[00m
					(PX [01;33m(SIMPX (NF[00m
						(APPR an)
						(NX dem abend))[01;36m)[00m[01;31m)[00m
			(VC zu buchen)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'PX', 'NX', 'MF', 'VC'], 'mover info': [('PX', (5, 8)), ('NX', (8, 16))], 'old_family': ['PX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (1, 21), 'movers': ['PX', 'NX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF unter den angeboten)
				(LK sind)
				[01;36m(MF[00m
					(PX
						(APPR in)
						(NX diese richtung))[01;36m)[00m[01;36m)[00m
			[01;31m(NX[00m [01;33m(NX[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						[01;36m(VF[00m
							(ART der)
							[01;31m(ADJX[00m
								(ADJA darstellenden)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(LK[00m
						[01;36m(VXFIN[00m
							(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				[01;31m(NX[00m
					(NX opernbesuche) [01;33mNX)[00m
					(KON und)
					(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(MF an dem abend)
					(VC zu buchen)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('VF', (1, 4)), ('LK', (4, 5)), ('PX', (5, 8)), ('NX', (8, 16))], 'old_family': ['VF', 'LK', 'PX', 'NX', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'start right siblings': ['MF', 'VC'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 34), 'movers': ['VF', 'LK', 'PX', 'NX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;36m(MF[00m
				(PX
					(APPR in)
					(NX diese richtung))[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			[01;31m(NX[00m
				[01;36m(NX[00m
					[01;36m(VF[00m
						(ART der)
						[01;31m(ADJX[00m
							(ADJA darstellenden)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(LK[00m
					[01;36m(VXFIN[00m
						(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NN', 'ADJX', 'NN'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': ['ART', 'ADJX'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (8, 16), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;36m(MF[00m
				(PX
					(APPR in)
					(NX diese richtung))[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			[01;36m(VF[00m
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m)[01;36m)[00m
			[01;31m(NX[00m
				[01;36m(LK[00m
					[01;36m(VXFIN[00m
						(NN kunste)[01;36m)[00m[01;36m)[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'PX'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN'), 'right siblings': [(NX (NX (ART der) (ADJX (ADJA darstellenden))) (NX (NN kunste) (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (ADJX (NN gospelkonzert)))), (SIMPX (MF (PX (APPR an) (NX (ART dem) (NN abend)))) (VC (VXINF (PTKZU zu) (VVINF buchen)))), (SIMPX (LK (VXFIN (VMFIN sollen))) (MF (NX (PPER wir)) (ADVX (ADV dann)) (NX (ART das) (NN gospelkonzert))) (VC (VXINF (VVINF nehmen)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV sicherlich)) (ADJX (ADJX (ADJD leichter)) (NX (KOKOM als) (ART ein) (NE wagner)))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			[01;36m(MF[00m
				(PX
					(APPR in)
					(NX diese richtung))[01;36m)[00m)
		[01;31m(NX[00m [01;33m(NX[00m
			[01;36m(VF[00m
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m)[01;36m)[00m
			[01;31m(NX[00m
				[01;36m(LK[00m
					[01;36m(VXFIN[00m
						(NN kunste)[01;36m)[00m[01;36m)[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN'), 'right siblings': [], 'left siblings': [(VF (PX (APPR unter) (NX (ART den) (NN angeboten)))), (LK (VXFIN (VAFIN sind)))], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;31m(NX[00m [01;33m(NX[00m
			[01;36m(VF[00m
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m)[01;36m)[00m
			[01;31m(NX[00m
				[01;36m(LK[00m
					[01;36m(VXFIN[00m
						(NN kunste)[01;36m)[00m[01;36m)[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA'), 'right siblings': [(NX (NN kunste) (ADJX (CARD zwei)) (NN kategorien)), (NX (NX (NN opernbesuche)) (KON und) (ADJX (NN gospelkonzert)))], 'left siblings': [], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;31m(NX[00m [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m))
			[01;31m(NX[00m
				[01;36m(LK[00m
					[01;36m(VXFIN[00m
						(NN kunste)[01;36m)[00m[01;36m)[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['VXFIN', 'ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(ADJX (CARD zwei)), (NN kategorien)], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;31m(NX[00m [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m))
			[01;31m(NX[00m
				[01;36m(LK[00m
					(VXFIN
						(NN kunste))[01;36m)[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(ADJX (CARD zwei)), (NN kategorien)], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;31m(NX[00m [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m))
			[01;31m(NX[00m
				(LK kunste)
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(MF an dem abend)
				(VC zu buchen))[01;36m)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN sollen))) (MF (NX (PPER wir)) (ADVX (ADV dann)) (NX (ART das) (NN gospelkonzert))) (VC (VXINF (VVINF nehmen)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV sicherlich)) (ADJX (ADJX (ADJD leichter)) (NX (KOKOM als) (ART ein) (NE wagner)))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (PX (APPR unter) (NX (ART den) (NN angeboten)))) (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (PDAT diese) (NN richtung))))), (NX (VF (NX (ART der) (ADJX (ADJA darstellenden)))) (NX (LK (VXFIN (NN kunste))) (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (ADJX (NN gospelkonzert))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;31m(NX[00m [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJA darstellenden)[01;31m)[00m))
			[01;31m(NX[00m
				(LK kunste)
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			[01;31m(NX[00m
				(NX opernbesuche) [01;33mNX)[00m
				(KON und)
				(ADJX gospelkonzert)[01;31m)[00m[01;31m)[00m
		(NF an dem abend zu buchen)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['VF', 'NX', 'NX'], 'family': ['DM', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (8, 16), 'left siblings': ['DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		(VF [01;33m(NX[00m
			(NX
				(ART der)
				[01;31m(ADJX[00m
					(ADJA darstellenden)[01;31m)[00m))
		[01;31m(NX[00m
			(LK kunste)
			(ADJX zwei)
			(NN kategorien)[01;31m)[00m
		[01;31m(NX[00m
			(NX opernbesuche) [01;33mNX)[00m
			(KON und)
			(ADJX gospelkonzert)[01;31m)[00m
		(NF an dem abend zu buchen)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 10), 'span': (9, 10), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;33m(NX[00m (VF der darstellenden)
		[01;31m(NX[00m
			(LK kunste)
			(ADJX zwei)
			(NN kategorien)[01;31m)[00m
		[01;31m(NX[00m
			(NX opernbesuche) [01;33mNX)[00m
			(KON und)
			(ADJX gospelkonzert)[01;31m)[00m
		(NF an dem abend zu buchen)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['LK', 'ADJX', 'NN'], 'family': ['DM', 'SIMPX', 'VF', 'NX', 'NX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['NX', 'NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (10, 13), 'left siblings': ['DM', 'SIMPX', 'VF'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;33m(NX[00m (VF der darstellenden)
		(LK kunste)
		(ADJX zwei)
		(NN kategorien)
		[01;31m(NX[00m
			(NX opernbesuche) [01;33mNX)[00m
			(KON und)
			(ADJX gospelkonzert)[01;31m)[00m
		(NF an dem abend zu buchen)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADJX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'ADJX', 'NN', 'NX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (13, 16), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'ADJX', 'NN'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung)
		[01;36m(NX[00m
			(VF der darstellenden)
			(LK kunste)
			(ADJX zwei)
			(NN kategorien)
			(NX opernbesuche)[01;36m)[00m
		(KON und)
		(ADJX gospelkonzert)
		(NF an dem abend zu buchen)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'ADJX', 'NN', 'NX'], 'family': ['DM', 'SIMPX', 'NX', 'KON', 'ADJX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN'), 'right siblings': [(KON und), (ADJX (NN gospelkonzert)), (NF (SIMPX (MF (PX (APPR an) (NX (ART dem) (NN abend)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))), (SIMPX (LK (VXFIN (VMFIN sollen))) (MF (NX (PPER wir)) (ADVX (ADV dann)) (NX (ART das) (NN gospelkonzert))) (VC (VXINF (VVINF nehmen)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV sicherlich)) (ADJX (ADJX (ADJD leichter)) (NX (KOKOM als) (ART ein) (NE wagner)))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (PX (APPR unter) (NX (ART den) (NN angeboten)))) (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (PDAT diese) (NN richtung)))))], 'auto preterminal span': (8, 14), 'span': (8, 14), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP also unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen sollen wir dann das gospelkonzert nehmen das ist sicherlich leichter als ein wagner)

Sentence 399:
9 Initial errors
0 on fringe, 5 iterations
4 Error:Modifier Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								(NX den buchungen der hotels) [01;33mPX)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m))
					(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(ADVX
				(ADV dann))[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'ADVX'], 'mover info': [('ADVX', (42, 43))], 'old_family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'ADVX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 43), 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF
				(SIMPX
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								(NX den buchungen der hotels) [01;33mPX)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m))
					(VC aussehen sollte)
					[01;36m(NF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'KON', 'ADVX'], 'mover info': [('KON', (37, 38)), ('ADVX', (38, 40))], 'old_family': ['NX', 'KON', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (31, 40), 'adding node already present': False, 'movers': ['KON', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF
				(SIMPX
					(C wie)
					(MF das mit den buchungen der hotels und so weiter)
					(VC aussehen sollte)
					[01;36m(NF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(C (KOUS wie)), (MF (NX (PDS das)) (PX (PX (APPR mit) (NX (NX (ART den) (NN buchungen)) (NX (ART der) (NN hotels)))) (KON und) (ADVX (ADVX (ADV so)) (ADV weiter)))), (VC (VXINF (VVINF aussehen)) (VXFIN (VMFIN sollte)))], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte dann)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 26), 'span': (10, 26), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte dann)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (26, 43), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja gut dann organisiere ich das auch ja ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte dann)

Sentence 400:
0 Initial errors
0 on fringe, 0 iterations

Sentence 401:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		[01;31m(PX[00m
			(PX bis zum wiederhoren)
			(ADVX dann)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART am)
					(NX telefon))[01;31m)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'NX', 'PX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (4, 8), 'left siblings': ['DM', 'NX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		(PX bis zum wiederhoren)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART am)
					(NX telefon))[01;31m)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (8, 13), 'span': (8, 10), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		(PX bis zum wiederhoren)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(PX am telefon)
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'PX', 'ADVX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 13), 'left siblings': ['DM', 'NX', 'PX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja schonen tag noch bis zum wiederhoren dann am telefon nehme ich an ja)

Sentence 402:
4 Initial errors
0 on fringe, 3 iterations
2 Error:NP Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK hatte)
				(MF
					(NX ich)
					(ADVX eigentlich)
					(ADVX nur)
					(ADVX noch)
					(NX
						(NX
							(ART den)
							(NX
								(NX elften)
								(KON und)
								[01;31m(NX[00m
									(NN zwolften)[01;31m)[00m))
						(NX freitag und samstag)))
				(VC anzubieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(KON oder)
					(NX den einundzwanzigsten zweiundzwanzigsten))[01;36m)[00m[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NX'], 'mover info': [('NX', (27, 31))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'KOUS', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'NN', 'NN', 'KON', 'NN', 'VVIZU', 'KON', 'ART', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 31), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
		(SIMPX
			(VF da)
			(LK hatte)
			(MF
				(NX ich)
				(ADVX eigentlich)
				(ADVX nur)
				(ADVX noch)
				(NX
					(NX
						(ART den)
						(NX
							(NX elften)
							(KON und)
							[01;31m(NX[00m
								(NN zwolften)[01;31m)[00m))
					(NX freitag und samstag)))
			(VC anzubieten)
			[01;36m(NF[00m
				(NX
					(KON oder)
					(NX den einundzwanzigsten zweiundzwanzigsten))[01;36m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (ADVX (ADV eigentlich)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (NX (ART den) (NX (NX (NN elften)) (KON und) (NX (NN zwolften)))) (NX (NX (NN freitag)) (KON und) (NX (NN samstag))))), (VC (VXINF (VVIZU anzubieten)))], 'auto preterminal span': (27, 31), 'span': (27, 31), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
		(SIMPX
			(VF da)
			(LK hatte)
			(MF
				(NX ich)
				(ADVX eigentlich)
				(ADVX nur)
				(ADVX noch)
				(NX
					(NX
						(ART den)
						(NX
							(NX elften)
							(KON und)
							[01;31m(NX[00m
								(NN zwolften)[01;31m)[00m))
					(NX freitag und samstag)))
			(VC anzubieten)
			(NF oder den einundzwanzigsten zweiundzwanzigsten))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (20, 23), 'span': (22, 23), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also es sieht so aus das der juli eigentlich schon ziemlich voll ist da hatte ich eigentlich nur noch den elften und zwolften freitag und samstag anzubieten oder den einundzwanzigsten zweiundzwanzigsten)

Sentence 403:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF wie)
			(LK wollen)
			(MF wir denn nach hannover)
			(VC hinkommen)[01;31m)[00m
		(PX mit dem zug)
		(SIMPX oder wollen sie lieber fliegen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NE', 'VVINF', 'APPR', 'ART', 'NN', 'KON', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['PX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (0, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wie wollen wir denn nach hannover hinkommen mit dem zug oder wollen sie lieber fliegen)

Sentence 404:
26 Initial errors
0 on fringe, 15 iterations
5 Error:Modifier Attachment
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(PX[00m
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					[01;33m(ADJX[00m (PX in zwei stunden)[01;31m)[00m[01;31m)[00m
			[01;31m(ADVX[00m
				(ADV spater)[01;31m)[00m [01;33mADJX) MF)[00m[01;36m)[00m
		[01;36m(VF[00m [01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX'], 'mover info': [('ADVX', (28, 29))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 57), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(PX[00m
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(VF[00m [01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'NF'], 'mover info': [('NF', (15, 22))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (2, 22), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(VF[00m [01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (29, 30), 'span': (29, 30), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['LKM', 'KON', 'LKMVC'], 'auto preterminal span': (45, 57), 'span': (45, 57), 'subtrees': ['LK', 'FKOORD'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('FKOORD', 'LKMVC')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m))))[01;36m)[00m))
Step:Different label
{'family': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (53, 57), 'span': (53, 57), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten))))))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (10, 15))], 'old_family': ['VF', 'LK', 'MF', 'NF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX'], 'auto preterminal span': (7, 22), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten))))))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (10, 15), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten))))))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER'), 'right siblings': [(SIMPX (VF (ADVX (ADV dann))) (FKOORD (LKM (LK (VXFIN (VVFIN trinken))) (MF (NX (PPER wir)) (ADVX (ADV noch)) (NX (ART einen) (NN kaffee)))) (KON und) (LKMVC (LK (VXFIN (VMFIN konnen))) (FKOORD (MVC (MF (ADVX (ADV dann)) (ADVX (ADV gleich)) (PX (APPR zu) (NX (PPOSAT unsrer) (NN filiale)))) (VC (VXINF (VVINF fahren)))) (KON und) (MVC (MF (ADVX (ADV dort))) (VC (VXINF (VVINF anfangen))) (NF (SIMPX (VC (VXINF (PTKZU zu) (VVINF arbeiten))))))))))], 'left siblings': [(DM (PTKANT ja)), (DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV ja))) (VC (VXINF (VVINF vorschlagen))) (NF (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NN fluge)) (NF (ADVX (ADV schon)) (PX (APPR ab) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADVX (ADV morgens)))))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV wirklich)) (PX (APPR um) (NX (ADJX (CARD sechs)) (NN uhr)))) (VC (VXFIN (VVFIN losfliegen)))))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (ADJX (PX (APPR in) (NX (ADJX (CARD zwei)) (NN stunden))) (ADVX (ADV spater))))), (VF (ADVX (ADV also))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (CARD acht))) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (36, 38), 'span': (36, 38), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten))))))[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV ja))) (VC (VXINF (VVINF vorschlagen))) (NF (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NN fluge)) (NF (ADVX (ADV schon)) (PX (APPR ab) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADVX (ADV morgens)))))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV wirklich)) (PX (APPR um) (NX (ADJX (CARD sechs)) (NN uhr)))) (VC (VXFIN (VVFIN losfliegen)))))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (ADJX (PX (APPR in) (NX (ADJX (CARD zwei)) (NN stunden))) (ADVX (ADV spater))))), (VF (ADVX (ADV also))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (CARD acht))) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX
				(VF dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								[01;36m(MVC[00m
									(MF dort)
									(VC anfangen)[01;36m)[00m
								(NF zu arbeiten)))))))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF'), 'right siblings': [(NF (SIMPX (VC (VXINF (PTKZU zu) (VVINF arbeiten)))))], 'left siblings': [], 'auto preterminal span': (53, 55), 'span': (53, 55), 'parent': 'MVC', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX', 'VF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (2, 22), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(NF
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX fluge)
					[01;31m(NF[00m
						(ADVX schon)
						(PX ab sechs uhr morgens)[01;31m)[00m)
				(NF das wir wirklich um sechs uhr losfliegen)))
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 15), 'span': (10, 15), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(NF es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['PX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (25, 29), 'span': (28, 29), 'left siblings': ['PX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(NF es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(VF also)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um acht in hannover)[01;31m)[00m
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (30, 36), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(NF es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(VF also)
		(LK sind)
		(MF wir um acht in hannover)
		(SIMPX
			(NF
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m))
			(SIMPX dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (36, 38), 'span': (37, 38), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover bis wir dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)

Sentence 405:
11 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(C[00m
				(KOUS wenn)[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LV wenn es da eine sauna gabe)
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)[01;36m)[00m
			[01;36m(MF[00m [01;31m(NF[00m
				(ADVX dann)
				(ADVX kurz)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich ein bischen)
				(VC erholen kann))[01;36m)[00m))
Step:Different label
{'family': ['LV', 'VF', 'LK', 'MF', 'VC', 'MF'], 'auto preterminal span': (25, 27), 'span': (25, 27), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'MF')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(C[00m
				(KOUS wenn)[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LV wenn es da eine sauna gabe)
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)[01;36m)[00m
			(MF dann kurz)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich ein bischen)
				(VC erholen kann))[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'SIMPX'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 34), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				(ADVX ganz gerne)
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS wenn)[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LV wenn es da eine sauna gabe)
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)[01;36m)[00m
			(MF dann kurz)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich ein bischen)
				(VC erholen kann))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'MF', 'SIMPX'], 'mover info': [('MF', (25, 27))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'MF'], 'start left siblings': ['LV', 'VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 34), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				(ADVX ganz gerne)
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS wenn)[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(SIMPX wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen)
		(MF dann kurz)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich ein bischen)
				(VC erholen kann))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADVX (ADV ganz)) (ADV gerne)) (SIMPX (C (KOUS wenn)) (MF (PX (APPR nach) (NX (ADVX (ADV so)) (ART einem) (ADJX (ADJA harten)) (NN arbeitstag))))))), (SIMPX (LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART eine) (NN sauna))) (VC (VXFIN (VVFIN gabe))))) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADVX (ADV ganz)) (ADV gern)) (PX (APPR in) (NX (ART die) (NN sauna)))) (VC (VXINF (VVINF gehen)))), (MF (ADVX (ADV dann)) (ADVX (ADV kurz)))], 'auto preterminal span': (27, 34), 'span': (27, 34), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				(ADVX ganz gerne)
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS wenn)[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(SIMPX wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen)
		(MF dann kurz)
		(NF das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'MF', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF
			(ADVX ganz gerne)
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m)
		(SIMPX wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen)
		(MF dann kurz)
		(NF das ich mich ein bischen erholen kann)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (5, 11), 'span': (5, 6), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF
			(ADVX ganz gerne)
			[01;31m(SIMPX[00m
				(KOUS wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m)
		(SIMPX wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen)
		(MF dann kurz)
		(NF das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['KOUS', 'MF'], 'family': ['ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 11), 'span': (5, 11), 'left siblings': ['ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF
			(ADVX ganz gerne)
			(KOUS wenn)
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m)
		(SIMPX wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen)
		(MF dann kurz)
		(NF das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'KOUS', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 11), 'span': (6, 11), 'left siblings': ['ADVX', 'KOUS'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also ich wurde ganz gerne wenn nach so einem harten arbeitstag wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)

Sentence 406:
16 Initial errors
0 on fringe, 13 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					[01;36m(VXINF[00m [01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;36m)[00m
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(C das)
								[01;31m(MF[00m
									(NX wir)
									(NX die woche)
									(ADVX dann)
									[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
							(PX
								(APPR mit)
								(NX terminen))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['VXINF', 'SIMPX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['PROP'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'VXINF')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(VXINF dafur)
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(C das)
								[01;31m(MF[00m
									(NX wir)
									(NX die woche)
									(ADVX dann)
									[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
							(PX
								(APPR mit)
								(NX terminen))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['C', 'MF', 'VC', 'VF'], 'auto preterminal span': (12, 14), 'span': (12, 14), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(VXINF dafur)
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(C das)
								[01;31m(MF[00m
									(NX wir)
									(NX die woche)
									(ADVX dann)
									[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['VXINF', 'SIMPX', 'VF'], 'mover info': [('VF', (12, 14))], 'old_family': ['C', 'MF', 'VC', 'VF'], 'start left siblings': ['C', 'MF', 'VC'], 'auto preterminals': ('PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['VXINF', 'SIMPX'], 'auto preterminal span': (4, 14), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(VXINF dafur)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							[01;31m(MF[00m
								(NX wir)
								(NX die woche)
								(ADVX dann)
								[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m) [01;33mADJX) SIMPX)[00m[01;36m)[00m
					[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VXINF', 'NF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [(VF (PX (APPR mit) (NX (NN terminen))))], 'left siblings': [(VXINF (PROP dafur))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(VXINF dafur)
					(NF
						(SIMPX
							(C das)
							[01;31m(MF[00m
								(NX wir)
								(NX die woche)
								(ADVX dann)
								[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m)) [01;33mADJX) SIMPX)[00m
					[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (3, 18), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;33m(SIMPX[00m (KOORD aber)
		[01;31m(VF[00m
			[01;31m(PX[00m
				(VXINF dafur)
				(NF
					(SIMPX
						(C das)
						[01;31m(MF[00m
							(NX wir)
							(NX die woche)
							(ADVX dann)
							[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m)) [01;33mADJX) SIMPX)[00m
				[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
		(LK ware)
		(MF das sicherlich okay))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'DM', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 14), 'left siblings': ['DM', 'DM', 'KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;33m(SIMPX[00m (KOORD aber)
		[01;31m(PX[00m
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					[01;31m(MF[00m
						(NX wir)
						(NX die woche)
						(ADVX dann)
						[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m)) [01;33mADJX) SIMPX)[00m
			[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m
		(LK ware)
		(MF das sicherlich okay))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VXINF', 'NF', 'VF'], 'family': ['DM', 'DM', 'KOORD', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 14), 'left siblings': ['DM', 'DM', 'KOORD'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;36m(SIMPX[00m
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					[01;31m(MF[00m
						(NX wir)
						(NX die woche)
						(ADVX dann)
						[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m)) [01;33mADJX)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			(VF mit terminen)
			(LK ware)
			(MF das sicherlich okay)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'VXINF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [(VF (PX (APPR mit) (NX (NN terminen)))), (LK (VXFIN (VAFIN ware))), (MF (NX (PDS das)) (ADVX (ADV sicherlich)) (ADJX (ADJD okay)))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (DM (ITJ gut))], 'auto preterminal span': (3, 12), 'span': (3, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					[01;31m(MF[00m
						(NX wir)
						(NX die woche)
						(ADVX dann)
						[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m))) [01;33mADJX)[00m
		[01;36m(SIMPX[00m
			(VF mit terminen)
			(LK ware)
			(MF das sicherlich okay)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (DM (ITJ gut)), (SIMPX (KOORD (KON aber)) (VXINF (PROP dafur)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (ART die) (NN woche)) (ADVX (ADV dann)) (ADVX (ADV so))) (VC (VXFIN (VVFIN vollpacken))))))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					[01;31m(MF[00m
						(NX wir)
						(NX die woche)
						(ADVX dann)
						[01;33m(ADJX[00m (ADVX so)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m))) [01;33mADJX)[00m
		(SIMPX mit terminen ware das sicherlich okay)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX', 'ADVX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (6, 11), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					(NX wir)
					(NX die woche)
					(ADVX dann)
					[01;36m(ADJX[00m
						(ADVX so)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))
		(SIMPX mit terminen ware das sicherlich okay)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'VC'], 'family': ['C', 'NX', 'NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [(C (KOUS das)), (NX (PPER wir)), (NX (ART die) (NN woche)), (ADVX (ADV dann))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					(NX wir)
					(NX die woche)
					(ADVX dann)
					(ADJX
						(ADVX so)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m))))
		(SIMPX mit terminen ware das sicherlich okay)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (10, 12), 'span': (11, 12), 'left siblings': ['ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(VXINF dafur)
			(NF
				(SIMPX
					(C das)
					(NX wir)
					(NX die woche)
					(ADVX dann)
					(ADJX
						(ADVX so)
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m))))
		(SIMPX mit terminen ware das sicherlich okay)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['ADVX', 'VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (10, 12), 'span': (11, 12), 'left siblings': ['ADVX'], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut aber dafur das wir die woche dann so vollpacken mit terminen ware das sicherlich okay)

Sentence 407:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich kummere mich um die fluge)
			(SIMPX und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen)[01;36m)[00m
		(SIMPX und ich gebe ihnen dann noch bescheid)
		(SIMPX ware ihnen beides recht)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gebe))) (MF (NX (PPER ihnen)) (ADVX (ADV dann)) (ADVX (ADV noch)) (NX (NN bescheid)))), (SIMPX (LK (VXFIN (VAFIN ware))) (MF (NX (PPER ihnen)) (NX (PIS beides)) (ADJX (ADJD recht))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 22), 'span': (1, 22), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja ich kummere mich um die fluge und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen und ich gebe ihnen dann noch bescheid ware ihnen beides recht)

Sentence 408:
0 Initial errors
0 on fringe, 0 iterations

Sentence 409:
16 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;36m(PX[00m [01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m[01;36m)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(MF[00m
						[01;36m(NX[00m [01;31m(C[00m
							(KOUS das)[01;31m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(PX im letzten monat)
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE woyzek)[01;31m)[00m[01;36m)[00m
							(ADVX da)[01;31m)[00m[01;36m)[00m
					(VC gegeben wurde)))) [01;33mNF) SIMPX)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['DM', 'SIMPX', 'PX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (9, 15), 'span': (9, 15), 'subtrees': ['ADVX', 'ADVX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		(PX aber nicht so was ganz schweres) [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(MF[00m
						[01;36m(NX[00m [01;31m(C[00m
							(KOUS das)[01;31m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(PX im letzten monat)
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE woyzek)[01;31m)[00m[01;36m)[00m
							(ADVX da)[01;31m)[00m[01;36m)[00m
					(VC gegeben wurde)))) [01;33mNF) SIMPX)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'MF', 'VC'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('C', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		(PX aber nicht so was ganz schweres) [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(MF[00m
						(NX das)
						[01;31m(MF[00m
							(PX im letzten monat)
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE woyzek)[01;31m)[00m[01;36m)[00m
							(ADVX da)[01;31m)[00m[01;36m)[00m
					(VC gegeben wurde)))) [01;33mNF) SIMPX)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'ADJX', 'ADVX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['NE'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		(PX aber nicht so was ganz schweres) [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(MF[00m
						(NX das)
						[01;31m(MF[00m
							(PX im letzten monat)
							(ADJX woyzek)
							(ADVX da)[01;31m)[00m[01;36m)[00m
					(VC gegeben wurde)))) [01;33mNF) SIMPX)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADJX', 'ADVX'], 'mover info': [('NX', (19, 20))], 'old_family': ['NX', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (19, 27), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('KOUS', 'KOUS'), 'end right siblings': ['PX', 'ADJX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF (SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		(PX aber nicht so was ganz schweres) [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde) [01;33mNF) SIMPX)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'PX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['PX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (1, 9), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						(NF ins theater zu gehen)
						(PX aber nicht so was ganz schweres)[01;36m)[00m[01;36m)[00m
				(DM also)
				(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)[01;36m)[00m[01;36m)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NF', 'PX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV zufallig))) (NF (SIMPX (MF (NX (KOUS das)) (PX (APPRART im) (NX (ADJX (ADJA letzten)) (NN monat))) (ADJX (NE woyzek)) (ADVX (ADV da))) (VC (VXINF (VVPP gegeben)) (VXFIN (VAFIN wurde)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(SIMPX
						(NF ins theater zu gehen)
						(PX aber nicht so was ganz schweres))[01;36m)[00m
				(DM also)
				(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)[01;36m)[00m[01;36m)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV zufallig))) (NF (SIMPX (MF (NX (KOUS das)) (PX (APPRART im) (NX (ADJX (ADJA letzten)) (NN monat))) (ADJX (NE woyzek)) (ADVX (ADV da))) (VC (VXINF (VVPP gegeben)) (VXFIN (VAFIN wurde)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(NF ins theater zu gehen aber nicht so was ganz schweres)
				(DM also)
				(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)[01;36m)[00m[01;36m)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'DM', 'SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 27), 'span': (5, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(NF[00m
			(SIMPX
				(NF ins theater zu gehen aber nicht so was ganz schweres)
				(DM also)
				(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde))[01;36m)[00m
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 27), 'span': (5, 27), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(NF ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				[01;31m(NX[00m
					(NX so was)
					(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (34, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(NF ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(VF vielleicht)
		(LK finden)
		[01;31m(MF[00m
			(NX wir)
			[01;31m(NX[00m
				(NX so was)
				(PX in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (36, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(NF ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(VF vielleicht)
		(LK finden)
		(NX wir)
		[01;31m(NX[00m
			(NX so was)
			(PX in richtung musical oder variete)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'VF', 'LK', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (37, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'VF', 'LK', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde das ware mir ein bischen zu anstrengend vielleicht finden wir so was in richtung musical oder variete)

Sentence 410:
0 Initial errors
0 on fringe, 0 iterations

Sentence 411:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK setze)
				(MF
					(NX mich)
					(ADVX also)
					(NX
						(ADVX spatestens)
						[01;36m(NX[00m
							(NX mitte)
							(NX nachste woche)[01;36m)[00m)
					[01;36m(PX[00m
						(PX mit ihnen)
						(PX in verbindung)[01;36m)[00m))
			(SIMPX und dann machen wir alles weitere so wie besprochen)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': [], 'left siblings': [(DM (ITJ okay))], 'auto preterminal span': (1, 22), 'span': (1, 22), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK setze)
				(MF
					(NX mich)
					(ADVX also)
					(NX
						(ADVX spatestens)
						[01;36m(NX[00m
							(NX mitte)
							(NX nachste woche)[01;36m)[00m)
					[01;36m(PX[00m
						(PX mit ihnen)
						(PX in verbindung)[01;36m)[00m))
			(SIMPX und dann machen wir alles weitere so wie besprochen))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV spatestens))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK setze)
				(MF
					(NX mich)
					(ADVX also)
					(NX spatestens mitte nachste woche)
					[01;36m(PX[00m
						(PX mit ihnen)
						(PX in verbindung)[01;36m)[00m))
			(SIMPX und dann machen wir alles weitere so wie besprochen))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'ADVX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(NX (PRF mich)), (ADVX (ADV also)), (NX (ADVX (ADV spatestens)) (NX (NX (NN mitte)) (NX (ADJX (ADJA nachste)) (NN woche))))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP okay ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung und dann machen wir alles weitere so wie besprochen)

Sentence 412:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(ADVX da)
		(SIMPX da horen sie ganz richtig)
		(SIMPX
			(VF ich)
			(LK finde)
			(NF
				(SIMPX
					(VF wir)
					(LK sollten)
					(MF
						(NX uns)
						(ADJX dringend)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP druber)[01;31m)[00m[01;36m)[00m)
					(VC einigen)
					(NF wann denn die geschaftsreise losgehen soll))))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'ADVX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP da da horen sie ganz richtig ich finde wir sollten uns dringend druber einigen wann denn die geschaftsreise losgehen soll)

Sentence 413:
0 Initial errors
0 on fringe, 0 iterations

Sentence 414:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Different label
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;31m(SIMPX[00m
			(LK wissen)
			(MF sie)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			[01;31m(MF[00m
				(NX sie)
				(ADVX doch)
				(ADVX lieber)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ mit)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN unternehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(MF abends noch was)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;31m(SIMPX[00m
			(LK wissen)
			(MF sie)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			[01;31m(MF[00m
				(NX sie)
				(ADVX doch)
				(ADVX lieber)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ mit)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(VC[00m [01;31m(LK[00m
				(VXINF
					(VVFIN unternehmen))[01;31m)[00m[01;36m)[00m
			(MF abends noch was)[01;31m)[00m))
Step:Different label
{'family': ['VC', 'MF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;31m(SIMPX[00m
			(LK wissen)
			(MF sie)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			[01;31m(MF[00m
				(NX sie)
				(ADVX doch)
				(ADVX lieber)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ mit)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC unternehmen)
			(MF abends noch was)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (5, 7), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		[01;31m(SIMPX[00m
			(LK kommen)
			[01;31m(MF[00m
				(NX sie)
				(ADVX doch)
				(ADVX lieber)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ mit)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC unternehmen)
			(MF abends noch was)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (7, 12), 'left siblings': ['DM', 'DM', 'SIMPX', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		(LK kommen)
		[01;31m(MF[00m
			(NX sie)
			(ADVX doch)
			(ADVX lieber)[01;31m)[00m
		[01;31m(VC[00m
			(PTKVZ mit)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC unternehmen)
			(MF abends noch was)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['VC', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (8, 11), 'left siblings': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		(LK kommen)
		(NX sie)
		(ADVX doch)
		(ADVX lieber)
		[01;31m(VC[00m
			(PTKVZ mit)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC unternehmen)
			(MF abends noch was)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK', 'NX', 'ADVX', 'ADVX', 'VC', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (11, 12), 'left siblings': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK', 'NX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		(LK kommen)
		(NX sie)
		(ADVX doch)
		(ADVX lieber)
		(PTKVZ mit)
		[01;31m(SIMPX[00m
			(VC unternehmen)
			(MF abends noch was)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VC', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK', 'NX', 'ADVX', 'ADVX', 'PTKVZ', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (12, 16), 'left siblings': ['DM', 'DM', 'SIMPX', 'LK', 'MF', 'LK', 'NX', 'ADVX', 'ADVX', 'PTKVZ'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nein nein das past schon wissen sie kommen sie doch lieber mit unternehmen abends noch was)

Sentence 415:
4 Initial errors
0 on fringe, 1 iterations
4 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das past mir sehr gut)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK freue)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PRF mich))[01;31m)[00m[01;31m)[00m
			(PX bis august) [01;33mMF)[00m[01;36m)[00m
		(DM auf wiedersehen)
		(DM herr doll)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (10, 12))], 'old_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'PX', 'DM', 'DM'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'ADV', 'PPER', 'VVFIN', 'PRF', 'APPR', 'NN', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': ['DM', 'DM'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 16), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP ja das past mir sehr gut also ich freue mich bis august auf wiedersehen herr doll)

Sentence 416:
0 Initial errors
0 on fringe, 0 iterations

Sentence 417:
6 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)[01;36m)[00m
			(NF wir nahmen das wochenende)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m [01;33m(NX[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		(NX nix))) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'NX'], 'mover info': [('NF', (28, 30))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)[01;36m)[00m
			(NF wir nahmen das wochenende)[01;31m)[00m
		(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
		(NX
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m
			(NX nix))))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'NX'], 'mover info': [('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		(NF wir nahmen das wochenende)
		(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
		(NX
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m
			(NX nix))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'PIS'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (28, 31), 'span': (28, 30), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP aha ja schauen wir mal ob wir irgendeinen termin finden dann ware es ja am besten wir nahmen das wochenende vielleicht konnen wir ja noch ein bischen verlangern eineinhalb tage nix)

Sentence 418:
8 Initial errors
0 on fringe, 4 iterations
4 Error:PP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wissen)
				(MF doch)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;31m(MF[00m
				(ADVX immer) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (PX auf diese eineinhalb tage)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK finde)
			(MF ich wirklich schade)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'LK', 'MF'], 'mover info': [('PX', (23, 27))], 'old_family': ['ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 31), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wissen)
				(MF doch)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;31m(MF[00m
				(ADVX
					(ADV immer))[01;31m)[00m)
		(SIMPX auf diese eineinhalb tage finde ich wirklich schade)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'mover info': [('NF', (11, 19))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX sie wissen doch)
		[01;31m(NF[00m
			(SIMPX
				(VF mit ihnen)
				(LK fahre)
				(MF ich so gern immer)
				(VC weg))[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;31m(MF[00m
				(ADVX
					(ADV immer))[01;31m)[00m)
		(SIMPX auf diese eineinhalb tage finde ich wirklich schade)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (11, 19), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX sie wissen doch)
		(SIMPX mit ihnen fahre ich so gern immer weg)
		(SIMPX
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;31m(MF[00m
				(ADVX
					(ADV immer))[01;31m)[00m)
		(SIMPX auf diese eineinhalb tage finde ich wirklich schade)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (19, 23), 'span': (22, 23), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ah frau schmidt das ist ja wirklich schade sie wissen doch mit ihnen fahre ich so gern immer weg und sie bestehen immer auf diese eineinhalb tage finde ich wirklich schade)

Sentence 419:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM schade)
		(DM frau schmidt)
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM nun)
				(NX ein wochenende)[01;36m)[00m[01;36m)[00m
		(SIMPX wann haben sie denn zeit)))
Step:UNSET add
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'DM', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (NX (NN zeit))))], 'left siblings': [(DM (ITJ schade)), (DM (NX (NN frau) (NE schmidt))), (DM (PTKANT ja))], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM schade)
		(DM frau schmidt)
		(DM ja)
		[01;36m(ADVX[00m
			(DM
				(DM nun)
				(NX ein wochenende))[01;36m)[00m
		(SIMPX wann haben sie denn zeit)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'DM', 'DM', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (NX (NN zeit))))], 'left siblings': [(DM (ITJ schade)), (DM (NX (NN frau) (NE schmidt))), (DM (PTKANT ja))], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'TURN', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP schade frau schmidt ja nun ein wochenende wann haben sie denn zeit)

Sentence 420:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(SIMPX wir konnen auch einzelzimmer nehmen)
		[01;36m(SIMPX[00m
			(SIMPX an dem soll es ja nicht liegen)
			[01;31m(ADVX[00m
				(ADVX nicht)
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF sie dann))[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'SIMPX'], 'mover info': [('SIMPX', (14, 17))], 'old_family': ['ADVX', 'SIMPX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'NN', 'VVINF', 'APPR', 'PDS', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'PTKNEG', 'KOUS', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(DM nein)
		(SIMPX wir konnen auch einzelzimmer nehmen)
		(SIMPX
			(SIMPX an dem soll es ja nicht liegen)
			(ADVX nicht)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF sie dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV'), 'right siblings': [], 'left siblings': [(SIMPX (VF (PX (APPR an) (NX (PDS dem)))) (LK (VXFIN (VMFIN soll))) (MF (NX (PPER es)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVINF liegen)))), (ADVX (PTKNEG nicht))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP nein wir konnen auch einzelzimmer nehmen an dem soll es ja nicht liegen nicht das sie dann)

Sentence 421:
11 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LK mus)
				(MF ich zuerst mal)
				(VC uberlegen)[01;36m)[00m
			(NF
				(SIMPX
					(C was)
					[01;36m(NX[00m [01;31m(MF[00m
						[01;31m(ADJX[00m
							(ADJD romantischer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					[01;36m(NX[00m
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADV viel)[01;31m)[00m
								(ADJD romantischer)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				[01;36m(ADVX[00m [01;31m(NX[00m
					(PIS mehr)[01;31m)[00m[01;36m)[00m
				(PX von ihnen)))))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LK mus)
				(MF ich zuerst mal)
				(VC uberlegen)[01;36m)[00m
			(NF
				(SIMPX
					(C was)
					[01;31m(MF[00m
						(NX
							(ADJD romantischer))[01;31m)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					[01;36m(NX[00m
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADV viel)[01;31m)[00m
								(ADJD romantischer)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				[01;36m(ADVX[00m [01;31m(NX[00m
					(PIS mehr)[01;31m)[00m[01;36m)[00m
				(PX von ihnen)))))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LK mus)
				(MF ich zuerst mal)
				(VC uberlegen)[01;36m)[00m
			(NF
				(SIMPX
					(C was)
					[01;31m(MF[00m
						(NX
							(ADJD romantischer))[01;31m)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADV viel)[01;31m)[00m
							(ADJD romantischer)))))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				[01;36m(ADVX[00m [01;31m(NX[00m
					(PIS mehr)[01;31m)[00m[01;36m)[00m
				(PX von ihnen)))))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['PIS'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LK mus)
				(MF ich zuerst mal)
				(VC uberlegen)[01;36m)[00m
			(NF
				(SIMPX
					(C was)
					[01;31m(MF[00m
						(NX
							(ADJD romantischer))[01;31m)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADV viel)[01;31m)[00m
							(ADJD romantischer)))))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX habe ich mehr von ihnen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(NF (SIMPX (C (NX (PWS was))) (MF (NX (ADJD romantischer))) (VC (VXFIN (VAFIN ist)))))], 'left siblings': [], 'auto preterminal span': (3, 9), 'span': (3, 9), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX
			(SIMPX da mus ich zuerst mal uberlegen)
			(NF
				(SIMPX
					(C was)
					[01;31m(MF[00m
						(NX
							(ADJD romantischer))[01;31m)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADV viel)[01;31m)[00m
							(ADJD romantischer)))))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX habe ich mehr von ihnen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADJD', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (9, 12), 'span': (10, 11), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX da mus ich zuerst mal uberlegen was romantischer ist)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(MF ja)
			(NF
				(SIMPX
					(VF im zug)
					(LK ist)
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADV viel)[01;31m)[00m
							(ADJD romantischer)))))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX habe ich mehr von ihnen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'PWS', 'ADJD', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (12, 20), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX da mus ich zuerst mal uberlegen was romantischer ist)
		(VF ich)
		(LK denke)
		(MF ja)
		(NF
			(SIMPX
				(VF im zug)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADV viel)[01;31m)[00m
						(ADJD romantischer)))))
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX habe ich mehr von ihnen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADJD'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': ['ADJD'], 'parent': 'NX', 'auto preterminal span': (18, 20), 'span': (18, 19), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX da mus ich zuerst mal uberlegen was romantischer ist)
		(VF ich)
		(LK denke)
		(MF ja)
		(NF im zug ist viel romantischer)
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir viel langer)[01;31m)[00m
		(SIMPX habe ich mehr von ihnen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'PWS', 'ADJD', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (20, 24), 'left siblings': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist ich denke ja im zug ist viel romantischer brauchen wir viel langer habe ich mehr von ihnen)

Sentence 422:
14 Initial errors
0 on fringe, 11 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(NX
					(ART den)
					(NN zug))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(P[00m
					[01;36m(NF[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
					(KOUS weil)
					(SIMPX
						(VF sonst)
						(LK bin)
						(MF
							(NX ich)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD unausgeschlafen)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(NX
					(ART den)
					(NN zug))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(P[00m
					[01;36m(NF[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
					(KOUS weil)
					(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['SIMPX', 'KOUS', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (12, 34), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'P', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(NX
					(ART den)
					(NN zug))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m)[01;36m)[00m
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(NX
					(ART den)
					(NN zug))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART den) (NN zug))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			[01;36m(LV[00m
				(NX
					(ART den)
					(NN zug))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'NX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(LV den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV auch))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(LV den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		[01;36m(VF[00m
			(SIMPX
				(VF da)
				(LK haben)
				(MF sie dann von mir nix))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (NX (NX (ADVX (ADV so)) (ADJX (CARD elf)) (NN uhr)) (PX (APPR mit) (NX (ART dem) (NN zug))))))], 'left siblings': [(DM (ITJ gut)), (NX (DM (ADVX (ADV also))) (LV (NX (ART den) (NN zug)))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN brauchen))) (MF (PX (PX (APPR von) (NX (NE munchen))) (PX (APPR nach) (NX (NE hannover)))) (NX (ADJX (CARD viereinhalb)) (NN stunden)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (P (SIMPX (VF (SIMPX (C (KOUS damit)) (MF (NX (PPER wir)) (ADVX (ADV auch)) (NX (NX (PIS was)) (PX (APPR von) (NX (ART der) (NN zugfahrt))))) (VC (VXFIN (VAFIN haben))))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADJX (PTKA zu) (ADJD fruh))) (VC (PTKVZ los)))))), (KOUS weil), (SIMPX (VF (ADVX (ADV sonst))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADJD unausgeschlafen))))], 'auto preterminal span': (34, 41), 'span': (34, 41), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(LV den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'LV'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'LV', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['DM', 'DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (15, 29), 'span': (15, 29), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los)
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (41, 50), 'left siblings': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF', 'SIMPX', 'KOUS', 'SIMPX', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut also den zug wir brauchen von munchen nach hannover viereinhalb stunden ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix wurde ich sagen so elf uhr mit dem zug)

Sentence 423:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dann schaue ich mal wann ein zug geht)
		(DM ja)
		(SIMPX das ware dann elf uhr und funfundzwanzig minuten)
		[01;31m(SIMPX[00m
			(LK past)
			(MF das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'ART', 'NN', 'VVFIN', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'NN', 'VVFIN', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (17, 19), 'left siblings': ['SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP dann schaue ich mal wann ein zug geht ja das ware dann elf uhr und funfundzwanzig minuten past das)

Sentence 424:
15 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(LK ist)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ihnen)
					(NX eine laus)
					[01;31m(PX[00m
						(APPR uber)
						[01;33m(NX[00m (NX die leber)[01;31m)[00m[01;31m)[00m
				[01;36m(ADJX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP gelaufen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON oder)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'VC'], 'mover info': [('VC', (16, 17))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (9, 17), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						[01;36m(ADJX[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m))
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON oder)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						[01;36m(ADJX[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m))
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON oder)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'ADJX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['VXINF'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADJX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m))[01;31m)[00m))
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON oder)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'VF', 'LK', 'MF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['KON'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('KOORD', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(DM oder)
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(DM oder)
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (17, 18))], 'old_family': ['DM', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;31m(PX[00m
					(APPR uber)
					(NX
						(NX die leber)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gelaufen)[01;31m)[00m))[01;31m)[00m))
		(DM oder)
		(SIMPX wie sehe ich das)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				(APPR uber)
				(NX
					(NX die leber)
					(ADJX
						[01;31m(VXINF[00m
							(VVPP gelaufen)[01;31m)[00m))))
		(DM oder)
		(SIMPX wie sehe ich das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (16, 17), 'span': (16, 17), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP sie horen sich heute so formlich an frau schmidt ist ihnen eine laus uber die leber gelaufen oder wie sehe ich das)

Sentence 425:
16 Initial errors
0 on fringe, 8 iterations
5 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;33m(MF[00m (MF mir ja ganz neu)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV bisher))[01;31m)[00m [01;33mMF) SIMPX)[00m
			[01;36m(SIMPX[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;36m(ADJX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VF'], 'mover info': [('VF', (20, 21))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(ADVX immer)[01;31m)[00m
				[01;36m(ADJX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX sie machen mich noch ganz schwach)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(ADVX immer)[01;31m)[00m
				[01;36m(ADJX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX sie machen mich noch ganz schwach)))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(ADVX immer)[01;31m)[00m
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m[01;36m)[00m)
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['DM', 'VF', 'LK', 'MF'], 'mover info': [('DM', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 31), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie wollen abends noch was unternehmen)
		[01;31m(SIMPX[00m
			(DM frau schmidt)
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(ADVX immer)[01;31m)[00m
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m[01;36m)[00m)
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'VC'], 'mover info': [('VC', (24, 25))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (21, 25), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie wollen abends noch was unternehmen)
		[01;31m(SIMPX[00m
			(DM frau schmidt)
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				(ADVX immer)
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m))
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET remove
{'subtrees': ['DM', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (6, 14), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX sie wollen abends noch was unternehmen)
		(DM frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(MF mir ja ganz neu)
				[01;31m(VF[00m
					(ADVX
						(ADV bisher))[01;31m)[00m))
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				(ADVX immer)
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m))
		(SIMPX sie machen mich noch ganz schwach)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADJD', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (16, 21), 'span': (20, 21), 'left siblings': ['MF'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX sie wollen abends noch was unternehmen)
		(DM frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu bisher)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				(ADVX immer)
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m))
		(SIMPX sie machen mich noch ganz schwach)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['NX', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVPP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 25), 'span': (24, 25), 'left siblings': ['NX', 'ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sie wollen abends noch was unternehmen frau schmidt sie springen ja uber ihren schatten das ist mir ja ganz neu bisher haben sie immer abgelehnt sie machen mich noch ganz schwach)

Sentence 426:
14 Initial errors
0 on fringe, 11 iterations
3 Error:UNSET move
2 Error:NP Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS die)[01;31m)[00m[01;31m)[00m
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (55, 56))], 'old_family': ['KOORD', 'LK', 'MF', 'NX', 'VC'], 'start left siblings': [], 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': ['LK', 'MF', 'NX', 'VC'], 'end left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 74), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS die)[01;31m)[00m[01;31m)[00m
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX das)
						(ADVX schon)[01;31m)[00m
					(NX erfahrung)[01;36m)[00m
				(VC gebracht)))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (60, 61))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (56, 62), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS die)[01;31m)[00m[01;31m)[00m
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS die)[01;31m)[00m[01;31m)[00m
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (27, 33), 'span': (27, 28), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			[01;31m(NX[00m
				(PDS die)[01;31m)[00m
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (27, 33), 'span': (27, 28), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SIMPX[00m [01;33m(VF (NX[00m
			(PDS die)
			(LK gefallt)
			(MF mir immer sehr gut)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET remove
{'subtrees': ['PDS', 'LK', 'MF'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (27, 33), 'left siblings': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(PDS [01;33m(VF (NX[00m die)
		(LK gefallt)
		(MF mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal) [01;33mNX) VF)[00m
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'PDS', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (33, 40), 'left siblings': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'PDS', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;36m(VF[00m
			[01;36m(NX[00m
				(PDS die)
				(LK gefallt)
				(MF mir immer sehr gut)
				(VF letzte mal)[01;36m)[00m[01;36m)[00m
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET add
{'subtrees': ['PDS', 'LK', 'MF', 'VF'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV immer)) (ADVX (ADV alleine))), (VC (VXINF (VVINF weggehen))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER sie)) (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV nie)) (PX (PROP dabei)))), (SIMPX (SIMPX (KOORD (KON und)) (VF (ADVX (ADV jetzt))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV gleich)) (ADVX (ADV schon)))) (KOORD (KON oder)) (SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV schon)) (NX (NN erfahrung))) (VC (VXINF (VVPP gebracht))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN reserviere))) (MF (ADVX (ADV dann)) (ADVX (ADV dort)) (NX (NX (ADJX (CARD zwei)) (NN platze)) (PX (APPRART zum) (NX (NN essen)))))), (SIMPX (LK (VXFIN (VVFIN past))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV so))))], 'left siblings': [(NX (PIS was)), (NX (NN schones)), (DM (ITJ ach)), (DM (NX (NN frau) (NE schmidt))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (ADVX (ADV da)) (NX (ADVX (ADV ganz)) (ART eine) (ADJX (ADJA schone)) (NN bar)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV dann))) (VC (PTKVZ hin))), (SIMPX (VF (PX (APPR vor) (NX (PIS allem)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ADJX (ADVX (ADV ganz)) (ADJA schone)) (NN musik))))], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;36m(VF[00m
			(NX
				(PDS die)
				(LK gefallt)
				(MF mir immer sehr gut)
				(VF letzte mal))[01;36m)[00m
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV immer)) (ADVX (ADV alleine))), (VC (VXINF (VVINF weggehen))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER sie)) (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV nie)) (PX (PROP dabei)))), (SIMPX (SIMPX (KOORD (KON und)) (VF (ADVX (ADV jetzt))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV gleich)) (ADVX (ADV schon)))) (KOORD (KON oder)) (SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV schon)) (NX (NN erfahrung))) (VC (VXINF (VVPP gebracht))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN reserviere))) (MF (ADVX (ADV dann)) (ADVX (ADV dort)) (NX (NX (ADJX (CARD zwei)) (NN platze)) (PX (APPRART zum) (NX (NN essen)))))), (SIMPX (LK (VXFIN (VVFIN past))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV so))))], 'left siblings': [(NX (PIS was)), (NX (NN schones)), (DM (ITJ ach)), (DM (NX (NN frau) (NE schmidt))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (ADVX (ADV da)) (NX (ADVX (ADV ganz)) (ART eine) (ADJX (ADJA schone)) (NN bar)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV dann))) (VC (PTKVZ hin))), (SIMPX (VF (PX (APPR vor) (NX (PIS allem)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ADJX (ADVX (ADV ganz)) (ADJA schone)) (NN musik))))], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(VF die gefallt mir immer sehr gut letzte mal)
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (47, 55), 'span': (50, 55), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(VF die gefallt mir immer sehr gut letzte mal)
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX und jetzt kann ich ihnen das gleich schon)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (47, 62), 'span': (55, 56), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP was schones ach frau schmidt ich denke ich kenne da ganz eine schone bar da gehen wir dann hin vor allem gibt es da ganz schone musik die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen da waren sie ja dann nie dabei und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht ich reserviere dann dort zwei platze zum essen past ihnen das so)

Sentence 427:
0 Initial errors
0 on fringe, 0 iterations

Sentence 428:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wie)
				(LK wollen)
				(MF wir das)
				(VC machen)[01;31m)[00m
			[01;36m(NF[00m [01;31m(PX[00m
				(PX mit dem zug)
				(ADVX wieder)[01;31m)[00m[01;36m)[00m))[01;36m)[00m
Step:Different label
{'family': ['SIMPX', 'NF'], 'auto preterminal span': (6, 10), 'span': (6, 10), 'subtrees': ['PX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NF')}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wie)
				(LK wollen)
				(MF wir das)
				(VC machen)[01;31m)[00m
			(NF mit dem zug wieder)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('NF', (6, 10))], 'old_family': ['SIMPX', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KON', 'PWAV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 10), 'movers': ['NF'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP und wie wollen wir das machen mit dem zug wieder)

Sentence 429:
0 Initial errors
0 on fringe, 0 iterations

Sentence 430:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK war)
				(MF sehr nett)[01;36m)[00m
			[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC'], 'mover info': [('NF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 19), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX das war sehr nett)
		(SIMPX
			[01;36m(VF[00m [01;31m(NF[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen))
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP ja ja das war sehr nett letztes mal mochte ich ganz gerne wieder hingehen nehmen wir wieder zwei einzelzimmer)

Sentence 431:
9 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADJX langerer)
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		[01;36m(NF[00m
			(ADVX
				(ADV jetzt))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK wollte)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(VF[00m [01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;36m)[00m
					(VC treffen)
					(NF um mit ihnen die geschaftsreise nach hannover zu planen)[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'VF', 'VC', 'NF'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADJX langerer)
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		[01;36m(NF[00m
			(ADVX
				(ADV jetzt))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK wollte)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(VF sie)
					(VC treffen)
					(NF um mit ihnen die geschaftsreise nach hannover zu planen)[01;36m)[00m[01;36m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN wollte))) (VF (NX (PPER sie))) (VC (VXINF (VVINF treffen))) (NF (SIMPX (C (KOUI um)) (MF (PX (APPR mit) (NX (PPER ihnen))) (NX (NX (ART die) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))) (VC (VXINF (PTKZU zu) (VVINF planen))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (MF (PX (APPR seit) (NX (ADJX (ADJA langerer)) (NN zeit))) (ADVX (ADVX (PTKNEG nicht)) (ADVX (ADV mehr)))) (VC (VXINF (VVPP gesehen))))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADJX langerer)
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		(NF jetzt)
		(SIMPX
			(VF ich)
			(LK wollte)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(VF sie)
					(VC treffen)
					(NF um mit ihnen die geschaftsreise nach hannover zu planen)[01;36m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'VC', 'NF'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVINF', 'KOUI', 'APPR', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN wollte)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADJX langerer)
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		(NF jetzt)
		(SIMPX
			(VF ich)
			(LK wollte)
			[01;36m(SIMPX[00m
				(NF
					(VF sie)
					(VC treffen)
					(NF um mit ihnen die geschaftsreise nach hannover zu planen))[01;36m)[00m)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVINF', 'KOUI', 'APPR', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN wollte)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADJX langerer)
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		(NF jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (1, 6), 'span': (1, 4), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				(APPR seit)
				[01;31m(NX[00m
					(ADJX langerer)
					(NN zeit)[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m
			(VC gesehen)[01;31m)[00m
		(NF jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'NX', 'ADVX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV', 'VVPP'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 7), 'span': (1, 6), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(APPR seit)
			[01;31m(NX[00m
				(ADJX langerer)
				(NN zeit)[01;31m)[00m
			(ADVX nicht mehr)
			(VC gesehen)[01;31m)[00m
		(NF jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'NX', 'ADVX', 'VC'], 'family': ['DM', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV', 'VVPP', 'ADV', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'KOUI', 'APPR', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['NF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (1, 7), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(APPR seit)
		[01;31m(NX[00m
			(ADJX langerer)
			(NN zeit)[01;31m)[00m
		(ADVX nicht mehr)
		(VC gesehen)
		(NF jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['DM', 'APPR', 'NX', 'ADVX', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV', 'VVPP', 'ADV', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'KOUI', 'APPR', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['ADVX', 'VC', 'NF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (2, 4), 'left siblings': ['DM', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja seit langerer zeit nicht mehr gesehen jetzt ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)

Sentence 432:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(DM gut)
		(NX anfang der woche)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ja sonntag abend)
				(VC losfahren)[01;36m)[00m
			[01;33m(NX (NF[00m (NF oder montag fruh)[01;31m)[00m
		(SIMPX wie sie meinen))) [01;33mNF) NX)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'NX', 'SIMPX', 'NF', 'SIMPX'], 'mover info': [('NF', (11, 14))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'NN', 'ADV', 'VVINF', 'KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'NX', 'SIMPX'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(DM gut)
		(DM gut)
		(NX anfang der woche)
		(SIMPX wir konnten ja sonntag abend losfahren)
		[01;36m(NF[00m
			(NX
				(NF oder montag fruh)
				(SIMPX wie sie meinen))[01;36m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'NX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(DM (ITJ gut)), (DM (ITJ gut)), (NX (NX (NN anfang)) (NX (ART der) (NN woche))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (ADVX (ADV ja)) (NX (NX (NN sonntag)) (ADVX (ADV abend)))) (VC (VXINF (VVINF losfahren))))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut gut anfang der woche wir konnten ja sonntag abend losfahren oder montag fruh wie sie meinen)

Sentence 433:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(MF irgendwie was)
			(VC essen)[01;31m)[00m
		(ADVX oder so)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['DM', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'VVINF', 'KON', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja irgendwie was essen oder so)

Sentence 434:
0 Initial errors
0 on fringe, 0 iterations

Sentence 435:
0 Initial errors
0 on fringe, 0 iterations

Sentence 436:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADVX[00m
					(ADV absurderweise)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(NX freitag und samstag)[01;31m)[00m[01;31m)[00m
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SIMPX
			(VF dann)
			(VXFIN ware)
			(LK hatte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die erste moglichkeit)
					(ADVX wieder)[01;36m)[00m
				(NX zwolfter dreizehnter januar)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'VC', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER ich))[01;36m)[00m
				[01;36m(VXINF[00m
					(VC
						(ADV absurderweise))[01;36m)[00m
				(NX freitag und samstag)[01;31m)[00m[01;31m)[00m
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SIMPX
			(VF dann)
			(VXFIN ware)
			(LK hatte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die erste moglichkeit)
					(ADVX wieder)[01;36m)[00m
				(NX zwolfter dreizehnter januar)[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NX'], 'mover info': [('VC', (11, 12)), ('NX', (12, 15))], 'old_family': ['NX', 'VC', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'movers': ['VC', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich)
			[01;36m(VXINF[00m
				(VC
					(ADV absurderweise))[01;36m)[00m
			(NX freitag und samstag)[01;31m)[00m
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SIMPX
			(VF dann)
			(VXFIN ware)
			(LK hatte)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die erste moglichkeit)
					(ADVX wieder)[01;36m)[00m
				(NX zwolfter dreizehnter januar)[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'VXFIN', 'LK', 'MF', 'NX'], 'mover info': [('NX', (35, 38))], 'old_family': ['NX', 'NX', 'ADVX', 'NX'], 'start left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminals': ('ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'VXFIN', 'LK', 'MF'], 'auto preterminal span': (27, 38), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich)
			[01;36m(VXINF[00m
				(VC
					(ADV absurderweise))[01;36m)[00m
			(NX freitag und samstag)[01;31m)[00m
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['VC'], 'family': ['LV', 'VF', 'LK', 'MF', 'VXINF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (NX (NN freitag)) (KON und) (NX (NN samstag)))], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (PX (APPR in) (NX (PPOSAT meinen) (NN terminkalender)))) (VC (VXFIN (VVFIN schaue))))), (VF (ADVX (ADV da))), (LK (VXFIN (VAFIN habe))), (MF (NX (PPER ich)))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich)
			(VXINF absurderweise)
			(NX freitag und samstag)[01;31m)[00m
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:UNSET remove
{'subtrees': ['LV', 'VF', 'LK', 'MF', 'VXINF', 'NX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (2, 15), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)

Sentence 437:
0 Initial errors
0 on fringe, 0 iterations

Sentence 438:
0 Initial errors
0 on fringe, 0 iterations

Sentence 439:
13 Initial errors
0 on fringe, 8 iterations
4 Error:Modifier Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(LK konnen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER wir)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
			(C wenn)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mNF) SIMPX) SIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 22), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
			(C wenn)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mNF) SIMPX) SIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(C wenn)
					(MF ich die verbindung) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'ADVX', 'SIMPX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['C', 'MF', 'ADVX'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich die verbindung)) [01;33mSIMPX)[00m[01;36m)[00m
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER wir))), (VC (VXINF (VVINF probieren)))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			(DM also)
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich die verbindung)) [01;33mSIMPX)[00m[01;36m)[00m
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SIMPX', 'NF', 'ADVX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [(ADVX (ADV also)), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen)))), (NX (PWS was)), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER dir)) (ADJX (ADJD lieber))))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))), (SIMPX (DM (ADVX (ADV also))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (VC (VXINF (VVINF probieren))))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			(DM also)
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		(NF wenn ich die verbindung) [01;33mSIMPX)[00m
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'SIMPX', 'NF', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen)))), (NX (PWS was)), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER dir)) (ADJX (ADJD lieber))))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))), (SIMPX (DM (ADVX (ADV also))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (VC (VXINF (VVINF probieren)))), (NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (ART die) (NN verbindung)))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir)
		[01;31m(SIMPX[00m
			(DM also)
			[01;33m(SIMPX[00m (LK konnen)
			(MF wir)
			(VC probieren)[01;31m)[00m
		(NF wenn ich die verbindung) [01;33mSIMPX)[00m
		(DM also)
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX', 'NF', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['NF', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (2, 6), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir)
		(DM also)
		[01;36m(SIMPX[00m
			(LK konnen)
			(MF wir)
			(VC probieren)
			(NF wenn ich die verbindung)[01;36m)[00m
		(DM also)
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen)))), (NX (PWS was)), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER dir)) (ADJX (ADJD lieber))))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (3, 10), 'span': (3, 10), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP konnen wir also konnen wir probieren wenn ich die verbindung also wir konnen zug oder flugzeug nehmen was was ist dir lieber)

Sentence 440:
11 Initial errors
0 on fringe, 9 iterations
2 Error:NP Attachment
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Co-ordination
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX der muste ja)
			(SIMPX der muste eigentlich reichen)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(ADJX vier viereinhalb)
					(NN stunden))[01;31m)[00m
			[01;33m(SIMPX[00m (LK sehe)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX viereinhalb stunden fahrzeit)
			(PX nach hannover)[01;31m)[00m)) [01;33mMF) SIMPX)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (23, 28))], 'old_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'SIMPX'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 28), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX der muste ja)
			(SIMPX der muste eigentlich reichen)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(ADJX vier viereinhalb)
					(NN stunden))[01;31m)[00m
			[01;36m(SIMPX[00m
				(LK sehe)
				(MF
					(NX ich)
					[01;31m(NX[00m
						(NX viereinhalb stunden fahrzeit)
						(PX nach hannover)[01;31m)[00m)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'VF', 'SIMPX'], 'mover info': [('VF', (18, 21))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM'], 'auto preterminal span': (0, 28), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX der muste ja)
			(SIMPX der muste eigentlich reichen)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (DM (ADVX (ADV also))), (VF (NX (ADJX (ADJX (CARD vier)) (ADJX (CARD viereinhalb))) (NN stunden))), (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)) (NX (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NN fahrzeit))) (PX (APPR nach) (NX (NE hannover))))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(VF (NX (ADJX (ADJX (CARD vier)) (ADJX (CARD viereinhalb))) (NN stunden))), (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)) (NX (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NN fahrzeit))) (PX (APPR nach) (NX (NE hannover))))))], 'left siblings': [(SIMPX (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV ja)))) (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen))))), (DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		[01;36m(ADVX[00m
			(DM
				(DM also)
				(DM also))[01;36m)[00m
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(VF (NX (ADJX (ADJX (CARD vier)) (ADJX (CARD viereinhalb))) (NN stunden))), (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)) (NX (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NN fahrzeit))) (PX (APPR nach) (NX (NE hannover))))))], 'left siblings': [(SIMPX (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV ja)))) (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen))))), (DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'TURN', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		(ADVX also also)
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (8, 15), 'span': (8, 10), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		[01;31m(SIMPX[00m
			(NX munchen hannover)
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		(ADVX also also)
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['DM', 'ADVX', 'VF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (8, 15), 'left siblings': ['SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(NX munchen hannover)
		(VF das)
		(LK sind)
		(MF knapp funf stunden)
		(DM ja)
		(ADVX also also)
		[01;31m(VF[00m
			(NX
				(ADJX vier viereinhalb)
				(NN stunden))[01;31m)[00m
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'NX', 'VF', 'LK', 'MF', 'DM', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (18, 21), 'left siblings': ['SIMPX', 'DM', 'NX', 'VF', 'LK', 'MF', 'DM', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(NX munchen hannover)
		(VF das)
		(LK sind)
		(MF knapp funf stunden)
		(DM ja)
		(ADVX also also)
		(NX vier viereinhalb stunden)
		(SIMPX
			(LK sehe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 28), 'span': (23, 28), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP der muste ja der muste eigentlich reichen also munchen hannover das sind knapp funf stunden ja also also vier viereinhalb stunden sehe ich viereinhalb stunden fahrzeit nach hannover)

Sentence 441:
38 Initial errors
0 on fringe, 26 iterations
5 Error:Modifier Attachment
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Modifier Attachment
2 Error:PP Attachment
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Co-ordination
3 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m [01;33m(MF[00m
					[01;36m(NX[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					[01;33m(NX (NX[00m (NX siebzehn uhr zwanzig)[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADVX sogar) [01;33mNX)[00m
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m [01;33mNX) MF) NF) SIMPX)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							[01;31m(MF[00m
								[01;36m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(PX um zwanzig nach acht) [01;33mNF) SIMPX)[00m[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(FKOORD (LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)[01;31m)[00m [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADJX'], 'mover info': [('ADJX', (57, 63))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (0, 85), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX [01;33m(NX[00m
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar) [01;33mNX)[00m
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							[01;31m(MF[00m
								[01;36m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(PX um zwanzig nach acht) [01;33mNF) SIMPX)[00m[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(FKOORD (LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)[01;31m)[00m [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:PP Attachment
{'new_parent': 'LKMVC', 'new_family': ['LK', 'MF', 'SIMPX', 'PX', 'VC'], 'mover info': [('SIMPX', (73, 75)), ('PX', (75, 77))], 'old_family': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'PX'], 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (66, 78), 'adding node already present': False, 'movers': ['SIMPX', 'PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'LKMVC'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX [01;33m(NX[00m
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar) [01;33mNX)[00m
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover) [01;33mMF)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VC[00m [01;31m(LK[00m
							(VXINF
								(VVFIN nehmen))[01;31m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX [01;33m(NX[00m
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar) [01;33mNX)[00m
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover) [01;33mMF)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Different label
{'family': ['VC', 'MF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VXINF'], 'parent': 'LKM', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX [01;33m(NX[00m
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar) [01;33mNX)[00m
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover) [01;33mMF)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (57, 58))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['ADJX'], 'end left siblings': ['NX'], 'auto preterminal span': (54, 63), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover) [01;33mMF)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (75, 77))], 'old_family': ['SIMPX', 'PX', 'VC'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX'], 'auto preterminal span': (73, 78), 'movers': ['PX'], 'old_parent': 'LKMVC', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET add
{'subtrees': ['LKM', 'LKM'], 'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': [(KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an)))], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))))], 'auto preterminal span': (14, 24), 'span': (14, 24), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m)
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK gibt)
			(MF
				[01;36m(NX[00m
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN'), 'right siblings': [(NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig))))))], 'left siblings': [], 'auto preterminal span': (51, 54), 'span': (51, 54), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m)
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['VF', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (1, 30), 'span': (1, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(NX siebenundzwanzigster januar)
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m)
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (1, 30), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK fahren)
				(MF wir)
				(VC los)[01;31m)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				(MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX
				[01;31m(LKM[00m
					(LK sind)
					(MF um funfzehn uhr in hannover)[01;31m)[00m
				[01;31m(LKM[00m
					(VC nehmen)
					(MF da ein taxi)[01;31m)[00m)
			(KON und)
			(KON und)
			(KON und)
			[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['APPR', 'LKM', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (4, 30), 'span': (4, 7), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		[01;31m(FKOORD[00m
			(LK fahren)
			(MF wir)
			(VC los)
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				(MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX
				[01;31m(LKM[00m
					(LK sind)
					(MF um funfzehn uhr in hannover)[01;31m)[00m
				[01;31m(LKM[00m
					(VC nehmen)
					(MF da ein taxi)[01;31m)[00m)
			(KON und)
			(KON und)
			(KON und)
			[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'APPR', 'LKM', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'family': ['DM', 'NX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (4, 30), 'left siblings': ['DM', 'NX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			(MF den ice um zehn uhr)[01;31m)[00m
		(SIMPX
			[01;31m(LKM[00m
				(LK sind)
				(MF um funfzehn uhr in hannover)[01;31m)[00m
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LKM', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (8, 14), 'left siblings': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX
			[01;31m(LKM[00m
				(LK sind)
				(MF um funfzehn uhr in hannover)[01;31m)[00m
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': ['LKM'], 'parent': 'SIMPX', 'auto preterminal span': (14, 24), 'span': (14, 20), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX
			(LK sind)
			(MF um funfzehn uhr in hannover)
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['VC', 'MF'], 'family': ['LK', 'MF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 24), 'span': (20, 24), 'left siblings': ['LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (30, 40), 'left siblings': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		[01;36m(LKM[00m
			(LKMVC kommen rechtzeitig an)
			(KOORD und)[01;36m)[00m
		(VF dann)
		(LK wurden)
		[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
		(VC zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET add
{'subtrees': ['LKMVC', 'KOORD'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADJD', 'PTKVZ', 'KON'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))), (VC (VXINF (VVINF zuruckfahren))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (LKMVC (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))) (VC (VXINF (VVINF abfliegen))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN fahren))), (MF (NX (PPER wir))), (VC (PTKVZ los)), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und)], 'auto preterminal span': (27, 31), 'span': (27, 31), 'parent': 'TURN', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
		(VC zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (40, 49), 'left siblings': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		[01;36m(MF[00m
			(MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)
			(VF da)
			(LK wurde)
			(MF ich vielleicht)[01;36m)[00m
		(VC sagen)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(NF wir nehmen das flugzeug)
				(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET add
{'subtrees': ['MF', 'VC', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV'), 'right siblings': [(VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (LKMVC (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))) (VC (VXINF (VVINF abfliegen))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN fahren))), (MF (NX (PPER wir))), (VC (PTKVZ los)), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden)))], 'auto preterminal span': (33, 44), 'span': (33, 44), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(NF wir nehmen das flugzeug)
				(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (LKMVC (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))) (VC (VXINF (VVINF abfliegen))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN fahren))), (MF (NX (PPER wir))), (VC (PTKVZ los)), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren))) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht)))), (VC (VXINF (VVINF sagen)))], 'auto preterminal span': (45, 63), 'span': (45, 63), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		[01;36m(NF[00m
			(SIMPX
				(NF wir nehmen das flugzeug)
				(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (LKMVC (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))) (VC (VXINF (VVINF abfliegen))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN fahren))), (MF (NX (PPER wir))), (VC (PTKVZ los)), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren))) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht)))), (VC (VXINF (VVINF sagen)))], 'auto preterminal span': (45, 63), 'span': (45, 63), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK konnen)
							(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
							(LKMVC [01;33m(FKOORD[00m
								[01;31m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m
								(VC abfliegen))[01;31m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m)) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (63, 85), 'left siblings': ['DM', 'NX', 'VF', 'LK', 'MF', 'VC', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF [01;33m(SIMPX (NF[00m
			(SIMPX
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK konnen)
						(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
						(LKMVC [01;33m(FKOORD[00m
							[01;31m(SIMPX[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m
							(VC abfliegen))[01;31m)[00m
					(KON und)
					(LKM sind in siebzig minuten in munchen)[01;31m)[00m)))) [01;33mFKOORD)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'LKMVC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (66, 85), 'span': (66, 78), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF [01;33m(SIMPX (NF[00m
			(SIMPX
				(VF wir)
				[01;31m(FKOORD[00m
					(LK konnen)
					(MF auch noch um zwanzig nach acht) [01;33mNF) SIMPX)[00m
					[01;36m(FKOORD[00m
						(LKMVC
							[01;31m(SIMPX[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m
							(VC abfliegen))
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;36m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'FKOORD'], 'mover info': [('LK', (66, 67)), ('MF', (67, 73))], 'old_family': ['LK', 'MF', 'LKMVC', 'KON', 'LKM'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['LKMVC', 'KON', 'LKM'], 'end left siblings': ['VF'], 'auto preterminal span': (65, 85), 'adding node already present': False, 'movers': ['LK', 'MF'], 'old_parent': 'FKOORD', 'added and moved': True, 'end right siblings': ['FKOORD'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				[01;36m(SIMPX[00m
					(NF
						(VF wir)
						(LK konnen)
						(MF auch noch um zwanzig nach acht))[01;36m)[00m
				(FKOORD
					(LKMVC
						[01;31m(SIMPX[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m
						(VC abfliegen))
					(KON und)
					(LKM sind in siebzig minuten in munchen))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['SIMPX', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(FKOORD (LKMVC (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))], 'left siblings': [], 'auto preterminal span': (65, 73), 'span': (65, 73), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(VF dann)
		(LK fahren)
		(MF wir)
		(VC los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(SIMPX sind um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(SIMPX wir konnen auch noch um zwanzig nach acht)
				(FKOORD
					(LKMVC
						[01;31m(SIMPX[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m
						(VC abfliegen))
					(KON und)
					(LKM sind in siebzig minuten in munchen))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (73, 78), 'span': (73, 77), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig das heist wir konnen auch noch um zwanzig nach acht konnen wir in hannover abfliegen und sind in siebzig minuten in munchen)

Sentence 442:
0 Initial errors
0 on fringe, 0 iterations

Sentence 443:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX dann haben wir einen termin)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK haben)
			(MF einen zug)[01;31m)[00m
		(SIMPX wir haben einen flug fur die ruckfahrt)
		(SIMPX wir haben ein hotel fur die nacht)
		(SIMPX wir haben ein treffen)
		(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (7, 11), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also dann haben wir einen termin wir haben einen zug wir haben einen flug fur die ruckfahrt wir haben ein hotel fur die nacht wir haben ein treffen dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)

Sentence 444:
0 Initial errors
0 on fringe, 0 iterations

Sentence 445:
0 Initial errors
0 on fringe, 0 iterations

Sentence 446:
0 Initial errors
0 on fringe, 0 iterations

Sentence 447:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			(VC
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					(VXINF wegfliegen)[01;31m)[00m))
		(PX je nachdem)))
Step:Unary
{'subtrees': ['VXINF', 'VXINF'], 'family': ['VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VVINF'), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (7, 9), 'span': (7, 9), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay konnen wir um zehn uhr etwa wegfahren wegfliegen je nachdem)

Sentence 448:
0 Initial errors
0 on fringe, 0 iterations

Sentence 449:
20 Initial errors
0 on fringe, 15 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE maritimhotel)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX) SIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten)
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX ja)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein hotel luisenhof) [01;33mMF) SIMPX)[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				(ADJX uberflussig)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (30, 33))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (16, 53), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE maritimhotel)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX) SIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten)
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				(ADJX uberflussig)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX) SIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten)
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				(ADJX uberflussig)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:Different label
{'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'auto preterminal span': (40, 42), 'span': (40, 42), 'subtrees': ['NX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PIS', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX) SIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten)
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			(NX alles uberflussig) [01;33mNX)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ADJX maritimhotel) [01;33mNX)[00m
				(PX am hauptbahnhof) [01;33mSIMPX) SIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten)
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			(NX alles uberflussig) [01;33mNX)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (16, 53), 'span': (16, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			(ADJX maritimhotel) [01;33mNX)[00m
			(PX am hauptbahnhof) [01;33mSIMPX) SIMPX)[00m
			[01;31m(NX[00m
				(NX funfzehn minuten)
				(PX zum zentrum)[01;31m)[00m
			(DM na ja)
			(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				[01;31m(NX[00m
					(NX bar)
					(NX restaurant)
					[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
			(NX alles uberflussig) [01;33mNX)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX', 'NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (16, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX ich habe hier eine liste von meiner sekretarin)
			[01;36m(SIMPX[00m
				[01;36m(NX[00m
					(NX drei moglichkeiten)
					(ADJX maritimhotel)[01;36m)[00m
				(PX am hauptbahnhof)[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			(NX funfzehn minuten)
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			[01;31m(NX[00m
				(NX bar)
				(NX restaurant)
				[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'NX', 'ADJX', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN'), 'right siblings': [(NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum)))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))), (NX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (NX (NX (NN bar)) (NX (NN restaurant)) (NX (NN garage)))), (NX (NX (PIS alles)) (ADJX (ADJD uberflussig))), (KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))))], 'auto preterminal span': (6, 19), 'span': (6, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(SIMPX ich habe hier eine liste von meiner sekretarin)
			[01;36m(SIMPX[00m
				[01;36m(NX[00m
					(NX drei moglichkeiten)
					(ADJX maritimhotel)[01;36m)[00m
				(PX am hauptbahnhof)[01;36m)[00m)
		[01;31m(NX[00m
			(NX funfzehn minuten)
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			[01;31m(NX[00m
				(NX bar)
				(NX restaurant)
				[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['SIMPX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NE'), 'right siblings': [(PX (APPRART am) (NX (NN hauptbahnhof)))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin))))))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(SIMPX ich habe hier eine liste von meiner sekretarin)
			[01;36m(SIMPX[00m
				(NX drei moglichkeiten maritimhotel)
				(PX am hauptbahnhof)[01;36m)[00m)
		[01;31m(NX[00m
			(NX funfzehn minuten)
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			[01;31m(NX[00m
				(NX bar)
				(NX restaurant)
				[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin))))))], 'auto preterminal span': (14, 19), 'span': (14, 19), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		[01;31m(NX[00m
			(NX funfzehn minuten)
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			[01;31m(NX[00m
				(NX bar)
				(NX restaurant)
				[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (19, 23), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(NX funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			[01;31m(NX[00m
				(NX bar)
				(NX restaurant)
				[01;33m(NX[00m (NX garage)[01;31m)[00m[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (33, 40), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(NX funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		[01;31m(NX[00m
			(NX bar)
			(NX restaurant)
			[01;33m(NX[00m (NX garage)[01;31m)[00m
		(NX alles uberflussig) [01;33mNX)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (37, 40), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(NX funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		(NX bar)
		(NX restaurant)
		[01;36m(NX[00m
			(NX garage)
			(NX alles uberflussig)[01;36m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PIS', 'ADJD'), 'right siblings': [(KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin)))))) (SIMPX (NX (NX (ADJX (CARD drei)) (NN moglichkeiten)) (ADJX (NE maritimhotel))) (PX (APPRART am) (NX (NN hauptbahnhof))))), (NX (ADJX (CARD funfzehn)) (NN minuten)), (PX (APPRART zum) (NX (NN zentrum))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))), (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))), (NX (NN bar)), (NX (NN restaurant))], 'auto preterminal span': (39, 42), 'span': (39, 42), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(NX funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		(NX bar)
		(NX restaurant)
		(NX garage alles uberflussig)
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (43, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(NX funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		(NX bar)
		(NX restaurant)
		(NX garage alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof)
		(ADVX noch)
		(NX ein hotel mit schwimm und dampfbad)
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'NX', 'KON', 'PX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (53, 56), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'NX', 'NX', 'KON', 'PX', 'ADVX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hotels ja mussen wir mal kucken ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten zum zentrum na ja garage brauchen wir ja nicht ein hotel luisenhof funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad brauchen wir es)

Sentence 450:
6 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK ist)
			(MF ein bischen teurer)[01;31m)[00m
		(NX [01;33m(NX[00m
			(NX einzelzimmer zwohundert achtundvierzig mark)
			(KON und)
			[01;33m(NX[00m (NX doppelzimmer)
			[01;31m(PX[00m [01;33m(PX[00m
				(APPRART im)
				[01;31m(NX[00m
					(NX doppelzimmer) [01;33mPX) NX) NX)[00m
					(NX hundert dreiundvierzig)[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'NX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VAFIN', 'ART', 'PIS', 'ADJD', 'NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'NX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK ist)
			(MF ein bischen teurer)[01;31m)[00m
		(NX
			(NX
				(NX einzelzimmer zwohundert achtundvierzig mark)
				(KON und)
				[01;36m(NX[00m
					(NX doppelzimmer)
					(PX im doppelzimmer)[01;36m)[00m)
			(NX hundert dreiundvierzig))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (NX (NN einzelzimmer)) (NX (ADJX (CARD zwohundert) (CARD achtundvierzig)) (NN mark))), (KON und)], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK ist)
			(MF ein bischen teurer)[01;31m)[00m
		(NX einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'PIS', 'ADJD', 'NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 4), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ist ein bischen teurer einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)

Sentence 451:
17 Initial errors
0 on fringe, 16 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(ADVX[00m
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;36m(MF[00m
					(MF es am dienstag etwas spater)
					(DM ja)
					[01;36m(PX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['ADVX', 'ADVX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('ADVX', (0, 1))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;36m(MF[00m
					(MF es am dienstag etwas spater)
					(DM ja)
					[01;36m(PX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'DM', 'PX', 'ADJX'], 'family': ['PARORD', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))) (KON und) (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen)))))))], 'left siblings': [(PARORD (ADVX (ADV nur)))], 'auto preterminal span': (3, 15), 'span': (3, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			(SIMPX
				(VF wahrscheinlich)
				(LK wird)
				[01;36m(MF[00m
					(MF es am dienstag etwas spater)
					(DM ja)
					[01;36m(PX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m[01;36m)[00m)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:PP Attachment
{'subtrees': ['MF', 'DM', 'PX', 'ADJX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV wahrscheinlich))), (LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			(SIMPX
				(VF wahrscheinlich)
				(LK wird)
				(MF
					(MF es am dienstag etwas spater)
					(DM ja)
					[01;36m(PX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m))
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['MF', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(MF (NX (PPER es)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))), (DM (PTKANT ja))], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['MVC', 'KOORD', 'MVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))], 'left siblings': [(MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen))))], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m
			(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						(KOORD und)
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PARORD', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 23), 'span': (2, 3), 'left siblings': [], 'label': 'PARORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		[01;31m(SIMPX[00m
			(ADVX nur)
			(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
						(KOORD und)
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Clause Attachment
{'subtrees': ['ADVX', 'SIMPX', 'NF'], 'family': ['ADVX', 'ADVX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (2, 23), 'left siblings': ['ADVX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		[01;31m(NF[00m [01;33m(SIMPX[00m
			(SIMPX
				(C bis)
				[01;31m(FKOORD[00m
					[01;31m(MVC[00m
						[01;31m(MF[00m
							(NX wir)
							[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
					(KOORD und)
					[01;31m(MVC[00m
						(MF was)
						(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'SIMPX', 'NF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (15, 23), 'left siblings': ['ADVX', 'ADVX', 'ADVX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX [01;33m(SIMPX[00m
			(C bis)
			[01;31m(FKOORD[00m
				[01;31m(MVC[00m
					[01;31m(MF[00m
						(NX wir)
						[01;33m(ADJX[00m (ADVX uberhaupt)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) SIMPX)[00m
				(KOORD und)
				[01;31m(MVC[00m
					(MF was)
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'MVC', 'auto preterminal span': (16, 19), 'span': (16, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX [01;33m(SIMPX[00m
			(C bis)
			[01;31m(FKOORD[00m
				[01;31m(MVC[00m
					(NX wir)
					[01;36m(ADJX[00m
						(ADVX uberhaupt)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(KOORD und)
				[01;31m(MVC[00m
					(MF was)
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'VC'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MVC', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX [01;33m(SIMPX[00m
			(C bis)
			[01;31m(FKOORD[00m
				[01;31m(MVC[00m
					(NX wir)
					(ADJX
						(ADVX uberhaupt)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
				(KOORD und)
				[01;31m(MVC[00m
					(MF was)
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['MVC', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['KOORD', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX [01;33m(SIMPX[00m
			(C bis)
			[01;31m(FKOORD[00m
				(NX wir)
				(ADJX
					(ADVX uberhaupt)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m) [01;33mSIMPX)[00m
				(KOORD und)
				[01;31m(MVC[00m
					(MF was)
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX', 'KOORD', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (16, 23), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			[01;36m(SIMPX[00m
				(C bis)
				(NX wir)
				(ADJX
					(ADVX uberhaupt)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m)[01;36m)[00m
			(KOORD und)
			[01;31m(MVC[00m
				(MF was)
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['C', 'NX', 'ADJX'], 'family': ['SIMPX', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [(KOORD (KON und)), (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))], 'left siblings': [], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(SIMPX
				(C bis)
				(NX wir)
				(ADJX
					(ADVX uberhaupt)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m))
			(KOORD und)
			[01;31m(MVC[00m
				(MF was)
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (18, 19), 'span': (18, 19), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(SIMPX
				(C bis)
				(NX wir)
				(ADJX
					(ADVX uberhaupt)
					[01;31m(VC[00m
						(VVFIN loskommen)[01;31m)[00m))
			(KOORD und)
			[01;31m(MVC[00m
				(MF was)
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['ADVX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell)
		(ADVX immer)
		(ADVX nur)
		(SIMPX wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(SIMPX bis wir uberhaupt loskommen)
			(KOORD und)
			[01;31m(MVC[00m
				(MF was)
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (20, 23), 'left siblings': ['SIMPX', 'KOORD'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP prinzipiell immer nur wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater bis wir uberhaupt loskommen und was unternehmen konnen also fur viele veranstaltungen wird es eher zu spat werden)

Sentence 452:
0 Initial errors
0 on fringe, 0 iterations

Sentence 453:
17 Initial errors
0 on fringe, 12 iterations
4 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF dienstag funfter mai)
					(LK konnte)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX
							(PPER ich))[01;31m)[00m[01;31m)[00m
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJA funfter)[01;31m)[00m[01;36m)[00m
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'DM'], 'mover info': [('DM', (51, 52))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 58), 'movers': ['DM'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJA funfter)[01;31m)[00m[01;36m)[00m
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (52, 53), 'span': (52, 53), 'subtrees': ['ADJA'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['ADJX', 'ADVX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (30, 36), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPR uber) (NX (NE ostern)))], 'left siblings': [], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (PX (APPRART im) (NX (NN april)))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD schlecht)))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (PX (PX (APPR in) (NX (ART der) (NN mitte))) (PX (APPRART vom) (NX (NN april)))) (NX (NN urlaub)))), (PX (DM (ADVX (ADV also))) (PX (APPR uber) (NX (NE ostern)))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fahren))) (MF (PX (APPR uber) (NX (NE ostern)))) (VC (PTKVZ weg))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADJX (PTKA am) (ADJD liebsten)) (PX (ADVX (ADV direkt)) (APPR in) (NX (ART den) (NN mai)))) (VC (VXINF (VVINF gehen)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR bei) (NX (PPER mir))) (NX (ART die) (ADJX (ADJA erste)) (NN maiwoche)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (46, 58), 'span': (46, 58), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (14, 19), 'span': (14, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					(APPR in)
					[01;36m(NX[00m
						(NX der mitte)
						(PX vom april)[01;36m)[00m)
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(APPR in)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		[01;31m(PX[00m
			(DM also)
			[01;33m(PX[00m (PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (20, 23), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		[01;33m(PX[00m (PX uber ostern)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern) [01;33mPX)[00m
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (23, 28), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		[01;36m(PX[00m
			(PX uber ostern)
			(VF wir)
			(LK fahren)
			(MF uber ostern)[01;36m)[00m
		(VC weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:UNSET add
{'subtrees': ['PX', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'PX', 'VC', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE'), 'right siblings': [(VC (PTKVZ weg)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADJX (PTKA am) (ADJD liebsten)) (PX (ADVX (ADV direkt)) (APPR in) (NX (ART den) (NN mai)))) (VC (VXINF (VVINF gehen)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR bei) (NX (PPER mir))) (NX (ART die) (ADJX (ADJA erste)) (NN maiwoche)))), (DM (ADVX (ADV also))), (SIMPX (SIMPX (VF (NX (NN dienstag) (NX (ADJX (ADJA funfter)) (NN mai)))) (LK (VXFIN (VMFIN konnte))) (MF (NX (PPER ich)) (DM (ADVX (ADV also))))) (SIMPX (VF (NX (ADJX (NX (ADJA funfter)) (ADJX (ADJA sechster))) (NN mai))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN zeit)))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (PX (APPRART im) (NX (NN april)))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD schlecht)))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (PX (APPR in) (NX (NX (ART der) (NN mitte)) (PX (APPRART vom) (NX (NN april))))) (NX (NN urlaub)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (21, 27), 'span': (21, 27), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(PX uber ostern wir fahren uber ostern)
		(VC weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX
				(VF dienstag funfter mai)
				(LK konnte)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m))
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (50, 52), 'span': (51, 52), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(PX uber ostern wir fahren uber ostern)
		(VC weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(SIMPX dienstag funfter mai konnte ich also)
			(SIMPX
				(VF
					(NX
						[01;31m(ADJX[00m
							(NX funfter)
							(ADJX sechster)[01;31m)[00m
						(NN mai)))
				(LK hatte)
				(MF ich zeit)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (52, 55), 'span': (52, 54), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also ich wurde mal sagen im april ist es ein bischen schlecht ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg ich wurde am liebsten direkt in den mai gehen und da ware bei mir die erste maiwoche also dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)

Sentence 454:
0 Initial errors
0 on fringe, 0 iterations

Sentence 455:
0 Initial errors
0 on fringe, 0 iterations

Sentence 456:
23 Initial errors
0 on fringe, 17 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(LK sagen)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(ADVX mal)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						[01;31m(NX[00m
							(PX mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mMF)[00m
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(NF[00m [01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann um neun oder zehn)
					(VC fahren))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN lesen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'MF'], 'mover info': [('MF', (6, 13))], 'old_family': ['VF', 'LK', 'SIMPX', 'MF'], 'start left siblings': ['VF', 'LK', 'SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (1, 13), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(NF[00m [01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann um neun oder zehn)
					(VC fahren))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN lesen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['NF', 'SIMPX', 'VF', 'FKOORD'], 'auto preterminal span': (25, 33), 'span': (25, 33), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN lesen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['VXINF', 'NX'], 'auto preterminal span': (48, 49), 'span': (48, 49), 'subtrees': ['VXFIN'], 'parent': 'LKM', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VXINF')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					[01;36m(VC[00m
						(VXINF
							[01;31m(VXFIN[00m
								(VVFIN lesen)[01;31m)[00m)[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (48, 49), 'span': (48, 49), 'subtrees': ['VVFIN'], 'parent': 'VXINF', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VC')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (3, 13), 'span': (3, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VXINF', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(VXINF (VC (VVFIN lesen)))], 'auto preterminal span': (49, 52), 'span': (49, 52), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LKMVC haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['LKMVC', 'KON', 'LKMVC'], 'family': ['LKM', 'LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice))))), (LKM (VXINF (VC (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung))))], 'auto preterminal span': (52, 66), 'span': (52, 66), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
				(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'ADVX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (6, 13), 'left siblings': ['NX', 'ADVX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(NX wir)
						(ADVX mal)
						[01;31m(NX[00m
							(PX mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
				(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:PP Attachment
{'subtrees': ['PX', 'NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (6, 13), 'left siblings': ['NX', 'ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)[01;31m)[00m
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
				(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (18, 25), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		[01;31m(SIMPX[00m
			(NF wenn wir dann um neun oder zehn fahren)
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF wir)
				(NF wir konnten um neun fahren)[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
				(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (25, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		[01;31m(SIMPX[00m
			(LK sagen)
			(MF wir)
			(NF wir konnten um neun fahren)[01;31m)[00m
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			[01;31m(LKM[00m
				(VXINF lesen)
				(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
			(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (33, 40), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		(LK sagen)
		(MF wir)
		(NF wir konnten um neun fahren)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			[01;31m(LKM[00m
				(VXINF lesen)
				(MF ein bischen zeitung)[01;31m)[00m [01;33mMF) SIMPX)[00m
			(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['LKM', 'SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (41, 66), 'span': (41, 48), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		(LK sagen)
		(MF wir)
		(NF wir konnten um neun fahren)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK nehmen)
			[01;36m(MF[00m
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['MF', 'LKM'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN'), 'right siblings': [(SIMPX (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet)))) (KON und) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an))))], 'left siblings': [(LK (VXFIN (VVFIN nehmen)))], 'auto preterminal span': (42, 52), 'span': (42, 52), 'parent': 'FKOORD', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		(LK sagen)
		(MF wir)
		(NF wir konnten um neun fahren)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK nehmen)
			(MF
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m) [01;33mSIMPX)[00m
			(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'LK', 'MF', 'NF', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (41, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'LK', 'MF', 'NF', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		(LK sagen)
		(MF wir)
		(NF wir konnten um neun fahren)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK nehmen)
			(MF
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m)[01;36m)[00m
		(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN'), 'right siblings': [(SIMPX (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet)))) (KON und) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch))) (VC (VXINF (VVINF machen))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir)) (ADVX (ADV mal)) (PX (APPR mit) (NX (ART dem) (NE ice))) (NX (ADJX (CARD funf)) (NN stunden)) (PX (APPR nach) (NX (NE hannover))))))), (SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen)))), (DM (ITJ na) (PTKANT ja)), (VF (NX (ADJX (CARD funfzehn)) (NN uhr))), (LK (VXFIN (VMFIN mussen))), (MF (NX (PPER wir)) (ADVX (ADV vielleicht)) (ADVX (ADV da))), (VC (VXINF (VAINF sein))), (NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))), (LK (VXFIN (VVFIN sagen))), (MF (NX (PPER wir))), (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren)))))], 'auto preterminal span': (40, 52), 'span': (40, 52), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(VF funfzehn uhr)
		(LK mussen)
		(MF wir vielleicht da)
		(VC sein)
		(NF wenn wir dann um neun oder zehn fahren)
		(LK sagen)
		(MF wir)
		(NF wir konnten um neun fahren)
		(SIMPX
			(VF dann)
			(LK nehmen)
			(MF
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(VXINF lesen)
					(MF ein bischen zeitung)[01;31m)[00m))
		(SIMPX haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['VXINF', 'MF'], 'family': ['MF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (42, 52), 'span': (48, 52), 'left siblings': ['MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an das ware doch das konnten wir noch machen)

Sentence 457:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX grade am montag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir hatten)
		(SIMPX wir haben ein datum)
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(NX (NN moment))], 'left siblings': [], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(PX grade am montag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(KOORD und)
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir hatten)
		(SIMPX wir haben ein datum)
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Unary
{'subtrees': ['NX'], 'family': ['KOORD', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(PX grade am montag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(KOORD und)
				(DM moment)[01;31m)[00m[01;31m)[00m
		(SIMPX wir hatten)
		(SIMPX wir haben ein datum)
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Unary
{'subtrees': ['NX'], 'family': ['PX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (3, 5), 'left siblings': ['PX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX grade am montag)
		[01;31m(NX[00m
			(KOORD und)
			(DM moment)[01;31m)[00m
		(SIMPX wir hatten)
		(SIMPX wir haben ein datum)
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:UNSET remove
{'subtrees': ['KOORD', 'DM'], 'family': ['PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (3, 5), 'left siblings': ['PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP grade am montag und moment wir hatten wir haben ein datum wir haben einen zug wie kommen wir denn zuruck hast du informationen uber eine ruckreise)

Sentence 458:
45 Initial errors
0 on fringe, 34 iterations
4 Error:UNSET move
4 Error:PP Attachment
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX einfach)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(APPR auser)
			[01;36m(NF[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)[01;36m)[00m
					(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX das marriotthotel hannover) [01;33mSIMPX)[00m
					[01;31m(NX[00m
						(ART das)
						[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
					[01;36m(LV[00m
						(NX
							(ART das)
							(NX hotel cristal hannover))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;36m(ADJX[00m [01;31m(ADVX[00m [01;33m(ADJX[00m
						(ADV minder)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ART'], 'mover info': [('ART', (11, 12))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'ART', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 132), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(APPR auser)
			[01;36m(NF[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)[01;36m)[00m
					(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX das marriotthotel hannover) [01;33mSIMPX)[00m
					[01;31m(NX[00m
						(ART das)
						[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
					[01;36m(LV[00m
						(NX
							(ART das)
							(NX hotel cristal hannover))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;36m(ADJX[00m [01;31m(ADVX[00m [01;33m(ADJX[00m
						(ADV minder)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (36, 47))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 132), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX das marriotthotel hannover) [01;33mSIMPX)[00m
					[01;31m(NX[00m
						(ART das)
						[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
					[01;36m(LV[00m
						(NX
							(ART das)
							(NX hotel cristal hannover))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;36m(ADJX[00m [01;31m(ADVX[00m [01;33m(ADJX[00m
						(ADV minder)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'NX', 'VF', 'LK', 'MF'], 'mover info': [('NX', (89, 92)), ('NX', (92, 96))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 132), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;36m(ADJX[00m [01;31m(ADVX[00m [01;33m(ADJX[00m
						(ADV minder)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'KON', 'ADJX'], 'auto preterminal span': (101, 102), 'span': (101, 102), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'NX'], 'auto preterminal span': (125, 126), 'span': (125, 126), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('KOORD', (66, 67)), ('VF', (67, 70))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 132), 'movers': ['KOORD', 'VF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								[01;36m(SIMPX[00m
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)[01;36m)[00m
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen)))))], 'left siblings': [], 'auto preterminal span': (37, 43), 'span': (37, 43), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						[01;36m(NF[00m
							(SIMPX
								(SIMPX das wir immer noch nicht wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['APPR', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(APPR auser)], 'auto preterminal span': (37, 47), 'span': (37, 47), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)[01;36m)[00m
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [(KOORD (KON oder)), (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))), (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NE hannover)))))), (SIMPX (NX (ART das) (NX (NX (NE parkhotel)) (NX (NE hannover)))) (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover))))) (VF (NX (PDS die))) (LK (VXFIN (VAFIN sind))) (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADJX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (NX (PRF mir)) (ADVX (ADV mal)) (NX (ART die) (NN preise))) (VC (PTKVZ an))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (ADVX (PROP dafur)) (ADVX (ADV aber)) (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))))))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (VF (ADVX (ADV dann))) (FKOORD (LKMVC (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (KON und) (LKMN (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck))))))), (DM (ITJ gut)), (ADVX (ADV dann)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles))) (PX (APPR auser) (NF (SIMPX (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen)))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen)))))))))))], 'auto preterminal span': (47, 66), 'span': (47, 66), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste)
				(VC vorbereitet)
				(NF mit hotels)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (78, 84), 'span': (78, 84), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			[01;36m(LV[00m
				(NX
					(ART das)
					(NX hotel cristal hannover)) [01;33mNX)[00m[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE'), 'right siblings': [(VF (NX (PDS die))), (LK (VXFIN (VAFIN sind))), (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADJX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))], 'left siblings': [(NX (ART das) (NX (NX (NE parkhotel)) (NX (NE hannover))))], 'auto preterminal span': (92, 96), 'span': (92, 96), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': ['KON', 'LKMN'], 'parent': 'FKOORD', 'auto preterminal span': (13, 27), 'span': (13, 21), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen) [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'KON', 'LKMN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (13, 27), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen)[01;36m)[00m
			(KON und)
			[01;31m(LKMN[00m
				(LK sagen)
				(MF einfach)
				(NF wir fliegen zuruck)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [(KON und), (LKMN (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck)))))], 'left siblings': [], 'auto preterminal span': (12, 21), 'span': (12, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
			(KON und)
			[01;31m(LKMN[00m
				(LK sagen)
				(MF einfach)
				(NF wir fliegen zuruck)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (22, 27), 'left siblings': ['SIMPX', 'KON'], 'label': 'LKMN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					[01;31m(MF[00m
						(NX wir)
						(NX alles)[01;31m)[00m
					[01;31m(PX[00m
						(APPR auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (29, 47), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				[01;31m(MF[00m
					(NX wir)
					(NX alles)[01;31m)[00m
				[01;31m(PX[00m
					(APPR auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (32, 47), 'span': (34, 36), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(NX wir)
				(NX alles)
				[01;31m(PX[00m
					(APPR auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPR', 'NF'], 'family': ['VF', 'LK', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 47), 'span': (36, 47), 'left siblings': ['VF', 'LK', 'NX', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (66, 67), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				(NX
					(ART das)
					(NX marriotthotel hannover))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (84, 89), 'span': (86, 89), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(ART das)
				[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
			(LV das hotel cristal hannover) [01;33mNX)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['LV', 'VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (89, 107), 'span': (89, 92), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		[01;31m(SIMPX[00m
			(ART das)
			[01;36m(NX[00m
				(NX parkhotel hannover)
				(LV das hotel cristal hannover)[01;36m)[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'LV'], 'family': ['ART', 'NX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'right siblings': [(VF (NX (PDS die))), (LK (VXFIN (VAFIN sind))), (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADJX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))], 'left siblings': [(ART das)], 'auto preterminal span': (90, 96), 'span': (90, 96), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		[01;31m(SIMPX[00m
			(ART das)
			(NX parkhotel hannover das hotel cristal hannover)
			(VF die)
			(LK sind)
			[01;31m(MF[00m [01;33m(NX[00m
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mNX)[00m
					(KON oder)
					[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (89, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		[01;31m(MF[00m [01;33m(NX[00m
			(NX alle)
			[01;31m(ADVX[00m
				(ADVX mehr) [01;33mNX)[00m
				(KON oder)
				[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
			(PX in der nahe vom hauptbahnhof)[01;31m)[00m [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (98, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		[01;33m(NX[00m (NX alle)
		[01;31m(ADVX[00m
			(ADVX mehr) [01;33mNX)[00m
			(KON oder)
			[01;33m(ADJX[00m (ADJX minder)[01;31m)[00m
		(PX in der nahe vom hauptbahnhof) [01;33mADJX)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'KON', 'ADJX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'ADVX', 'PX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['PX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (99, 102), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		[01;36m(NX[00m
			(NX alle)
			(ADVX mehr)[01;36m)[00m
		(KON oder)
		[01;36m(ADJX[00m
			(ADJX minder)
			(PX in der nahe vom hauptbahnhof)[01;36m)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'PX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV'), 'right siblings': [(KON oder), (ADJX (ADV minder)), (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (NX (PRF mir)) (ADVX (ADV mal)) (NX (ART die) (NN preise))) (VC (PTKVZ an))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (ADVX (PROP dafur)) (ADVX (ADV aber)) (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))))))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (KON und) (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck))))), (DM (ITJ gut)), (ADVX (ADV dann)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich))), (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (NX (PPER wir)) (NX (PIS alles)) (APPR auser) (NF (SIMPX (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen)))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel)))))) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar)))) (VC (VXINF (VVINF sitzen))))), (KON oder), (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))), (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NE hannover))))), (ART das), (NX (NX (NX (NE parkhotel)) (NX (NE hannover))) (LV (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover))))))), (VF (NX (PDS die))), (LK (VXFIN (VAFIN sind)))], 'auto preterminal span': (98, 100), 'span': (98, 100), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		[01;36m(ADJX[00m
			(ADJX minder)
			(PX in der nahe vom hauptbahnhof)[01;36m)[00m
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (NX (PRF mir)) (ADVX (ADV mal)) (NX (ART die) (NN preise))) (VC (PTKVZ an))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (ADVX (PROP dafur)) (ADVX (ADV aber)) (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))))))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (KON und) (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck))))), (DM (ITJ gut)), (ADVX (ADV dann)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich))), (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (NX (PPER wir)) (NX (PIS alles)) (APPR auser) (NF (SIMPX (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen)))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel)))))) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar)))) (VC (VXINF (VVINF sitzen))))), (KON oder), (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))), (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NE hannover))))), (ART das), (NX (NX (NX (NE parkhotel)) (NX (NE hannover))) (LV (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover))))))), (VF (NX (PDS die))), (LK (VXFIN (VAFIN sind))), (NX (NX (PIS alle)) (ADVX (ADV mehr))), (KON oder)], 'auto preterminal span': (101, 107), 'span': (101, 107), 'parent': 'TURN', 'label': 'ADJX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(ADVX dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							(NX bar)
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (115, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK ist)
				(MF vielleicht ein bischen teuer)[01;31m)[00m
			[01;31m(LKM[00m
				(LK hat)
				[01;31m(MF[00m
					(ADVX dafur)
					(ADVX aber)
					[01;31m(NX[00m
						(NX sauna)
						(NX solarium)
						(NX bar)
						(KON und)
						(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['LKM'], 'parent': 'FKOORD', 'auto preterminal span': (119, 132), 'span': (119, 124), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			(LK ist)
			(MF vielleicht ein bischen teuer)
			[01;31m(LKM[00m
				(LK hat)
				[01;31m(MF[00m
					(ADVX dafur)
					(ADVX aber)
					[01;31m(NX[00m
						(NX sauna)
						(NX solarium)
						(NX bar)
						(KON und)
						(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKM'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (119, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		[01;31m(LKM[00m
			(LK hat)
			[01;31m(MF[00m
				(ADVX dafur)
				(ADVX aber)
				[01;31m(NX[00m
					(NX sauna)
					(NX solarium)
					(NX bar)
					(KON und)
					(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (124, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		(LK hat)
		[01;31m(MF[00m
			(ADVX dafur)
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (125, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(ART das)
		(NX parkhotel hannover das hotel cristal hannover)
		(VF die)
		(LK sind)
		(NX alle mehr)
		(KON oder)
		(ADJX minder in der nahe vom hauptbahnhof)
		(SIMPX ich kucke mir mal die preise an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		(LK hat)
		(ADVX dafur)
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'NX', 'KON', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'LK', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (127, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'KON', 'ADJX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'LK', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP na ja das stimmt ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da und ich habe hier eine liste vorbereitet mit hotels das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur aber sauna solarium bar und bistro)

Sentence 459:
12 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m [01;33mMF)[00m
					(VC zu gehen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			[01;36m(MF[00m
				(APPR [01;33m(PX[00m mit)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(NX das einzelzimmer) [01;33mPX)[00m
						(PX mit einhundert neunzehn mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX ware das doch das doch annehmbar)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('APPR', (21, 22))], 'old_family': ['VF', 'LK', 'APPR', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (19, 28), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m [01;33mMF)[00m
					(VC zu gehen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m [01;33mMF)[00m
					(VC zu gehen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'PX'], 'mover info': [('MF', (3, 6))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (1, 11), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(ADVX wahrscheinlich)
							(NX keine zeit)[01;31m)[00m
						(PX in die sauna))
					(VC zu gehen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (3, 9), 'span': (3, 6), 'left siblings': [], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF wahrscheinlich keine zeit in die sauna)
					(VC zu gehen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (3, 11), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(SIMPX[00m
				(MF wahrscheinlich keine zeit in die sauna)
				(VC zu gehen)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (3, 11), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (11, 19), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		(SIMPX ware das doch das doch annehmbar)))
Step:Unary
{'subtrees': ['PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 28), 'span': (21, 28), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen also konnten wir auch das parkhotel hannover nehmen das ist mit das einzelzimmer mit einhundert neunzehn mark ware das doch das doch annehmbar)

Sentence 460:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(LK ist)
			(MF zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		[01;36m(NX[00m
			(ART die)[01;36m)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben)))), (DM (ADVX (ADV also))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott))))], 'left siblings': [(DM (ITJ okay)), (SIMPX (VF (NX (NE parkhotel))) (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))) (VC (PTKVZ ein))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (PTKA zu) (ADJD riskant)))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich))))], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(LK ist)
			(MF zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		(NX die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (2, 5), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF parkhotel)
			(LK sehe)
			(MF ich)
			[01;31m(VC[00m
				(PTKVZ ein)[01;31m)[00m
			(LK ist)
			(MF zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		(NX die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VF', 'LK', 'MF', 'VC', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (4, 5), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel also die konnen sich die die konnen sich da auch in hannover keinen durchhanger erlauben also nehmen wir marriott)

Sentence 461:
0 Initial errors
0 on fringe, 0 iterations

Sentence 462:
11 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(KOORD[00m [01;31m(VF[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX machen wir abends was)))
Step:Different label
{'family': ['KOORD', 'LK'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'KOORD')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX machen wir abends was)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (32, 33), 'span': (32, 33), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;36m)[00m)
		(SIMPX machen wir abends was)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (13, 26))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': ['KOORD', 'LK'], 'auto preterminal span': (0, 37), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			(KOORD
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m)
			(LK meine)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;36m)[00m)
		(SIMPX machen wir abends was)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (27, 33), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			(KOORD
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m)
			(LK meine)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX noch)
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)))
		(SIMPX machen wir abends was)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (ADVX (ADV aber))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (13, 26), 'span': (13, 26), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			(KOORD
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m)
			(LK meine)
			(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX noch)
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)))
		(SIMPX machen wir abends was)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'KOORD', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX noch)
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)))
		(SIMPX machen wir abends was)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVINF',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (32, 33), 'span': (32, 33), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut ich gehe auch nicht so oft ins fitnesstudio aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast ja dann konnen wir uns noch uberlegen machen wir abends was)

Sentence 463:
14 Initial errors
0 on fringe, 10 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV doch)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(NX
			(NX kino)
			[01;36m(NX[00m
				(NX theater)
				(NX restaurant)[01;36m)[00m)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF theater)
				(LK denke)
				(MF ich)[01;31m)[00m
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da)[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF auserdem)
					(LK mussen)
					(MF wir uns)
					(VC kummern)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (17, 18))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX'], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LKM'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV doch)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(NX
			(NX kino)
			[01;36m(NX[00m
				(NX theater)
				(NX restaurant)[01;36m)[00m)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF theater)
				(LK denke)
				(MF ich)[01;31m)[00m
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da)[01;36m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'DM', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		(NX
			(NX kino)
			[01;36m(NX[00m
				(NX theater)
				(NX restaurant)[01;36m)[00m)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF theater)
				(LK denke)
				(MF ich)[01;31m)[00m
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da)[01;36m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KOUS', 'ADVX'], 'mover info': [('KOUS', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['DM', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'DM', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['KOUS', 'ADVX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		(NX
			(NX kino)
			[01;36m(NX[00m
				(NX theater)
				(NX restaurant)[01;36m)[00m)
		(DM also)
		(SIMPX
			(VF theater)
			(LK denke)
			(MF ich)
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da))
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'left siblings': [(NX (NN kino))], 'auto preterminal span': (3, 5), 'span': (3, 5), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		(NX kino theater restaurant)
		(DM also)
		(SIMPX
			(VF theater)
			(LK denke)
			(MF ich)
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da))
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(ADVX (ADV da))], 'left siblings': [(VF (NX (NN theater))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				[01;36m(LKM[00m
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PIAT', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LKM
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:UNSET remove
{'subtrees': ['ADVX', 'DM'], 'family': ['DM', 'NX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['NX', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LKM
					(LK kriegen)
					(MF
						(NX wir)
						[01;31m(NX[00m
							(NX keine karten)
							(ADVX mehr)[01;31m)[00m))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:UNSET remove
{'subtrees': ['VF', 'LKM'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['KOORD', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 23), 'span': (11, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX
			(VF da)
			(LKM
				(LK kriegen)
				(MF
					(NX wir)
					[01;31m(NX[00m
						(NX keine karten)
						(ADVX mehr)[01;31m)[00m))
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIAT', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (13, 17), 'span': (14, 17), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX
			(VF da)
			(LKM kriegen wir keine karten mehr)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX auserdem mussen wir uns kummern))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['VF', 'LKM', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 23), 'span': (17, 18), 'left siblings': ['VF', 'LKM'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP immer doch kino theater restaurant also theater denke ich das da da kriegen wir keine karten mehr und auserdem mussen wir uns kummern)

Sentence 464:
13 Initial errors
0 on fringe, 10 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		[01;36m(NX[00m
			(NX das)
			(NX das)[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(MF[00m [01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		[01;36m(NX[00m
			(NX das)
			(NX das)[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					(ADJX vorerst)[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(MF[00m [01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Different label
{'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX', 'DM', 'MF', 'SIMPX'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('NE',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'MF')}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		[01;36m(NX[00m
			(NX das)
			(NX das)[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					(ADJX vorerst)[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (13, 16))], 'old_family': ['NX', 'ADJX', 'PX'], 'start left siblings': ['NX', 'ADJX'], 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (9, 16), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		[01;36m(NX[00m
			(NX das)
			(NX das)[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX', 'DM', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PDS'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER es)) (ADJX (ADV vorerst))) (PX (APPR von) (NX (PPER mir)) (APZR aus))), (DM (ADVX (ADV dann)) (PTKANT danke)), (MF (NX (NE peter))), (SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VVFIN sehen))) (MF (NX (PRF uns))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (ITJ gut)), (DM (ITJ klar)), (DM (PTKANT ja)), (DM (PTKANT nee)), (ADVX (ADV dann))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ware))), (MF (NX (PPER es)) (ADJX (ADV vorerst)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX das ware es vorerst von mir aus)
		[01;31m(DM[00m
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'PTKANT'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PTKANT danke)], 'left siblings': [], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'DM', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX das ware es vorerst von mir aus)
		[01;31m(DM[00m
			(VF dann)
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(PTKANT danke)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['PTKANT'], 'family': ['VF', 'VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'DM', 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX das ware es vorerst von mir aus)
		[01;31m(DM[00m
			(VF dann)
			[01;36m(LK[00m
				(VXFIN
					(PTKANT danke))[01;36m)[00m[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['VF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'DM', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX das ware es vorerst von mir aus)
		[01;31m(DM[00m
			(VF dann)
			(LK danke)[01;31m)[00m
		(MF peter)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF wir)
				(LK sehen)
				(MF uns)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (20, 23), 'span': (20, 23), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		(SIMPX das ware es vorerst von mir aus)
		[01;31m(DM[00m
			(VF dann)
			(LK danke)[01;31m)[00m
		(MF peter)
		(SIMPX und wir sehen uns)))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX', 'DM', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': ['MF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (16, 18), 'left siblings': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX'], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay gut klar ja nee dann das das das ware es vorerst von mir aus dann danke peter und wir sehen uns)

Sentence 465:
12 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		[01;36m(VF[00m [01;31m(DM[00m
			(NX
				(NE reinhard))[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF runtergeschaut) [01;33mSIMPX)[00m
						[01;36m(NX[00m [01;31m(VXFIN[00m
							(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Different label
{'family': ['DM', 'VF', 'SIMPX', 'SIMPX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('NE',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF runtergeschaut) [01;33mSIMPX)[00m
						[01;36m(NX[00m [01;31m(VXFIN[00m
							(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(DM
					(VVFIN danke))[01;31m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF runtergeschaut) [01;33mSIMPX)[00m
						[01;36m(NX[00m [01;31m(VXFIN[00m
							(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['VXINF', 'NX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['VAFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VAFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'NX')}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(DM
					(VVFIN danke))[01;31m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF runtergeschaut) [01;33mSIMPX)[00m
						(NX hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'NX'], 'mover info': [('NX', (9, 10))], 'old_family': ['VXINF', 'NX'], 'start left siblings': ['VXINF'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (3, 10), 'movers': ['NX'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(DM
					(VVFIN danke))[01;31m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF
							(VVPP runtergeschaut))[01;31m)[00m)
				(NX hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['DM'], 'family': ['LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 10), 'span': (2, 3), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		[01;31m(SIMPX[00m
			(DM danke)
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						(VXINF
							(VVPP runtergeschaut))[01;31m)[00m)
				(NX hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['DM', 'NF'], 'family': ['DM', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (2, 10), 'left siblings': ['DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		(DM danke)
		[01;31m(NF[00m
			(SIMPX
				(C das)
				(MF du so kurzfristig hier)
				[01;31m(VC[00m
					(VXINF
						(VVPP runtergeschaut))[01;31m)[00m)
			(NX hast)[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'VF', 'DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 10), 'left siblings': ['DM', 'VF', 'DM'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(VF reinhard)
		(DM danke)
		(SIMPX
			(C das)
			(MF du so kurzfristig hier)
			[01;31m(VC[00m
				(VXINF
					(VVPP runtergeschaut))[01;31m)[00m)
		(NX hast)
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 9), 'span': (8, 9), 'left siblings': ['C', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hallo reinhard danke das du so kurzfristig hier runtergeschaut hast wir mussen ja noch ein termin vereinbaren)

Sentence 466:
14 Initial errors
0 on fringe, 7 iterations
3 Error:NP Attachment
3 Error:NP Attachment
3 Error:Co-ordination
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF hannover)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;36m(ADJX[00m
						(NN ziel)[01;36m)[00m)))
		[01;33m(VF (NX[00m (NX anderthalb tage)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPR in)
					(NX den nachsten drei monaten))[01;31m)[00m [01;33mNX) VF)[00m
			(LK gibt)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				[01;33m(NX[00m (NX diese ganzen feiertage)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern) [01;33mNX) MF)[00m
			[01;33m(SIMPX[00m (NX pfingsten)
			(KON und)
			[01;33m(MF (ADVX[00m (ADVX so weiter)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				(ADVX
					(ADV mal))[01;31m)[00m [01;33mADVX) MF)[00m
			(VC kucken)
			(NF wie wir da in die gange kommen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'PX'], 'mover info': [('NX', (4, 6))], 'old_family': ['SIMPX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': ['SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 39), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX
			(VF hannover)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;36m(ADJX[00m
						(NN ziel)[01;36m)[00m)))
		[01;31m(SIMPX[00m
			(NX anderthalb tage in den nachsten drei monaten)
			(LK gibt)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				[01;33m(NX[00m (NX diese ganzen feiertage)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern) [01;33mNX) MF)[00m
			[01;33m(SIMPX[00m (NX pfingsten)
			(KON und)
			[01;33m(MF (ADVX[00m (ADVX so weiter)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				(ADVX
					(ADV mal))[01;31m)[00m [01;33mADVX) MF)[00m
			(VC kucken)
			(NF wie wir da in die gange kommen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (18, 19))], 'old_family': ['NX', 'NX', 'KON', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': ['NX', 'KON', 'ADVX'], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (0, 39), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX
			(VF hannover)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;36m(ADJX[00m
						(NN ziel)[01;36m)[00m)))
		[01;31m(SIMPX[00m
			(NX anderthalb tage in den nachsten drei monaten)
			(LK gibt)
			(MF es ja ofter diese ganzen feiertage ostern)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(NX[00m
				(NX pfingsten)
				(KON und)
				[01;33m(MF (ADVX[00m (ADVX so weiter)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m [01;33mADVX) MF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;36m)[00m
		(SIMPX wie schaut es denn bei dir aus)))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['NX', 'KON', 'ADVX'], 'start left siblings': ['NX', 'KON'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 39), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['ADVX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX
			(VF hannover)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;36m(ADJX[00m
						(NN ziel)[01;36m)[00m)))
		[01;31m(SIMPX[00m
			(NX anderthalb tage in den nachsten drei monaten)
			(LK gibt)
			(MF es ja ofter diese ganzen feiertage ostern)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(NX[00m
				(NX pfingsten)
				(KON und)[01;31m)[00m
			[01;31m(SIMPX[00m
				(ADVX so weiter mal)
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;36m)[00m
		(SIMPX wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'ADVX', 'VC', 'NF'], 'mover info': [('NX', (19, 21))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 39), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': ['ADVX', 'VC', 'NF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF hannover)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;36m(ADJX[00m
						(NN ziel)[01;36m)[00m)))
		[01;31m(SIMPX[00m
			(NX anderthalb tage in den nachsten drei monaten)
			(LK gibt)
			(MF es ja ofter diese ganzen feiertage ostern)[01;31m)[00m
		(SIMPX
			[01;31m(NX[00m
				(NX pfingsten)
				(KON und)[01;31m)[00m
			(ADVX so weiter mal)
			(VC kucken)
			(NF wie wir da in die gange kommen))
		(SIMPX wie schaut es denn bei dir aus)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		[01;31m(SIMPX[00m
			(NX anderthalb tage in den nachsten drei monaten)
			(LK gibt)
			(MF es ja ofter diese ganzen feiertage ostern)[01;31m)[00m
		(SIMPX
			[01;31m(NX[00m
				(NX pfingsten)
				(KON und)[01;31m)[00m
			(ADVX so weiter mal)
			(VC kucken)
			(NF wie wir da in die gange kommen))
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (4, 19), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX anderthalb tage in den nachsten drei monaten)
		(LK gibt)
		(MF es ja ofter diese ganzen feiertage ostern)
		(SIMPX
			[01;31m(NX[00m
				(NX pfingsten)
				(KON und)[01;31m)[00m
			(ADVX so weiter mal)
			(VC kucken)
			(NF wie wir da in die gange kommen))
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['NX', 'KON'], 'family': ['NX', 'ADVX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': ['ADVX', 'VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (19, 32), 'span': (19, 21), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hannover ist das ziel anderthalb tage in den nachsten drei monaten gibt es ja ofter diese ganzen feiertage ostern pfingsten und so weiter mal kucken wie wir da in die gange kommen wie schaut es denn bei dir aus)

Sentence 467:
0 Initial errors
0 on fringe, 0 iterations

Sentence 468:
0 Initial errors
0 on fringe, 0 iterations

Sentence 469:
12 Initial errors
0 on fringe, 5 iterations
5 Error:Co-ordination
3 Error:Co-ordination
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;31m(ADJX[00m
			(ADVX vielleicht)
			(ADVX nicht)
			(ADJX allzu fruh)[01;31m)[00m
		(SIMPX ab funf uhr drei konnte man abfahren)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX nicht)
					[01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NN ziel)[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
						(NX der sache)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(PX[00m [01;31m(NX[00m
				(KON sondern)
				[01;36m(NX[00m
					(ADVX lieber)
					(NX so sieben)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'ADVX', 'NX'], 'mover info': [('NX', (24, 26))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 30), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'ADVX', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;31m(ADJX[00m
			(ADVX vielleicht)
			(ADVX nicht)
			(ADJX allzu fruh)[01;31m)[00m
		(SIMPX ab funf uhr drei konnte man abfahren)
		[01;36m(SIMPX[00m
			(SIMPX
				(KOORD aber)
				(LK ist)
				(MF
					(ADVX nicht)
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NN ziel)[01;31m)[00m[01;36m)[00m))
			[01;31m(NX[00m
				(NX der sache)
				[01;36m(PX[00m
					(KON sondern)
					[01;36m(NX[00m
						(ADVX lieber)
						(NX so sieben)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'NX'], 'mover info': [('NX', (24, 26)), ('KON', (26, 27))], 'old_family': ['NX', 'KON', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': ['ADVX', 'NX'], 'end left siblings': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 30), 'adding node already present': False, 'movers': ['NX', 'KON'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;31m(ADJX[00m
			(ADVX vielleicht)
			(ADVX nicht)
			(ADJX allzu fruh)[01;31m)[00m
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(SIMPX
				(KOORD aber)
				(LK ist)
				(MF
					(ADVX nicht)
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NN ziel)[01;31m)[00m[01;36m)[00m))
			(NX der sache)
			[01;36m(PX[00m
				(KON sondern)
				(NX lieber so sieben)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;31m(ADJX[00m
			(ADVX vielleicht)
			(ADVX nicht)
			(ADJX allzu fruh)[01;31m)[00m
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(SIMPX aber ist nicht ziel)
			(NX der sache)
			[01;36m(PX[00m
				(KON sondern)
				(NX lieber so sieben)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['KON', 'NX'], 'family': ['SIMPX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(SIMPX (KOORD (KON aber)) (LK (VXFIN (VAFIN ist))) (MF (ADVX (PTKNEG nicht)) (ADJX (NN ziel)))), (NX (ART der) (NN sache))], 'auto preterminal span': (26, 30), 'span': (26, 30), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;31m(ADJX[00m
			(ADVX vielleicht)
			(ADVX nicht)
			(ADJX allzu fruh)[01;31m)[00m
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX aber ist nicht ziel der sache sondern lieber so sieben)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (9, 13), 'left siblings': ['SIMPX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wurde ich auch vorschlagen das wir montag fruh losfahren vielleicht nicht allzu fruh ab funf uhr drei konnte man abfahren aber ist nicht ziel der sache sondern lieber so sieben)

Sentence 470:
0 Initial errors
0 on fringe, 0 iterations

Sentence 471:
12 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:PP Attachment
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				(MF es immer am abend)[01;36m)[00m
			[01;36m(PX[00m [01;31m(NF[00m
				(ADVX allerdings)
				(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						(PX zum abend hin)[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['VF', 'LK', 'MF', 'PX'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'PX')}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				(MF es immer am abend)[01;36m)[00m
			(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						(PX zum abend hin)[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'mover info': [('PX', (11, 17))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 57), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						(PX zum abend hin)[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'LKMN', 'new_family': ['LK', 'MF', 'PX', 'NF'], 'mover info': [('PX', (33, 36))], 'old_family': ['ADVX', 'PX', 'ADJX', 'PX'], 'start left siblings': ['ADVX', 'PX', 'ADJX'], 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (26, 48), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['NF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					(PX zum abend hin)
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['ADVX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP', 'ADV', 'APPR', 'CARD'), 'right siblings': [(PX (APPR zu) (NX (NN hause)))], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (51, 55), 'span': (51, 55), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					(PX zum abend hin)
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'APPO'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 25), 'span': (21, 25), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					(PX zum abend hin)
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (25, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK waren)
				(MF naturlich mit dem flugzeug etwas flexibler)
				(PX zum abend hin)
				[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
			(KON und)
			(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'PX', 'NF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (26, 57), 'span': (26, 48), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			(MF naturlich mit dem flugzeug etwas flexibler)
			(PX zum abend hin)
			[01;36m(SIMPX[00m
				(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
				(KON und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKM'], 'family': ['LK', 'MF', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))), (PX (PX (APPRART zum) (NX (NN abend))) (ADVX (ADV hin)))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(PX allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			(MF naturlich mit dem flugzeug etwas flexibler)
			(PX zum abend hin)
			(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['LK', 'MF', 'PX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (26, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP also es ist vollkommen wahlfrei fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber wir waren naturlich mit dem flugzeug etwas flexibler zum abend hin weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)

Sentence 472:
0 Initial errors
0 on fringe, 0 iterations

Sentence 473:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX wir kucken einfach was dann gespielt wird)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					[01;36m(VF[00m
						[01;36m(SIMPX[00m
							(C wenn)
							(MF nix gescheites)
							(VC kommt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir immer noch einfach nur eine kneipentour)
			(VC machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja wir kucken einfach was dann gespielt wird und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)

Sentence 474:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK ging)
			(MF
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m
				(ADJX ganz schnell)))
		(DM danke auch)
		(DM und bis dann)
		(DM tschus)))
Step:Single Word Phrase
{'family': ['DM', 'ADJX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP ging ja ganz schnell danke auch und bis dann tschus)

Sentence 475:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			(SIMPX es geht um termin)
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					(ART eine)
					(NN reise)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PPER wir)[01;31m)[00m
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'NX', 'ADVX', 'PX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'NX'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			(SIMPX es geht um termin)
			(SIMPX
				[01;31m(NX[00m
					(ART eine)
					(NN reise)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PPER wir)[01;31m)[00m
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover))[01;36m)[00m
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [(NX (NX (ADJX (CARD anderthalb)) (NN tage)) (PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten)))), (SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (NX (NN zeit))))], 'left siblings': [(DM (ITJ hallo)), (DM (NX (NE peter))), (ADJX (ADJX (ADJD gut)) (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns))) (VC (VXFIN (VVFIN treffen)))))], 'auto preterminal span': (7, 20), 'span': (7, 20), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(SIMPX es geht um termin)
			(SIMPX
				[01;31m(NX[00m
					(ART eine)
					(NN reise)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PPER wir)[01;31m)[00m
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:UNSET remove
{'subtrees': ['ART', 'NN'], 'family': ['NX', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['NX', 'ADVX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 20), 'span': (11, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(SIMPX es geht um termin)
			(SIMPX
				(ART eine)
				(NN reise)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PPER wir)[01;31m)[00m
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:Single Word Phrase
{'subtrees': ['PPER'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PIS'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (13, 15), 'span': (13, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(SIMPX es geht um termin)
			(SIMPX
				(ART eine)
				(NN reise)
				[01;31m(NX[00m
					(PPER wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:UNSET remove
{'subtrees': ['PPER', 'NX'], 'family': ['ART', 'NN', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['ADVX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 20), 'span': (13, 15), 'left siblings': ['ART', 'NN'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX es geht um termin eine reise wir beide zusammen von munchen nach hannover)
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX in den nachsten drei monaten)[01;31m)[00m
		(SIMPX wann hast du zeit)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (20, 27), 'left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP hallo peter gut das wir uns treffen es geht um termin eine reise wir beide zusammen von munchen nach hannover anderthalb tage in den nachsten drei monaten wann hast du zeit)

Sentence 476:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		[01;36m(DM[00m [01;31m(VXFIN[00m
			(VVIMP warte)[01;31m)[00m[01;36m)[00m
		(SIMPX das war der neunzehnte juli)))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP moment warte das war der neunzehnte juli)

Sentence 477:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		(DM aha)
		[01;31m(SIMPX[00m
			(VF mein urlaub)
			[01;36m(FKOORD[00m
				(VXFIN ist)
				(FKOORD fangt am neunten august an und geht bis zum einunddreisigsten august)[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VXFIN', 'FKOORD'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPOSAT mein) (NN urlaub)))], 'auto preterminal span': (6, 18), 'span': (6, 18), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		(DM aha)
		[01;31m(SIMPX[00m
			(VF mein urlaub)
			(FKOORD ist fangt am neunten august an und geht bis zum einunddreisigsten august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['PX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'ITJ', 'PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 18), 'left siblings': ['PX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP bis funfzehnter august aha mein urlaub ist fangt am neunten august an und geht bis zum einunddreisigsten august)

Sentence 478:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF am sechsten juli)
			(LK habe)
			(MF ich eine dienstbesprechung)[01;31m)[00m
		(PX am siebten)
		(DM ah)
		(SIMPX da hatte ich nur abends kino)
		(SIMPX aber am neunter zehnter juli hattest du gesagt)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'PX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NN', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'KON', 'APPRART', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'VVPP'), 'right siblings': ['PX', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja am sechsten juli habe ich eine dienstbesprechung am siebten ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)

Sentence 479:
0 Initial errors
0 on fringe, 0 iterations

Sentence 480:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM also)
			(VF ich)
			(LK meine)
			(NF wir haben jetzt die)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK brauchen)
			[01;31m(MF[00m
				(NX anderthalb tage)
				(PX
					(APPR fur)
					(NX
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NN treffen)))[01;31m)[00m)
		(SIMPX wir haben zwei tage zeit)
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir mit dem zug)
			(VC hinfahren)
			(NF zum beispiel)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN treffen)], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM also)
			(VF ich)
			(LK meine)
			(NF wir haben jetzt die)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK brauchen)
			[01;31m(MF[00m
				(NX anderthalb tage)
				(PX fur das treffen)[01;31m)[00m)
		(SIMPX wir haben zwei tage zeit)
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir mit dem zug)
			(VC hinfahren)
			(NF zum beispiel)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'CARD', 'NN', 'NN', 'ADV', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (6, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KOORD und)
		(DM also)
		(VF ich)
		(LK meine)
		(NF wir haben jetzt die)
		(SIMPX
			(VF wir)
			(LK brauchen)
			[01;31m(MF[00m
				(NX anderthalb tage)
				(PX fur das treffen)[01;31m)[00m)
		(SIMPX wir haben zwei tage zeit)
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir mit dem zug)
			(VC hinfahren)
			(NF zum beispiel)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (16, 21), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KOORD und)
		(DM also)
		(VF ich)
		(LK meine)
		(NF wir haben jetzt die)
		(SIMPX wir brauchen anderthalb tage fur das treffen)
		(SIMPX wir haben zwei tage zeit)
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir mit dem zug)
			(VC hinfahren)
			(NF zum beispiel)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'KOORD', 'DM', 'VF', 'LK', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'CARD', 'NN', 'NN', 'ADV', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (26, 35), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'DM', 'VF', 'LK', 'NF', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay dann fahren wir zusammen dahin und also ich meine wir haben jetzt die wir brauchen anderthalb tage fur das treffen wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)

Sentence 481:
16 Initial errors
0 on fringe, 10 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF kurz mal)
			(VC nach)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(NF[00m [01;31m(LV[00m
				(PX
					(APPR bei)
					(NX
						(NX den zugverbindungen)
						[01;36m(NF[00m
							(R
								(C die)
								(MF ich hier)
								(VC habe))[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK sind)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(NX munchen)
							(NX hannover))[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR mit)
							(NX dem ice))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX
						(APPR ab)
						[01;36m(NX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (7, 14))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 38), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX
			(VF ich)
			(LK kucke)
			(MF kurz mal)
			(VC nach)
			[01;36m(NF[00m [01;31m(LV[00m
				(PX
					(APPR bei)
					(NX
						(NX den zugverbindungen)
						[01;36m(NF[00m
							(R
								(C die)
								(MF ich hier)
								(VC habe))[01;36m)[00m))[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK sind)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX
						(APPR ab)
						[01;36m(NX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (7, 14), 'span': (7, 14), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX
			(VF ich)
			(LK kucke)
			(MF kurz mal)
			(VC nach)
			(NF
				(PX
					(APPR bei)
					(NX
						(NX den zugverbindungen)
						[01;36m(NF[00m
							(R
								(C die)
								(MF ich hier)
								(VC habe))[01;36m)[00m))))
		(SIMPX
			(VF das)
			(LK sind)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX
						(APPR ab)
						[01;36m(NX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Different label
{'family': ['APPR', 'NX'], 'auto preterminal span': (26, 30), 'span': (26, 30), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX
			(VF ich)
			(LK kucke)
			(MF kurz mal)
			(VC nach)
			(NF
				(PX
					(APPR bei)
					(NX
						(NX den zugverbindungen)
						[01;36m(NF[00m
							(R
								(C die)
								(MF ich hier)
								(VC habe))[01;36m)[00m))))
		(SIMPX
			(VF das)
			(LK sind)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (18, 21))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (14, 21), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX
			(VF ich)
			(LK kucke)
			(MF kurz mal)
			(VC nach)
			(NF
				(PX
					(APPR bei)
					(NX
						(NX den zugverbindungen)
						[01;36m(NF[00m
							(R
								(C die)
								(MF ich hier)
								(VC habe))[01;36m)[00m))))
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				(NX munchen hannover)
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'ADV', 'VAFIN'), 'right siblings': [], 'left siblings': [(NX (ART den) (NN zugverbindungen))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				(NX munchen hannover)
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (16, 21), 'span': (18, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		[01;31m(SIMPX[00m
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)[01;31m)[00m
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (21, 30), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(VF das)
		(LK sind)
		(MF
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX stundliche)
					(NN verbindungen)[01;31m)[00m
				(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (23, 30), 'span': (23, 25), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(VF das)
		(LK sind)
		(MF
			[01;31m(NX[00m
				(ADJX stundliche)
				(NN verbindungen)
				(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADJX', 'NN', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (23, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(VF das)
		(LK sind)
		(MF stundliche verbindungen ab morgens vier uhr dreiundvierzig)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (31, 38), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also ich kucke kurz mal nach bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig also ich mein das ist mir zu fruh)

Sentence 482:
0 Initial errors
0 on fringe, 0 iterations

Sentence 483:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN fahren))[01;31m)[00m[01;36m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wohin wir fahren)[01;31m)[00m
		(SIMPX wir wissen wo wir schlafen)
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(LK fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wohin wir fahren)[01;31m)[00m
		(SIMPX wir wissen wo wir schlafen)
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 10), 'span': (7, 10), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wohin wir fahren)[01;31m)[00m
		(SIMPX wir wissen wo wir schlafen)
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (10, 15), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay den ice nehmen wir wir wissen wann wir fahren wir wissen wohin wir fahren wir wissen wo wir schlafen wir wissen aber noch nicht was wir abends machen)

Sentence 484:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX am neunten juli)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK mus)
				[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(LK ist)
				(MF das)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM nein)))
Step:Different label
{'family': ['VF', 'LK', 'ADVX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(PX am neunten juli)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK mus)
				[01;36m(MF[00m
					(ADVX
						[01;31m(VXINF[00m
							(VVINF uberlegen)[01;31m)[00m)[01;36m)[00m)
			[01;31m(SIMPX[00m
				(LK ist)
				(MF das)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM nein)))
Step:Single Word Phrase
{'family': ['MF'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VVINF'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'MF')}
(TOP
	(TURN
		(PX am neunten juli)
		[01;36m(SIMPX[00m
			(SIMPX ich mus uberlegen)
			[01;31m(SIMPX[00m
				(LK ist)
				(MF das)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM nein)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (3, 6))], 'old_family': ['PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'start left siblings': ['PX'], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'start right siblings': ['SIMPX', 'SIMPX', 'DM'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist das)
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM nein)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (13, 16))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (8, 16), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist das)
		[01;31m(SIMPX[00m
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m)[01;31m)[00m
		(DM nein)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['PX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (8, 16), 'left siblings': ['PX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist das)
		(LK gibt)
		(MF
			(NX es)
			(ADVX da)
			(ADVX irgendwie)
			(NX was)
			[01;31m(NF[00m
				(NX
					(ART einen)
					(ADJX interessanten)
					(NN feiertag))[01;31m)[00m)
		(DM nein)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (13, 16), 'left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am neunten juli ich mus uberlegen ist das gibt es da irgendwie was einen interessanten feiertag nein)

Sentence 485:
15 Initial errors
0 on fringe, 9 iterations
5 Error:UNSET move
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino)[01;36m)[00m
					(KOUS wenn)
					(APPR bei)
					(KOUS wenn)
					[01;31m(NF[00m [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe)[01;31m)[00m [01;33mSIMPX)[00m
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;36m(LKM[00m [01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								[01;36m(NF[00m
									(C wie)
									(MF die sache)
									(VC lauft)[01;36m)[00m[01;36m)[00m
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:UNSET move
{'new_parent': 'LKMN', 'new_family': ['LK', 'MF', 'NF', 'NF'], 'mover info': [('NF', (44, 45))], 'old_family': ['C', 'MF', 'VC', 'NF'], 'start left siblings': ['C', 'MF', 'VC'], 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'NF'], 'auto preterminal span': (38, 45), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LKM'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino)[01;36m)[00m
					(KOUS wenn)
					(APPR bei)
					(KOUS wenn)
					[01;31m(NF[00m [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe)[01;31m)[00m [01;33mSIMPX)[00m
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOUS', 'APPR', 'KOUS', 'NF', 'KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOUS', (13, 14)), ('APPR', (14, 15)), ('KOUS', (15, 16)), ('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'KOUS', 'APPR', 'KOUS', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'APPR', 'KOUS', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				(SIMPX
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOUS wenn)
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe)[01;36m)[00m[01;31m)[00m
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'KOUS', 'APPR', 'KOUS'], 'mover info': [('KOUS', (13, 14)), ('APPR', (14, 15)), ('KOUS', (15, 16))], 'old_family': ['KOUS', 'APPR', 'KOUS', 'NF', 'KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'APPR', 'KOUS'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				(SIMPX
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino))[01;31m)[00m
			(KOUS wenn)
			(APPR bei)
			(KOUS wenn)[01;31m)[00m
		(SIMPX
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF', 'KOUS', 'APPR', 'KOUS'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (1, 16), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(VF dann)
		(LK sage)
		(MF ich einfach mal)
		[01;31m(NF[00m
			(SIMPX
				(VF von mir aus)
				(LK gehen)
				(MF wir ins kino))[01;31m)[00m
		(KOUS wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'KOUS', 'APPR', 'KOUS', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['KOUS', 'APPR', 'KOUS', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (6, 13), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(VF dann)
		(LK sage)
		(MF ich einfach mal)
		(SIMPX von mir aus gehen wir ins kino)
		(KOUS wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (16, 20), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(VF dann)
		(LK sage)
		(MF ich einfach mal)
		(SIMPX von mir aus gehen wir ins kino)
		(KOUS wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX
			(SIMPX wenn die was anbieten)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (20, 21), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(VF dann)
		(LK sage)
		(MF ich einfach mal)
		(SIMPX von mir aus gehen wir ins kino)
		(KOUS wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						(NF wie die sache lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:Unary
{'subtrees': ['LK', 'MF', 'NF', 'NF'], 'family': ['LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (38, 45), 'span': (38, 45), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(VF dann)
		(LK sage)
		(MF ich einfach mal)
		(SIMPX von mir aus gehen wir ins kino)
		(KOUS wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LKM
					(LK kucken)
					(MF einfach)
					(NF wie die sache lauft)
					[01;31m(NF[00m
						(ADVX
							(ADV da))[01;31m)[00m)
				(KON und)
				(LKMVC gehen dann abends aus)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (38, 45), 'span': (44, 45), 'left siblings': ['LK', 'MF', 'NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten oder wir gehen in eine kneipe also ich wurde sagen wir brauchen das gar nicht weiter planen wir kucken einfach wie die sache lauft da und gehen dann abends aus)

Sentence 486:
9 Initial errors
0 on fringe, 6 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			[01;36m(R[00m
				[01;36m(NF[00m
					[01;36m(C[00m
						(NX
							(PRELS was))[01;36m)[00m
					[01;33m(MF[00m (NX ich)
					[01;31m(NF[00m
						[01;31m(R[00m
							(C was)
							(MF ich) [01;33mMF)[00m
							(VC brauchte)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'R', 'new_family': ['NX', 'NX', 'C', 'MF', 'VC'], 'mover info': [('NX', (8, 9)), ('NX', (9, 10))], 'old_family': ['VF', 'LK', 'MF', 'NX', 'NX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 13), 'movers': ['NX', 'NX'], 'old_parent': 'SIMPX', 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF
				(R
					[01;36m(C[00m
						(NX
							(PRELS was))[01;36m)[00m
					[01;36m(MF[00m
						(NX ich)
						(C was)
						(MF ich)[01;36m)[00m
					(VC brauchte)))[01;31m)[00m
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'NX', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [(NX (PPER ich)), (C (NX (PRELS was))), (MF (NX (PPER ich))), (VC (VXFIN (VVFIN brauchte)))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'R', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF
				(R
					(C was)
					[01;36m(MF[00m
						(NX ich)
						(C was)
						(MF ich)[01;36m)[00m
					(VC brauchte)))[01;31m)[00m
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'C', 'MF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRELS', 'PPER'), 'right siblings': [(VC (VXFIN (VVFIN brauchte)))], 'left siblings': [(C (NX (PRELS was)))], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'R', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF was ich was ich brauchte)[01;31m)[00m
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'DM', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(DM (ITJ okay)), (DM (NX (NE peter))), (SIMPX (VF (PX (APPR von) (NX (PPER mir)) (APZR aus))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (PIS alles))) (NF (R (C (NX (PRELS was))) (MF (NX (PPER ich)) (C (NX (PRELS was))) (MF (NX (PPER ich)))) (VC (VXFIN (VVFIN brauchte))))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF was ich was ich brauchte)[01;31m)[00m
		(DM und)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX peter)
		[01;31m(SIMPX[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF was ich was ich brauchte)[01;31m)[00m
		(DM und)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (2, 13), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay peter von mir aus hatte ich alles was ich was ich brauchte und)

Sentence 487:
0 Initial errors
0 on fringe, 0 iterations

Sentence 488:
7 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK klingt)
			(MF
				(ADJX
					(ADVX so)
					[01;36m(NX[00m
						(ADJD euphorisch)[01;36m)[00m)))
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX es)
				(NX dir)
				(ADVX gleich)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m [01;33mMF)[00m
			[01;36m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'VF'], 'mover info': [('VF', (18, 19))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK klingt)
			(MF
				(ADJX
					(ADVX so)
					[01;36m(NX[00m
						(ADJD euphorisch)[01;36m)[00m)))
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			(MF
				(NX es)
				(NX dir)
				(ADVX gleich)
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m)[01;31m)[00m
		(SIMPX habe ich vom neunzehnten juli bis mitte august)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'ADJX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			(MF
				(NX es)
				(NX dir)
				(ADVX gleich)
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m)[01;31m)[00m
		(SIMPX habe ich vom neunzehnten juli bis mitte august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (13, 19), 'left siblings': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(VF ich)
		(LK sage)
		(MF
			(NX es)
			(NX dir)
			(ADVX gleich)
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m)
		(SIMPX habe ich vom neunzehnten juli bis mitte august)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (15, 19), 'span': (18, 19), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das klingt so euphorisch hannover na gut wenn es denn sein mus ja ich sage es dir gleich urlaub habe ich vom neunzehnten juli bis mitte august)

Sentence 489:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX und ich sage es dir gleich)
			(SIMPX im juli wird es etwas knapp)[01;36m)[00m
		(SIMPX da ginge nur noch der neunte zehnte)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN ginge))) (MF (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART der) (NX (NX (NN neunte)) (NX (NN zehnte))))))], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP und ich sage es dir gleich im juli wird es etwas knapp da ginge nur noch der neunte zehnte)

Sentence 490:
4 Initial errors
0 on fringe, 1 iterations
4 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM tja)
		(SIMPX ist doch klasse)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK machen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(NX das)
					(ADVX doch)[01;31m)[00m[01;31m)[00m
			(NX hannover)[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (8, 9))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'ADV', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 9), 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP tja ist doch klasse machen wir das doch hannover)

Sentence 491:
0 Initial errors
0 on fringe, 0 iterations

Sentence 492:
23 Initial errors
0 on fringe, 16 iterations
4 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:NP Attachment
2 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;36m(ADVX[00m [01;31m(DM[00m
			(PTKANT ja)[01;31m)[00m[01;36m)[00m
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			[01;33m(NX[00m (PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark) [01;33mNX)[00m
			[01;36m(NX[00m [01;31m(PX[00m
				(NX funf minuten)
				(PX vom bahnhof)[01;31m)[00m[01;36m)[00m
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(ADVX eh)
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(ART ein)
				(NN quatsch)[01;31m)[00m) [01;33mMF)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				[01;33m(NX[00m (ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['KON', 'ADVX', 'NX'], 'start left siblings': ['KON'], 'auto preterminals': ('KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (34, 41), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;36m(ADVX[00m [01;31m(DM[00m
			(PTKANT ja)[01;31m)[00m[01;36m)[00m
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			[01;33m(NX[00m (PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark) [01;33mNX)[00m
			[01;36m(NX[00m [01;31m(PX[00m
				(NX funf minuten)
				(PX vom bahnhof)[01;31m)[00m[01;36m)[00m
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(ADVX eh)
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(ART ein)
				(NN quatsch)[01;31m)[00m) [01;33mMF)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'NX', 'SIMPX', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['PTKANT'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			[01;33m(NX[00m (PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark) [01;33mNX)[00m
			[01;36m(NX[00m [01;31m(PX[00m
				(NX funf minuten)
				(PX vom bahnhof)[01;31m)[00m[01;36m)[00m
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(ADVX eh)
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(ART ein)
				(NN quatsch)[01;31m)[00m) [01;33mMF)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:Different label
{'family': ['NX', 'NX', 'PX'], 'auto preterminal span': (21, 25), 'span': (21, 25), 'subtrees': ['NX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			[01;33m(NX[00m (PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark) [01;33mNX)[00m
			(NX funf minuten vom bahnhof)
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(ADVX eh)
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(ART ein)
				(NN quatsch)[01;31m)[00m) [01;33mMF)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (31, 34))], 'old_family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'NX', 'SIMPX', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'NX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 50), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			[01;33m(NX[00m (PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark) [01;33mNX)[00m
			(NX funf minuten vom bahnhof)
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['PX', 'NX', 'NX', 'PX'], 'mover info': [('PX', (16, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 50), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		[01;36m(NX[00m
			(NX zwei moglichkeiten)
			(NX hundert zweiundvierzig mark)[01;36m)[00m
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [(NX (NX (PX (APPRART im) (NX (NN zentrum))) (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (PX (APPR mit) (NX (NN garage)))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch))))), (NX (KON und) (NX (NX (ADVX (ADV einmal)) (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad))))), (SIMPX (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (ADVX (ADV aber)) (ADVX (ADV eh)) (NX (PIAT keine) (NN zeit))) (NF (PX (PROP dafur)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN steckt))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel)))), (DM (ITJ ach)), (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)))), (ADVX (PTKANT ja))], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX garage))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN'), 'right siblings': [], 'left siblings': [(NX (PX (APPRART im) (NX (NN zentrum))) (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark))), (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof))))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			(VF mit garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel)))), (DM (ITJ ach)), (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)))), (ADVX (PTKANT ja)), (NX (NX (ADJX (CARD zwei)) (NN moglichkeiten)) (NX (ADJX (CARD hundert) (CARD zweiundvierzig)) (NN mark))), (NX (NX (PX (APPRART im) (NX (NN zentrum))) (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (VF (PX (APPR mit) (NX (NN garage))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch))))), (NX (KON und) (NX (NX (ADVX (ADV einmal)) (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad)))))], 'auto preterminal span': (41, 50), 'span': (41, 50), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			(VF mit garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (7, 10), 'left siblings': ['SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;31m(MF[00m
			(NX
				(PPER ich))[01;31m)[00m
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			(VF mit garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'VF', 'LK', 'MF', 'ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (9, 10), 'left siblings': ['SIMPX', 'DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		[01;31m(NX[00m
			(NX im zentrum hundert funfunddreisig mark)
			(NX funf minuten vom bahnhof)
			(VF mit garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'VF'], 'family': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (16, 27), 'left siblings': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(NX im zentrum hundert funfunddreisig mark)
		(NX funf minuten vom bahnhof)
		(VF mit garage)
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'NX', 'NX', 'VF', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (27, 34), 'left siblings': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'NX', 'NX', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(NX im zentrum hundert funfunddreisig mark)
		(NX funf minuten vom bahnhof)
		(VF mit garage)
		(LK brauchen)
		(MF
			(NX wir)
			(ADVX eh)
			(ADVX nicht)
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (31, 34), 'span': (32, 34), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(NX im zentrum hundert funfunddreisig mark)
		(NX funf minuten vom bahnhof)
		(VF mit garage)
		(LK brauchen)
		(MF wir eh nicht so ein quatsch)
		[01;31m(NX[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'NX', 'NX', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (34, 41), 'left siblings': ['SIMPX', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'NX', 'NX', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(NX im zentrum hundert funfunddreisig mark)
		(NX funf minuten vom bahnhof)
		(VF mit garage)
		(LK brauchen)
		(MF wir eh nicht so ein quatsch)
		(KON und)
		(NX einmal hundert sechsundachtzig mark mit schwimmbad)
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m[01;31m)[00m)
			(SIMPX was steckt))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (41, 48), 'span': (47, 48), 'left siblings': ['LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(NX ich)
		(ADVX ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(NX im zentrum hundert funfunddreisig mark)
		(NX funf minuten vom bahnhof)
		(VF mit garage)
		(LK brauchen)
		(MF wir eh nicht so ein quatsch)
		(KON und)
		(NX einmal hundert sechsundachtzig mark mit schwimmbad)
		(SIMPX
			(SIMPX
				(LK hast)
				(MF du aber eh keine zeit)
				[01;31m(PX[00m
					(PROP dafur)[01;31m)[00m)
			(SIMPX was steckt))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['LK', 'MF', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (41, 48), 'span': (47, 48), 'left siblings': ['LK', 'MF'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP brauchen wir nur noch ein hotel ach hotels habe ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage brauchen wir eh nicht so ein quatsch und einmal hundert sechsundachtzig mark mit schwimmbad hast du aber eh keine zeit dafur was steckt)

Sentence 493:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						[01;36m(ADVX[00m [01;31m(DM[00m
							(PTKANT ja)[01;31m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADJX
								(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		[01;36m(NF[00m
			(SIMPX
				(VF schloshotel)
				(LK wird)
				(VC gebucht))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['PTKANT'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						(ADVX ja)
						[01;31m(MF[00m
							(ADJX
								(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		[01;36m(NF[00m
			(SIMPX
				(VF schloshotel)
				(LK wird)
				(VC gebucht))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['VF', 'LK', 'ADVX', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF schloshotel ist ja standesgemas)
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		[01;36m(NF[00m
			(SIMPX
				(VF schloshotel)
				(LK wird)
				(VC gebucht))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'VVPP'), 'right siblings': [], 'left siblings': [(SIMPX (VF (SIMPX (VF (NX (NE schloshotel))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (PTKANT ja)) (ADJX (ADJD standesgemas))))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF schloshotel ist ja standesgemas)
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		(NF schloshotel wird gebucht)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'NE', 'VAFIN', 'VVPP'), 'right siblings': ['DM', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP schloshotel ist ja standesgemas wurde ich sagen also schloshotel wird gebucht)

Sentence 494:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m [01;31m(ADJX[00m
			(ADVX ganz)
			(FM relaxed)[01;31m)[00m[01;36m)[00m
		(DM genau)))
Step:Different label
{'family': ['NX', 'DM'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['ADVX', 'FM'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'FM'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP ganz relaxed genau)

Sentence 495:
5 Initial errors
0 on fringe, 2 iterations
4 Error:NP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(NX es)
					(ADVX dann)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX schonen tag)
				(ADVX noch)[01;31m)[00m)) [01;33mMF)[00m[01;36m)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (4, 7))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'PPER', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 7), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK haben)
			(MF
				(NX wir)
				(NX es)
				(ADVX dann)
				[01;31m(NX[00m
					(NX schonen tag)
					(ADVX noch)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (4, 7), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP haben wir es dann schonen tag noch)

Sentence 496:
0 Initial errors
0 on fringe, 0 iterations

Sentence 497:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX die zweite halfte)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF zweite halfte)
			(LK sieht)
			(MF es besser)
			(VC aus)
			[01;31m(NF[00m [01;33m(PX[00m
				(PX
					(KOKOM als)
					[01;36m(PX[00m
						(APPR in)
						(NX der ersten)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX nicht)
			(PX vor mittwoch donnerstag)[01;31m)[00m)) [01;33mPX)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['NF', 'ADVX', 'PX'], 'mover info': [('NF', (10, 14))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADJD', 'PTKVZ', 'KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 18), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX die zweite halfte)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF zweite halfte)
			(LK sieht)
			(MF es besser)
			(VC aus)[01;31m)[00m
		(PX
			[01;31m(NF[00m
				(PX
					(KOKOM als)
					[01;36m(PX[00m
						(APPR in)
						(NX der ersten)[01;36m)[00m)[01;31m)[00m
			(ADVX nicht)
			(PX vor mittwoch donnerstag))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['KOKOM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KOKOM als)], 'auto preterminal span': (11, 14), 'span': (11, 14), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX die zweite halfte)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF zweite halfte)
			(LK sieht)
			(MF es besser)
			(VC aus)[01;31m)[00m
		(PX
			[01;31m(NF[00m
				(PX
					(KOKOM als)
					(PX in der ersten))[01;31m)[00m
			(ADVX nicht)
			(PX vor mittwoch donnerstag))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['NX', 'DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADJD', 'PTKVZ', 'KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 10), 'left siblings': ['NX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX die zweite halfte)
		(DM ja)
		(VF zweite halfte)
		(LK sieht)
		(MF es besser)
		(VC aus)
		(PX
			[01;31m(NF[00m
				(PX
					(KOKOM als)
					(PX in der ersten))[01;31m)[00m
			(ADVX nicht)
			(PX vor mittwoch donnerstag))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': ['ADVX', 'PX'], 'parent': 'PX', 'auto preterminal span': (10, 18), 'span': (10, 14), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP die zweite halfte ja zweite halfte sieht es besser aus als in der ersten nicht vor mittwoch donnerstag)

Sentence 498:
8 Initial errors
0 on fringe, 5 iterations
3 Error:Co-ordination
2 Error:Different label
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX [01;33m(SIMPX[00m
			(VF grundsatzlich)
			(LK gabe)
			[01;31m(MF[00m
				(NX es)
				(ADVX naturlich)
				(NX die moglichkeit)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;36m(NF[00m
						(SIMPX
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))) [01;33mSIMPX)[00m[01;36m)[00m
					(KON beziehungsweise)
					[01;36m(MVC[00m [01;31m(SIMPX[00m
						(MF den zug)
						(VC zu nehmen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'KON', 'SIMPX'], 'mover info': [('KON', (9, 10)), ('SIMPX', (10, 14))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (1, 14), 'movers': ['KON', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)
					(NX die moglichkeit)[01;31m)[00m
				(NF zu fliegen)[01;36m)[00m
			(KON beziehungsweise)
			[01;36m(MVC[00m [01;31m(SIMPX[00m
				(MF den zug)
				(VC zu nehmen)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NF', 'KON', 'MVC'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)
					(NX die moglichkeit)[01;31m)[00m
				(NF zu fliegen)[01;36m)[00m
			(KON beziehungsweise)
			(MVC den zug zu nehmen))
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [(KON beziehungsweise), (MVC (MF (NX (ART den) (NN zug))) (VC (VXINF (PTKZU zu) (VVINF nehmen))))], 'left siblings': [], 'auto preterminal span': (1, 9), 'span': (1, 9), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)
					(NX die moglichkeit)[01;31m)[00m
				(NF zu fliegen))
			(KON beziehungsweise)
			(MVC den zug zu nehmen))
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (3, 7), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (21, 24), 'span': (22, 23), 'left siblings': ['ADVX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben ich weis nicht ob ihnen das recht ist)

Sentence 499:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(ADJX etwas spater)
		(DM also)
		(SIMPX man mus schon so funf stunden rechnen fur die fahrt)
		[01;31m(PX[00m
			(PX deswegen)
			(ADVX vielleicht)
			(PX so um sieben uhr dreiundvierzig)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['DM', 'ADJX', 'DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'PIS', 'VMFIN', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'PROP', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (15, 22), 'left siblings': ['DM', 'ADJX', 'DM', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP na ja etwas spater also man mus schon so funf stunden rechnen fur die fahrt deswegen vielleicht so um sieben uhr dreiundvierzig)

Sentence 500:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:NP Internal Structure
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN genannte)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(VC vorzuziehen)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['PX', 'ADVX'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							(ADVX genannte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(VC vorzuziehen)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'VC'], 'mover info': [('VC', (20, 21))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PROP', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (12, 21), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVIZU', 'VVIZU'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				[01;31m(NX[00m
					(NX das zweite)
					[01;31m(NX[00m
						(PX von ihnen)
						(ADVX genannte)[01;31m)[00m[01;31m)[00m
				(VC vorzuziehen)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': ['VC'], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (15, 20), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				(NX das zweite)
				[01;31m(NX[00m
					(PX von ihnen)
					(ADVX genannte)[01;31m)[00m
				(VC vorzuziehen)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': ['VC'], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (17, 20), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig deswegen ware vielleicht das zweite von ihnen genannte vorzuziehen)

Sentence 501:
0 Initial errors
0 on fringe, 0 iterations

Sentence 502:
0 Initial errors
0 on fringe, 0 iterations

Sentence 503:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
		[01;36m(NX[00m
			[01;31m(NX[00m
				(ADVX zwar)
				[01;33m(NX[00m (NX die zweite juliwoche)[01;31m)[00m
			(NX die zweite halfte)[01;36m)[00m)) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'NX', 'NX'], 'mover info': [('NX', (15, 18))], 'old_family': ['SIMPX', 'NX', 'NX'], 'start left siblings': ['SIMPX', 'NX'], 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (0, 18), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP ich kann ihnen gleich mal einen vorschlag machen fur einen termin zwar die zweite juliwoche die zweite halfte)

Sentence 504:
0 Initial errors
0 on fringe, 0 iterations

Sentence 505:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX da bin ich dagegen mus ich sagen)
		(DM also)
		[01;31m(SIMPX[00m
			(VF von munchen nach hannover)
			(LK kann)
			(MF man auch sehr gut mit dem zug)
			(VC fahren)[01;31m)[00m
		[01;36m(NF[00m
			(ADVX
				(ADV sonst))[01;36m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (PX (PROP dagegen))))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen)))), (DM (ADVX (ADV also))), (SIMPX (VF (PX (PX (APPR von) (NX (NE munchen))) (PX (APPR nach) (NX (NE hannover))))) (LK (VXFIN (VMFIN kann))) (MF (NX (PIS man)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD gut)) (PX (APPR mit) (NX (ART dem) (NN zug)))) (VC (VXINF (VVINF fahren))))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX da bin ich dagegen mus ich sagen)
		(DM also)
		[01;31m(SIMPX[00m
			(VF von munchen nach hannover)
			(LK kann)
			(MF man auch sehr gut mit dem zug)
			(VC fahren)[01;31m)[00m
		(NF sonst)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'PROP', 'VMFIN', 'PPER', 'VVINF', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'VMFIN', 'PIS', 'ADV', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'VVINF', 'ADV'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (9, 22), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also da bin ich dagegen mus ich sagen also von munchen nach hannover kann man auch sehr gut mit dem zug fahren sonst)

Sentence 506:
0 Initial errors
0 on fringe, 0 iterations

Sentence 507:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX
			(ADVX gleich)
			[01;36m(PX[00m
				(APPR in)
				(NX der fruh)[01;36m)[00m)
		(SIMPX dann konnten wir die partner schon am nachmittag treffen)
		(DM ja)
		(SIMPX das ware mir recht)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV gleich))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gleich in der fruh dann konnten wir die partner schon am nachmittag treffen ja das ware mir recht)

Sentence 508:
43 Initial errors
0 on fringe, 30 iterations
4 Error:NP Attachment
4 Error:VP Attachment
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADVX etwas)
					(ADJD gunstiger)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			(VF
				(NX
					[01;31m(NX[00m
						(ART das)
						(ADJX teuerste)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
					(NX amgeorgengarten))) [01;33mNX)[00m
			(LK bietet)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus)) [01;33mSIMPX)[00m[01;36m)[00m
					(NX [01;33m(SIMPX (NX (C[00m
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(R[00m
					(C was) [01;33mC) NX)[00m
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX naturlich)
						(ADVX auch)
						(ADVX nicht)[01;31m)[00m
					[01;31m(VC[00m
						[01;36m(ADJX[00m [01;31m(VXINF[00m
							(PTKZU zu)
							(VVINF verachten)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							(VXFIN
								(VAFIN ist))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['NX', 'R'], 'mover info': [('NX', (64, 66))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (56, 73), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['R'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADVX etwas)
					(ADJD gunstiger)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(VF
					(NX
						[01;31m(NX[00m
							(ART das)
							(ADJX teuerste)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						(NX amgeorgengarten))) [01;33mNX)[00m
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX naturlich)
							(ADVX auch)
							(ADVX nicht)[01;31m)[00m
						[01;31m(VC[00m
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(PTKZU zu)
								(VVINF verachten)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN ist))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (70, 72))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (66, 73), 'movers': ['VXINF'], 'old_parent': 'VC', 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADVX etwas)
					(ADJD gunstiger)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(VF
					(NX
						[01;31m(NX[00m
							(ART das)
							(ADJX teuerste)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						(NX amgeorgengarten))) [01;33mNX)[00m
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF
							(ADVX naturlich)
							(ADVX auch)
							(ADVX nicht)
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(PTKZU zu)
								(VVINF verachten)[01;31m)[00m[01;36m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ART', 'ADJX', 'NX'], 'mover info': [('ART', (57, 58)), ('ADJX', (58, 59))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (57, 61), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADVX etwas)
					(ADJD gunstiger)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF
							(ADVX naturlich)
							(ADVX auch)
							(ADVX nicht)
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(PTKZU zu)
								(VVINF verachten)[01;31m)[00m[01;36m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADVX etwas)
					(ADJD gunstiger)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF
							(ADVX naturlich)
							(ADVX auch)
							(ADVX nicht)
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(PTKZU zu)
								(VVINF verachten)[01;31m)[00m[01;36m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['NX', 'R', 'PX', 'ADVX'], 'auto preterminal span': (28, 30), 'span': (28, 30), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				(ADVX etwas gunstiger)[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF
							(ADVX naturlich)
							(ADVX auch)
							(ADVX nicht)
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(PTKZU zu)
								(VVINF verachten)[01;31m)[00m[01;36m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['ADVX', 'ADVX', 'ADVX', 'ADJX'], 'auto preterminal span': (70, 72), 'span': (70, 72), 'subtrees': ['PTKZU', 'VVINF'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			[01;36m(MF[00m
				[01;31m(PX[00m
					(ADVX auch)
					[01;33m(PX[00m (PX mit cafeteria und terrasse)[01;31m)[00m
				(ADVX etwas gunstiger)[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'R', 'ADVX', 'PX', 'ADVX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'R'], 'auto preterminal span': (14, 30), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF
				(ADVX auch)
				[01;36m(PX[00m
					(PX mit cafeteria und terrasse)
					(ADVX etwas gunstiger)[01;36m)[00m)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV auch))], 'auto preterminal span': (24, 30), 'span': (24, 30), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF den luxus)[01;36m)[00m
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['KOORD', 'NX', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN'), 'right siblings': [(SIMPX (NF (NX (ART eines) (NN schwimmbads)) (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))) (VC (VXFIN (VAFIN ist))))))], 'left siblings': [], 'auto preterminal span': (56, 64), 'span': (56, 64), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN schwimmbads)], 'left siblings': [], 'auto preterminal span': (64, 65), 'span': (64, 65), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						(NX eines)
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART eines))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX
						(NX eines)
						[01;36m(VC[00m
							(VXINF
								(NN schwimmbads))[01;36m)[00m)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART eines))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['NX', 'R', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (14, 30), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;33m(VF (NX[00m (NX ein hotel)
		[01;31m(R[00m
			(C was)
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe des zentrums))[01;31m)[00m [01;33mNX) VF)[00m
			(LK liegt)[01;31m)[00m
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'LK'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'MF', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (16, 23), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;36m(VF[00m
			[01;36m(NX[00m
				(NX ein hotel)
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['NX', 'C', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADVX (ADVX (ADV etwas)) (ADJD gunstiger)))), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage))))))), (NX (ADVX (ADV dann)) (NX (NX (ART das) (NE schloshotel)) (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (VC (VXFIN (VAFIN ist)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (SIMPX (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (ART den) (NN luxus)))) (SIMPX (NF (NX (NX (ART eines)) (VC (VXINF (NN schwimmbads)))) (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (14, 22), 'span': (14, 22), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;36m(VF[00m
			(NX
				(NX ein hotel)
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m)[01;36m)[00m
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADVX (ADVX (ADV etwas)) (ADJD gunstiger)))), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage))))))), (NX (ADVX (ADV dann)) (NX (NX (ART das) (NE schloshotel)) (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (VC (VXFIN (VAFIN ist)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (SIMPX (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (ART den) (NN luxus)))) (SIMPX (NF (NX (NX (ART eines)) (VC (VXINF (NN schwimmbads)))) (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (14, 22), 'span': (14, 22), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF
			(NX
				(NX ein hotel)
				(C was)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe des zentrums))[01;31m)[00m))
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (14, 22), 'span': (17, 22), 'left siblings': ['NX', 'C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (31, 40), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'NF', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (40, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'NF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		[01;33m(SIMPX (NF[00m (NF das ist in der mittleren preislage)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(NX[00m
			(NX das schloshotel) [01;33mNX) NF) SIMPX)[00m
			[01;31m(R[00m [01;33m(SIMPX[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht) [01;33mSIMPX)[00m
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'NF', 'ADVX', 'NX', 'R', 'SIMPX', 'SIMPX'], 'mover info': [('R', (43, 50))], 'old_family': ['NX', 'R'], 'start left siblings': ['NX'], 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'NF', 'ADVX', 'NX'], 'auto preterminal span': (0, 73), 'adding node already present': False, 'movers': ['R'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(NF das ist in der mittleren preislage)
				[01;36m(NX[00m
					(ADVX dann)
					(NX das schloshotel)[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['NF', 'ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE'), 'right siblings': [(SIMPX (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (VC (VXFIN (VAFIN ist)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht))))), (SIMPX (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (ART den) (NN luxus)))) (SIMPX (NF (NX (NX (ART eines)) (VC (VXINF (NN schwimmbads)))) (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also))), (VF (NX (NX (ART ein) (NN hotel)) (C (NX (PRELS was))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums)))))), (LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADVX (ADVX (ADV etwas)) (ADJD gunstiger)))), (DM (PTKANT nee)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN sehe))), (MF (ADVX (ADV grade)))], 'auto preterminal span': (34, 43), 'span': (34, 43), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		[01;36m(SIMPX[00m
			(NF
				(NF das ist in der mittleren preislage)
				[01;36m(NX[00m
					(ADVX dann)
					(NX das schloshotel)[01;36m)[00m)[01;36m)[00m
		(SIMPX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'DM', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE'), 'right siblings': [(SIMPX (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (VC (VXFIN (VAFIN ist)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht))))), (SIMPX (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (ART den) (NN luxus)))) (SIMPX (NF (NX (NX (ART eines)) (VC (VXINF (NN schwimmbads)))) (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also))), (VF (NX (NX (ART ein) (NN hotel)) (C (NX (PRELS was))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums)))))), (LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADVX (ADVX (ADV etwas)) (ADJD gunstiger)))), (DM (PTKANT nee)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN sehe))), (MF (ADVX (ADV grade)))], 'auto preterminal span': (34, 43), 'span': (34, 43), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX
			(NF
				(NF das ist in der mittleren preislage)
				[01;36m(NX[00m
					(ADVX dann)
					(NX das schloshotel)[01;36m)[00m))
		(SIMPX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE'), 'right siblings': [], 'left siblings': [(NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage))))))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'NF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'R', 'auto preterminal span': (43, 50), 'span': (43, 44), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX
			[01;31m(R[00m
				(NX das)
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist)[01;31m)[00m
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['NX', 'MF', 'VC'], 'family': ['R', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (43, 56), 'span': (43, 50), 'left siblings': [], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX
			(NX das)
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(VC ist)
			(SIMPX das fande ich auch nicht schlecht))
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['VC', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (43, 56), 'span': (44, 49), 'left siblings': ['NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist das fande ich auch nicht schlecht)
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				[01;31m(NF[00m
					(NX eines schwimmbads)
					[01;31m(R[00m
						(C was) [01;33mC) NX)[00m
						(MF naturlich auch nicht zu verachten)
						(VC ist)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'R'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (64, 73), 'span': (64, 73), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist das fande ich auch nicht schlecht)
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX [01;33m(NX (C[00m
				(NX eines schwimmbads)
				[01;31m(R[00m
					(C was) [01;33mC) NX)[00m
					(MF naturlich auch nicht zu verachten)
					(VC ist)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['NX', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (64, 73), 'span': (66, 73), 'left siblings': ['NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist das fande ich auch nicht schlecht)
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX
				[01;36m(C[00m
					[01;36m(NX[00m
						(NX eines schwimmbads)
						(C was)[01;36m)[00m[01;36m)[00m
				(MF naturlich auch nicht zu verachten)
				(VC ist)))))
Step:UNSET add
{'subtrees': ['NX', 'C'], 'family': ['NX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS'), 'right siblings': [(MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))), (VC (VXFIN (VAFIN ist)))], 'left siblings': [], 'auto preterminal span': (64, 67), 'span': (64, 67), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(VF ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(VF ich)
		(LK sehe)
		(MF grade)
		(SIMPX das ist in der mittleren preislage dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist das fande ich auch nicht schlecht)
		(SIMPX
			(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus)
			(SIMPX
				[01;36m(C[00m
					(NX
						(NX eines schwimmbads)
						(C was))[01;36m)[00m
				(MF naturlich auch nicht zu verachten)
				(VC ist)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS'), 'right siblings': [(MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (PTKZU zu) (VVINF verachten))), (VC (VXFIN (VAFIN ist)))], 'left siblings': [], 'auto preterminal span': (64, 67), 'span': (64, 67), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja zur unterkunft hatte ich vorschlage zu machen es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger nee ich sehe grade das ist in der mittleren preislage dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)

Sentence 509:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX und am abend konnten wir auch noch was unternehmen)
		(SIMPX
			(LK konnten)
			[01;36m(SIMPX[00m
				(MF mal wieder ins kino)
				(VC gehen)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN konnten)))], 'auto preterminal span': (10, 15), 'span': (10, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und am abend konnten wir auch noch was unternehmen konnten mal wieder ins kino gehen)

Sentence 510:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX
			(VF ich)
			(LK hatte)
			[01;36m(MF[00m
				(APPR in)
				[01;31m(MF[00m
					(NX
						(DP so wenig)
						(NN zeit))[01;31m)[00m[01;36m)[00m
			(NF das ich mich darum nicht gekummert habe))
		[01;36m(SIMPX[00m
			(SIMPX aber es ware ein guter anlas)
			(NX das)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (3, 4))], 'old_family': ['VF', 'LK', 'APPR', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'NF'], 'end left siblings': [], 'auto preterminal span': (1, 14), 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM nee)
		(SIMPX ich hatte in so wenig zeit das ich mich darum nicht gekummert habe)
		[01;36m(SIMPX[00m
			(SIMPX aber es ware ein guter anlas)
			(NX das)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'PDS'), 'right siblings': [], 'left siblings': [(DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (APPR in) (NX (DP (ADVX (ADV so)) (PIAT wenig)) (NN zeit))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (PROP darum)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVPP gekummert)) (VXFIN (VAFIN habe))))))], 'auto preterminal span': (14, 21), 'span': (14, 21), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP nee ich hatte in so wenig zeit das ich mich darum nicht gekummert habe aber es ware ein guter anlas das)

Sentence 511:
0 Initial errors
0 on fringe, 0 iterations

Sentence 512:
0 Initial errors
0 on fringe, 0 iterations

Sentence 513:
21 Initial errors
0 on fringe, 14 iterations
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C weil)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX da)
							[01;36m(NX[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)[01;31m)[00m
						[01;31m(VC[00m
							[01;36m(NX[00m [01;31m(VXINF[00m
								(VVPP eroffnet)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN haben))[01;36m)[00m[01;31m)[00m)[01;36m)[00m[01;31m)[00m) [01;33mSIMPX)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(DM ja)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK weis)
					(MF nicht)[01;31m)[00m[01;36m)[00m
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (26, 27))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX'], 'auto preterminal span': (18, 28), 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C weil)
						(MF
							(ADVX da)
							[01;36m(NX[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)
							[01;36m(NX[00m [01;31m(VXINF[00m
								(VVPP eroffnet)[01;31m)[00m[01;36m)[00m)
						(VC haben))[01;36m)[00m[01;31m)[00m) [01;33mSIMPX)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(DM ja)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK weis)
					(MF nicht)[01;31m)[00m[01;36m)[00m
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'NX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C weil)
						(MF
							(ADVX da)
							[01;36m(NX[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)
							(NX eroffnet))
						(VC haben))[01;36m)[00m[01;31m)[00m) [01;33mSIMPX)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(DM ja)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK weis)
					(MF nicht)[01;31m)[00m[01;36m)[00m
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'new_parent': 'FKOORD', 'new_family': ['MVC', 'KON', 'MVC', 'PX'], 'mover info': [('PX', (11, 18))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (0, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					(C weil)
					(MF
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)
						(NX eroffnet))
					(VC haben)))) [01;33mSIMPX)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(DM ja)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK weis)
					(MF nicht)[01;31m)[00m[01;36m)[00m
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'NF'], 'mover info': [('NF', (18, 28))], 'old_family': ['VF', 'LK', 'FKOORD', 'NF'], 'start left siblings': ['VF', 'LK', 'FKOORD'], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 28), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					(SIMPX
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)
						(NF
							(SIMPX
								(C weil)
								(MF
									(ADVX da)
									[01;36m(NX[00m
										(NX die geschaftspartner)
										(ADVX auch)
										(NX eine filiale)[01;36m)[00m
									(ADVX jetzt)
									(NX eroffnet))
								(VC haben))))[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(DM ja)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK weis)
					(MF nicht)[01;31m)[00m[01;36m)[00m
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'DM', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (28, 29)), ('DM', (29, 30))], 'old_family': ['KOORD', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'start right siblings': ['SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': [], 'auto preterminal span': (28, 48), 'movers': ['KOORD', 'DM'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX hannover)) [01;33mNX) SIMPX)[00m[01;36m)[00m
					(SIMPX
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)
						(NF
							(SIMPX
								(C weil)
								(MF
									(ADVX da)
									[01;36m(NX[00m
										(NX die geschaftspartner)
										(ADVX auch)
										(NX eine filiale)[01;36m)[00m
									(ADVX jetzt)
									(NX eroffnet))
								(VC haben))))[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (PRF mich)) (ADJX (ADJD recht))) (VC (VXFIN (VVFIN entsinne))) (NF (SIMPX (C (KOUS weil)) (MF (ADVX (ADV da)) (NX (ART die) (NN geschaftspartner)) (ADVX (ADV auch)) (NX (ART eine) (NN filiale)) (ADVX (ADV jetzt)) (NX (VVPP eroffnet))) (VC (VXFIN (VAFIN haben))))))], 'left siblings': [], 'auto preterminal span': (11, 13), 'span': (11, 13), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(NF in hannover) [01;33mNX) SIMPX)[00m
					(SIMPX
						(C wenn)
						(MF ich mich recht)
						(VC entsinne)
						(NF
							(SIMPX
								(C weil)
								(MF
									(ADVX da)
									[01;36m(NX[00m
										(NX die geschaftspartner)
										(ADVX auch)
										(NX eine filiale)[01;36m)[00m
									(ADVX jetzt)
									(NX eroffnet))
								(VC haben))))[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['ADVX', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'ART', 'NN'), 'right siblings': [(ADVX (ADV jetzt)), (NX (VVPP eroffnet))], 'left siblings': [(ADVX (ADV da))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(NX[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(NF in hannover) [01;33mNX) SIMPX)[00m
					(SIMPX wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'subtrees': ['MVC', 'KON', 'MVC', 'PX'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (2, 28), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;31m(MVC[00m [01;33m(NX[00m
				(MF eines)
				(VC ausmachen)[01;31m)[00m
			[01;31m(PX[00m
				(NF in hannover) [01;33mNX) SIMPX)[00m
				(SIMPX wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MVC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (9, 11), 'left siblings': ['VF', 'LK', 'MVC', 'KON'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;33m(NX[00m (MF eines)
			(VC ausmachen)
			[01;31m(PX[00m
				(NF in hannover) [01;33mNX) SIMPX)[00m
				(SIMPX wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (11, 28), 'left siblings': ['VF', 'LK', 'MVC', 'KON', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			[01;36m(SIMPX[00m
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;36m(NX[00m
					(MF eines)
					(VC ausmachen)
					(NF in hannover)[01;36m)[00m[01;36m)[00m
			(SIMPX wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben))
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MVC', 'KON', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (PRF mich)) (ADJX (ADJD recht))) (VC (VXFIN (VVFIN entsinne))) (NF (SIMPX (C (KOUS weil)) (MF (ADVX (ADV da)) (NX (NX (ART die) (NN geschaftspartner)) (ADVX (ADV auch)) (NX (ART eine) (NN filiale))) (ADVX (ADV jetzt)) (NX (VVPP eroffnet))) (VC (VXFIN (VAFIN haben))))))], 'left siblings': [], 'auto preterminal span': (0, 13), 'span': (0, 13), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(SIMPX
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;36m(NX[00m
					(MF eines)
					(VC ausmachen)
					(NF in hannover)[01;36m)[00m)
			(SIMPX wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben))
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['VF', 'LK', 'MVC', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VMFIN wollten))), (MVC (MF (NX (PRF uns)) (ADVX (ADV ja)) (PX (APPR fur) (NX (ART ein) (NN meeting)))) (VC (VXINF (VVINF treffen)))), (KON beziehungsweise)], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		[01;31m(SIMPX[00m
			(SIMPX und ja ich weis nicht)
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(PX
					(NX meiner ansicht)
					(APPO nach))[01;31m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (28, 48), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(SIMPX und ja ich weis nicht)
		(VF es)
		(LK sollte)
		(MF auf alle falle noch in den nachsten drei monaten)
		(VC geschehen)
		[01;31m(NF[00m
			(PX
				(NX meiner ansicht)
				(APPO nach))[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (45, 48), 'left siblings': ['SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben und ja ich weis nicht es sollte auf alle falle noch in den nachsten drei monaten geschehen meiner ansicht nach wie sehen sie das)

Sentence 514:
11 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ART die)
							(ADJX zweite)
							(NN woche)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADVX ganz)
								(ADJD gut)[01;31m)[00m[01;36m)[00m
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK sieht)
				(MF es da)[01;31m)[00m
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m[01;36m)[00m))
Step:Different label
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ART die)
							(ADJX zweite)
							(NN woche)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK sieht)
				(MF es da)[01;31m)[00m
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'APPR'], 'mover info': [('APPR', (25, 26))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'APPR'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 26), 'movers': ['APPR'], 'old_parent': 'TURN', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ART die)
							(ADJX zweite)
							(NN woche)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX
			(VF wie)
			(LK sieht)
			(MF es da)
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['ADVX', 'ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'start right siblings': ['ART', 'ADJX', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF dann so die zweite woche))[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX
			(VF wie)
			(LK sieht)
			(MF es da)
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADJD'], 'mover info': [('ADVX', (18, 20))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF dann so die zweite woche))[01;36m)[00m
		(SIMPX ich glaube die zweite woche ware ganz gut machbar)
		(SIMPX
			(VF wie)
			(LK sieht)
			(MF es da)
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN glaube))) (NF (SIMPX (VF (NX (ART die) (ADJX (ADJA zweite)) (NN woche))) (LK (VXFIN (VAFIN ware))) (MF (ADJX (ADVX (ADVX (ADV ganz)) (ADJD gut)) (ADJD machbar)))))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN sieht))) (MF (NX (PPER es)) (ADVX (ADV da))) (APPR bei))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (NN november))) (LK (VXFIN (VVFIN kame))) (MF (ADVX (ADV dann)) (PX (APPR in) (NX (NN frage)))))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		(NF wenn dann so die zweite woche)
		(SIMPX ich glaube die zweite woche ware ganz gut machbar)
		(SIMPX
			(VF wie)
			(LK sieht)
			(MF es da)
			[01;36m(VC[00m
				(APPR bei)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [], 'left siblings': [(VF (ADJX (PWAV wie))), (LK (VXFIN (VVFIN sieht))), (MF (NX (PPER es)) (ADVX (ADV da)))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF november)
			(LK kame)
			(MF dann in frage)[01;31m)[00m
		(NF wenn dann so die zweite woche)
		(SIMPX ich glaube die zweite woche ware ganz gut machbar)
		(SIMPX wie sieht es da bei)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja november kame dann in frage wenn dann so die zweite woche ich glaube die zweite woche ware ganz gut machbar wie sieht es da bei)

Sentence 515:
8 Initial errors
0 on fringe, 4 iterations
5 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		[01;31m(PX[00m
			(ADVX blos)
			(ADVX nicht)
			[01;31m(PX[00m [01;33m(SIMPX (VF (PX[00m
				(APPRART am)
				[01;33m(NX[00m (NX montag)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NN montag))[01;31m)[00m [01;33mNX) PX) VF)[00m
			(LK ist)
			(MF ausgeschlossen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX da ist namlich eine dienstbesprechung)
		(SIMPX und die ist sehr wichtig)))
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (7, 9))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX', 'ADVX'], 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		[01;31m(PX[00m
			(ADVX blos)
			(ADVX nicht)[01;31m)[00m
		(SIMPX
			(PX
				(VF
					[01;31m(PX[00m
						(APPRART am)
						[01;33m(NX[00m (NX montag)[01;31m)[00m
					(NX montag))) [01;33mNX)[00m
			(LK ist)
			(MF ausgeschlossen))
		(SIMPX da ist namlich eine dienstbesprechung)
		(SIMPX und die ist sehr wichtig)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (5, 7), 'left siblings': ['SIMPX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		(SIMPX
			(PX
				(VF
					[01;31m(PX[00m
						(APPRART am)
						[01;33m(NX[00m (NX montag)[01;31m)[00m
					(NX montag))) [01;33mNX)[00m
			(LK ist)
			(MF ausgeschlossen))
		(SIMPX da ist namlich eine dienstbesprechung)
		(SIMPX und die ist sehr wichtig)))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'NN'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (7, 10), 'span': (7, 9), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		(SIMPX
			(PX
				(VF
					(APPRART am)
					[01;36m(NX[00m
						(NX montag)
						(NX montag)[01;36m)[00m))
			(LK ist)
			(MF ausgeschlossen))
		(SIMPX da ist namlich eine dienstbesprechung)
		(SIMPX und die ist sehr wichtig)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPRART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'left siblings': [(APPRART am)], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP erste halfte ist in ordnung blos nicht am montag montag ist ausgeschlossen da ist namlich eine dienstbesprechung und die ist sehr wichtig)

Sentence 516:
0 Initial errors
0 on fringe, 0 iterations

Sentence 517:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
2 Error:Modifier Attachment
3 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(APPR ab)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX halb sechs))[01;31m)[00m
				(LK ist)
				(MF in ordnung))
			(NX
				[01;36m(ADVX[00m
					(ADVX nur)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(ADVX gleich)
				(NX halb sechs))[01;36m)[00m
		[01;33m(SIMPX[00m (SIMPX das ware mir etwas zu fruh)
		[01;31m(ADJX[00m
			[01;31m(NX[00m
				(ADVX fruhestens) [01;33mSIMPX)[00m
				[01;36m(NX[00m
					(ART [01;33m(ADJX[00m eine)
					(NN stunde)[01;36m)[00m[01;31m)[00m
			(ADJD spater)[01;31m)[00m)) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD'), 'start right siblings': ['ADVX', 'ADVX', 'NX'], 'end left siblings': [], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(APPR ab)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX halb sechs))[01;31m)[00m
				(LK ist)
				(MF in ordnung))
			(NX nur nicht gleich halb sechs)[01;36m)[00m
		[01;33m(SIMPX[00m (SIMPX das ware mir etwas zu fruh)
		[01;31m(ADJX[00m
			[01;31m(NX[00m
				(ADVX fruhestens) [01;33mSIMPX)[00m
				[01;36m(NX[00m
					(ART [01;33m(ADJX[00m eine)
					(NN stunde)[01;36m)[00m[01;31m)[00m
			(ADJD spater)[01;31m)[00m)) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'NX', 'ADJD'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'ADJD'), 'start right siblings': ['ART', 'NN'], 'end left siblings': [], 'auto preterminal span': (18, 22), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(APPR ab)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX halb sechs))[01;31m)[00m
				(LK ist)
				(MF in ordnung))
			(NX nur nicht gleich halb sechs)[01;36m)[00m
		[01;33m(SIMPX[00m (SIMPX das ware mir etwas zu fruh)
		[01;31m(ADJX[00m
			(ADVX fruhestens) [01;33mSIMPX)[00m
			[01;36m(ADJX[00m
				(NX eine stunde)
				(ADJD spater)[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['APPR', 'SIMPX', 'NX', 'SIMPX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'NX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'start right siblings': ['NX', 'ADJD'], 'end left siblings': ['APPR', 'SIMPX', 'NX', 'SIMPX'], 'auto preterminal span': (0, 22), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(APPR ab)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX halb sechs))[01;31m)[00m
				(LK ist)
				(MF in ordnung))
			(NX nur nicht gleich halb sechs)[01;36m)[00m
		(SIMPX das ware mir etwas zu fruh fruhestens)
		(ADJX eine stunde spater)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['APPR', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV etwas)) (PTKA zu) (ADJD fruh)))) (ADVX (ADV fruhestens))), (ADJX (NX (ART eine) (NN stunde)) (ADJD spater))], 'left siblings': [(APPR ab)], 'auto preterminal span': (1, 12), 'span': (1, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX halb sechs))[01;31m)[00m
				(LK ist)
				(MF in ordnung))
			(NX nur nicht gleich halb sechs))
		(SIMPX das ware mir etwas zu fruh fruhestens)
		(ADJX eine stunde spater)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 7), 'span': (1, 4), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ab ab halb sechs ist in ordnung nur nicht gleich halb sechs das ware mir etwas zu fruh fruhestens eine stunde spater)

Sentence 518:
0 Initial errors
0 on fringe, 0 iterations

Sentence 519:
23 Initial errors
0 on fringe, 15 iterations
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Co-ordination
2 Error:Co-ordination
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX sie)
						(NX sich)
						(PX um die unterkunft)
						(ADVX schon)[01;31m)[00m
					[01;31m(VC[00m
						(VXINF gekummert) [01;33mMF)[00m
						[01;36m(VC[00m
							(VXFIN
								(VAFIN haben))[01;36m)[00m[01;31m)[00m)))
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NX das hotel zentral)
						(NX das hotel nohre) [01;33mMF)[00m[01;36m)[00m
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						[01;36m(ADVX[00m [01;31m(NX[00m
							(PIS beides)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis)[01;36m)[00m))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (11, 12))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['NX', 'NX', 'PX', 'ADVX'], 'auto preterminal span': (4, 13), 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NX das hotel zentral)
						(NX das hotel nohre) [01;33mMF)[00m[01;36m)[00m
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						[01;36m(ADVX[00m [01;31m(NX[00m
							(PIS beides)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['PIS'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NX das hotel zentral)
						(NX das hotel nohre) [01;33mMF)[00m[01;36m)[00m
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis)[01;36m)[00m))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (61, 71), 'span': (61, 71), 'subtrees': ['NX', 'PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NX das hotel zentral)
						(NX das hotel nohre) [01;33mMF)[00m[01;36m)[00m
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m))
			(SIMPX ich weis)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'KON', 'NX', 'PX'], 'mover info': [('KON', (29, 30)), ('NX', (30, 33))], 'old_family': ['NX', 'NX', 'KON', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (22, 35), 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'end right siblings': ['PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX da)
					(NX das hotel zentral das hotel nohre)[01;36m)[00m
				(KON und)
				[01;36m(NX[00m
					(NX das hotel prinzenhof)
					(PX in hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m))
			(SIMPX ich weis)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'NX', 'PX', 'VF', 'LK', 'MF'], 'mover info': [('KON', (29, 30)), ('NX', (30, 33)), ('PX', (33, 35))], 'old_family': ['ADVX', 'NX', 'KON', 'NX', 'PX'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 73), 'movers': ['KON', 'NX', 'PX'], 'old_parent': 'MF', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF da das hotel zentral das hotel nohre)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			[01;36m(NX[00m
				(NX das hotel prinzenhof)
				(PX in hannover)[01;36m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX
				(NX die anderen)
				(PX [01;33m(PX[00m
					(ADVX so)
					(APPR um)
					[01;31m(NX[00m
						(NX hundert vierzig mark) [01;33mPX)[00m
						(NX hundert zwanzig mark)[01;31m)[00m))
			(SIMPX ich weis)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'NX'], 'mover info': [('NX', (65, 68))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ADVX', 'APPR'], 'auto preterminal span': (63, 71), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF da das hotel zentral das hotel nohre)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			[01;36m(NX[00m
				(NX das hotel prinzenhof)
				(PX in hannover)[01;36m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark)
			(SIMPX ich weis)[01;36m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['KON', 'NX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [(VF (NX (NX (ADVX (PIS beides)) (NX (ADJX (ADVX (ADV sehr)) (ADJA gute)) (NN unterkunfte))) (KON und) (ADJX (ADVX (ADV auch)) (ADJX (ADVX (ADVX (ADV ziemlich)) (ADV zentral)) (ADJD gelegen))))), (LK (VXFIN (VVFIN glaube))), (MF (NX (PPER ich)))], 'left siblings': [(KON und)], 'auto preterminal span': (30, 35), 'span': (30, 35), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF da das hotel zentral das hotel nohre)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			(NX das hotel prinzenhof in hannover)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis))[01;36m)[00m
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark)
			(SIMPX ich weis)[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [(SIMPX (VF (NX (ART das) (PIS eine))) (LK (VXFIN (VVFIN liegt))) (MF (PX (ADVX (ADV etwas)) (APPR uber) (NX (ADJX (CARD zweihundert)) (NN mark))))), (SIMPX (NX (ART die) (PIS anderen)) (PX (PX (ADVX (ADV so)) (APPR um) (NX (ADJX (CARD hundert) (CARD vierzig)) (NN mark))) (NX (ADJX (CARD hundert) (CARD zwanzig)) (NN mark)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (NX (PRF sich)) (PX (APPR um) (NX (ART die) (NN unterkunft))) (ADVX (ADV schon)) (VXINF (VVPP gekummert))) (VC (VXFIN (VAFIN haben)))))), (SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (ADVX (PTKNEG nicht))))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN vorschlage)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV da)) (NX (NX (ART das) (NX (NX (NN hotel)) (NX (NE zentral)))) (NX (ART das) (NX (NX (NN hotel)) (NX (NE nohre))))))), (SIMPX (KON und) (NX (NX (ART das) (NX (NX (NN hotel)) (NX (NE prinzenhof)))) (PX (APPR in) (NX (NE hannover)))) (VF (NX (NX (ADVX (PIS beides)) (NX (ADJX (ADVX (ADV sehr)) (ADJA gute)) (NN unterkunfte))) (KON und) (ADJX (ADVX (ADV auch)) (ADJX (ADVX (ADVX (ADV ziemlich)) (ADV zentral)) (ADJD gelegen))))) (LK (VXFIN (VVFIN glaube))) (MF (NX (PPER ich))))], 'auto preterminal span': (46, 54), 'span': (46, 54), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF da das hotel zentral das hotel nohre)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			(NX das hotel prinzenhof in hannover)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		[01;36m(SIMPX[00m
			(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark)
			(SIMPX ich weis)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (NX (PRF sich)) (PX (APPR um) (NX (ART die) (NN unterkunft))) (ADVX (ADV schon)) (VXINF (VVPP gekummert))) (VC (VXFIN (VAFIN haben)))))), (SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (ADVX (PTKNEG nicht))))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN vorschlage)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV da)) (NX (NX (ART das) (NX (NX (NN hotel)) (NX (NE zentral)))) (NX (ART das) (NX (NX (NN hotel)) (NX (NE nohre))))))), (SIMPX (KON und) (NX (NX (ART das) (NX (NX (NN hotel)) (NX (NE prinzenhof)))) (PX (APPR in) (NX (NE hannover)))) (VF (NX (NX (ADVX (PIS beides)) (NX (ADJX (ADVX (ADV sehr)) (ADJA gute)) (NN unterkunfte))) (KON und) (ADJX (ADVX (ADV auch)) (ADJX (ADVX (ADVX (ADV ziemlich)) (ADV zentral)) (ADJD gelegen))))) (LK (VXFIN (VVFIN glaube))) (MF (NX (PPER ich)))), (NF (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN unterscheiden))) (MF (NX (PRF sich)) (ADVX (ADV dann)) (ADVX (ADV wohl)) (PX (ADVX (ADV nur)) (APPRART im) (NX (NN preis)))))), (SIMPX (VF (NX (ART das) (PIS eine))) (LK (VXFIN (VVFIN liegt))) (MF (PX (ADVX (ADV etwas)) (APPR uber) (NX (ADJX (CARD zweihundert)) (NN mark)))))], 'auto preterminal span': (61, 73), 'span': (61, 73), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF da das hotel zentral das hotel nohre)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			(NX das hotel prinzenhof in hannover)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (20, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(MF da das hotel zentral das hotel nohre)
		[01;31m(SIMPX[00m
			(KON und)
			(NX das hotel prinzenhof in hannover)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m)
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:UNSET remove
{'subtrees': ['KON', 'NX', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (29, 46), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(MF da das hotel zentral das hotel nohre)
		(KON und)
		(NX das hotel prinzenhof in hannover)
		[01;31m(VF[00m
			[01;31m(NX[00m
				(NX
					(ADVX beides)
					[01;31m(NX[00m
						(ADJX sehr gute)
						(NN unterkunfte)[01;31m)[00m)
				(KON und)
				[01;31m(ADJX[00m
					(ADVX auch)
					(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(LK glaube)
		(MF ich)
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (35, 44), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(MF da das hotel zentral das hotel nohre)
		(KON und)
		(NX das hotel prinzenhof in hannover)
		[01;31m(NX[00m
			(NX
				(ADVX beides)
				[01;31m(NX[00m
					(ADJX sehr gute)
					(NN unterkunfte)[01;31m)[00m)
			(KON und)
			[01;31m(ADJX[00m
				(ADVX auch)
				(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
		(LK glaube)
		(MF ich)
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADJX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX', 'NX', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (35, 44), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(MF da das hotel zentral das hotel nohre)
		(KON und)
		(NX das hotel prinzenhof in hannover)
		(NX
			(ADVX beides)
			[01;31m(NX[00m
				(ADJX sehr gute)
				(NN unterkunfte)[01;31m)[00m)
		(KON und)
		[01;31m(ADJX[00m
			(ADVX auch)
			(ADJX ziemlich zentral gelegen)[01;31m)[00m
		(LK glaube)
		(MF ich)
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (35, 39), 'span': (36, 39), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(MF da das hotel zentral das hotel nohre)
		(KON und)
		(NX das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		[01;31m(ADJX[00m
			(ADVX auch)
			(ADJX ziemlich zentral gelegen)[01;31m)[00m
		(LK glaube)
		(MF ich)
		(NF die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark)
		(SIMPX die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX', 'NX', 'KON', 'ADJX', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (40, 44), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'NX', 'NX', 'KON'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben wenn nicht hatte ich hier drei vorschlage es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich die unterscheiden sich dann wohl nur im preis das eine liegt etwas uber zweihundert mark die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)

Sentence 520:
0 Initial errors
0 on fringe, 0 iterations

Sentence 521:
0 Initial errors
0 on fringe, 0 iterations

Sentence 522:
10 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			[01;36m(SIMPX[00m
				[01;31m(NX[00m [01;33m(MF[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m [01;33mNX) MF)[00m[01;36m)[00m
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX', 'NN'], 'mover info': [('NN', (24, 25))], 'old_family': ['ADJX', 'ADJX', 'NN'], 'start left siblings': ['ADJX', 'ADJX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX'], 'auto preterminal span': (0, 25), 'adding node already present': False, 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				[01;36m(MF[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					(NX
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m[01;36m)[00m
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'ADVX', 'NX', 'NX', 'NN'], 'mover info': [('ADVX', (19, 20)), ('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (19, 25), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(MF
					(ADVX aber)
					(ADVX vielleicht)
					[01;36m(NX[00m
						(NX irgendwas)
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV schon)) (NX (PIAT irgendwelche) (NN vorschlage)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))))], 'auto preterminal span': (8, 25), 'span': (8, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(MF
					(ADVX aber)
					(ADVX vielleicht)
					[01;36m(NX[00m
						(NX irgendwas)
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJA', 'ADJA'), 'right siblings': [], 'left siblings': [(ADVX (ADV aber)), (ADVX (ADV vielleicht))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(MF
					(ADVX aber)
					(ADVX vielleicht)
					(NX
						(NX irgendwas)
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m)))
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (NX (PIS irgendwas)) (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(MF
					(ADVX aber)
					(ADVX vielleicht)
					(NX
						(NX irgendwas)
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m)))
				[01;36m(VXINF[00m
					(VC
						(NN treffen))[01;36m)[00m))))
Step:Unary
{'subtrees': ['VC'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (NX (PIS irgendwas)) (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(MF
					(ADVX aber)
					(ADVX vielleicht)
					(NX
						(NX irgendwas)
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m)))
				(VXINF treffen)))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (23, 24), 'left siblings': ['ADJX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben sie schon irgendwelche vorschlage ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert aber vielleicht irgendwas kleines gemutliches treffen)

Sentence 523:
0 Initial errors
0 on fringe, 0 iterations

Sentence 524:
0 Initial errors
0 on fringe, 0 iterations

Sentence 525:
0 Initial errors
0 on fringe, 0 iterations

Sentence 526:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK konnen)
			(MF auch gleich halb acht)
			(VC sagen)
			(NF sieben uhr sieben uhr funfundzwanzig)[01;31m)[00m
		(DM gut)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja wir konnen auch gleich halb acht sagen sieben uhr sieben uhr funfundzwanzig gut)

Sentence 527:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das teuerste mus es vielleicht nicht sein)
		[01;36m(ADVX[00m [01;31m(DM[00m
			(KON aber)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'ADVX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['KON'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP ja das teuerste mus es vielleicht nicht sein aber)

Sentence 528:
0 Initial errors
0 on fringe, 0 iterations

Sentence 529:
0 Initial errors
0 on fringe, 0 iterations

Sentence 530:
0 Initial errors
0 on fringe, 0 iterations

Sentence 531:
0 Initial errors
0 on fringe, 0 iterations

Sentence 532:
0 Initial errors
0 on fringe, 0 iterations

Sentence 533:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN dienstag)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(NX mittwoch)[01;31m)[00m))
			(LK wurde)
			(MF bei mir sehr gut)
			(VC passen))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NN'], 'mover info': [('ART', (1, 2))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (1, 5), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NN'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP ja der dienstag und mittwoch wurde bei mir sehr gut passen)

Sentence 534:
0 Initial errors
0 on fringe, 0 iterations

Sentence 535:
5 Initial errors
0 on fringe, 3 iterations
3 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(ADVX doch)
				[01;36m(ADJX[00m
					[01;33m(ADVX[00m (ADVX etwas)
					[01;31m(ADJX[00m
						(ADVX sehr) [01;33mADVX)[00m
						(ADJD fruh)[01;31m)[00m[01;36m)[00m))
		(DM oder)
		[01;31m(SIMPX[00m
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADVX', 'ADJD'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ach)
		(SIMPX das ist doch etwas sehr fruh)
		(DM oder)
		[01;31m(SIMPX[00m
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ach)
		(SIMPX das ist doch etwas sehr fruh)
		(DM oder)
		[01;31m(SIMPX[00m
			(VF wann)
			(LK geht)
			(MF denn der zweite zug in der fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'ITJ', 'PWAV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (8, 17), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach das ist doch etwas sehr fruh oder wann geht denn der zweite zug in der fruh)

Sentence 536:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF es)
					(LK wird)
					(MF doch)
					(VC reichen)
					(NF
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(PX
									[01;31m(ADVX[00m
										(ADVX so)
										(ADV etwa)[01;31m)[00m
									(APPR um)
									(NX acht uhr)))
							(VC losfahren wurden))))))
		(SIMPX was meinen sie denn)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': ['APPR', 'NX'], 'parent': 'PX', 'auto preterminal span': (8, 13), 'span': (8, 10), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ich denke es wird doch reichen wenn wir so etwa um acht uhr losfahren wurden was meinen sie denn)

Sentence 537:
13 Initial errors
0 on fringe, 9 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:UNSET move
2 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								[01;31m(ADVX[00m
									(ADV nur)[01;31m)[00m[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				[01;36m(ADVX[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN betragt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ADJX hundert funfunddreisig)
						(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m))) [01;33mPX)[00m
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (38, 39), 'span': (38, 39), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'ADVX')}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								[01;31m(ADVX[00m
									(ADV nur)[01;31m)[00m[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				[01;31m(LK[00m
					(ADVX
						(VVFIN betragt))[01;31m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ADJX hundert funfunddreisig)
						(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m))) [01;33mPX)[00m
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADV'], 'mover info': [('ADVX', (25, 26))], 'old_family': ['ADVX', 'ADVX', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN'), 'start right siblings': ['ADVX', 'ADJX', 'NN'], 'end left siblings': [], 'auto preterminal span': (25, 29), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADV'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				[01;31m(LK[00m
					(ADVX
						(VVFIN betragt))[01;31m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ADJX hundert funfunddreisig)
						(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m))) [01;33mPX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['LK', 'ADJX', 'NN'], 'mover info': [('LK', (38, 39))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': ['KOORD', 'VF'], 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (32, 42), 'movers': ['LK'], 'old_parent': 'SIMPX', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;31m(MF[00m
				(NX
					[01;31m(LK[00m
						(ADVX
							(VVFIN betragt))[01;31m)[00m
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (35, 38))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (32, 42), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(ART der)
					(NN preis))[01;31m)[00m
			(PX
				[01;31m(MF[00m
					(PX fur das einzelzimmer)
					(NX
						[01;31m(LK[00m
							(ADVX
								(VVFIN betragt))[01;31m)[00m
						(ADJX hundert funfunddreisig)
						(NN mark))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(ART der)
					(NN preis))[01;31m)[00m
			(PX
				[01;31m(MF[00m
					(PX fur das einzelzimmer)
					(NX
						[01;31m(LK[00m
							(ADVX
								(VVFIN betragt))[01;31m)[00m
						(ADJX hundert funfunddreisig)
						(NN mark))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['VF', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (32, 33), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KON und)
			[01;31m(VF[00m
				(NX
					(ART der)
					(NN preis))[01;31m)[00m
			(PX
				[01;31m(MF[00m
					(PX fur das einzelzimmer)
					(NX
						[01;31m(LK[00m
							(ADVX
								(VVFIN betragt))[01;31m)[00m
						(ADJX hundert funfunddreisig)
						(NN mark))[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['KON', 'VF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (33, 35), 'left siblings': ['KON'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KON und)
			(NX der preis)
			(PX
				[01;31m(MF[00m
					(PX fur das einzelzimmer)
					(NX
						[01;31m(LK[00m
							(ADVX
								(VVFIN betragt))[01;31m)[00m
						(ADJX hundert funfunddreisig)
						(NN mark))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (35, 42), 'span': (35, 42), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KON und)
			(NX der preis)
			(PX
				(PX fur das einzelzimmer)
				(NX
					[01;31m(LK[00m
						(ADVX
							(VVFIN betragt))[01;31m)[00m
					(ADJX hundert funfunddreisig)
					(NN mark))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (38, 42), 'span': (38, 39), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sehr schon dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen was wurden sie denn vom schloshotel hannover halten es ist etwa nur funf minuten vom hauptbahnhof entfernt und der preis fur das einzelzimmer betragt hundert funfunddreisig mark)

Sentence 538:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX und wie sieht es dann aus)
		(SIMPX
			(LK sollen)
			(MF wir uns vielleicht irgendwelche theaterkarten)
			(VC besorgen)
			(NF
				(SIMPX
					(SIMPX wenn wir schon dort sind)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir bischen kultur)
							(VC mitnehmen))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV schon)) (ADVX (ADV dort))) (VC (VXFIN (VAFIN sind))))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP sehr schon und wie sieht es dann aus sollen wir uns vielleicht irgendwelche theaterkarten besorgen wenn wir schon dort sind das wir bischen kultur mitnehmen)

Sentence 539:
0 Initial errors
0 on fringe, 0 iterations

Sentence 540:
8 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
3 Error:Co-ordination
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF sich irgendwas)
						(VC andert)[01;31m)[00m [01;33mSIMPX)[00m
					(KON oder)
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(NX
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJA nahere)[01;31m)[00m[01;36m)[00m
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF sich irgendwas)
						(VC andert)[01;31m)[00m [01;33mSIMPX)[00m
					(KON oder)
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(NX
									(ADVX nahere)
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'C', 'MF', 'VC'], 'mover info': [('KOORD', (4, 5))], 'old_family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['LV', 'VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					(SIMPX und falls sich irgendwas andert)
					(KON oder)
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(NX
									(ADVX nahere)
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KON', 'LV', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (4, 9)), ('KON', (9, 10))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['SIMPX', 'KON'], 'old_parent': 'SIMPX', 'end right siblings': ['LV', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(SIMPX und falls sich irgendwas andert)
			(KON oder)
			(LV
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(NX
							(ADVX nahere)
							[01;36m(NX[00m
								(NN einzelheiten)[01;36m)[00m))
					(VC wissen)))
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADVX (ADJA nahere))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja finde ich auch und falls sich irgendwas andert oder wenn wir nahere einzelheiten wissen dann kontaktieren wir uns einfach noch mal)

Sentence 541:
0 Initial errors
0 on fringe, 0 iterations

Sentence 542:
0 Initial errors
0 on fringe, 0 iterations

Sentence 543:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hervorragend)
		[01;36m(SIMPX[00m
			[01;36m(NX[00m
				(DM
					[01;31m(VXFIN[00m
						(VVIMP sprich)[01;31m)[00m)[01;36m)[00m
			(NX der erste und zweite september)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'DM', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'NX')}
(TOP
	(TURN
		(DM hervorragend)
		[01;36m(SIMPX[00m
			(DM sprich)
			(NX der erste und zweite september)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(DM (ITJ hervorragend))], 'auto preterminal span': (1, 7), 'span': (1, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP hervorragend sprich der erste und zweite september)

Sentence 544:
0 Initial errors
0 on fringe, 0 iterations

Sentence 545:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX ist in ordnung)
		(SIMPX
			(VF nachdem wir ja im zug auch schon arbeiten konnen)
			[01;36m(SIMPX[00m
				(LK durfte)
				(MF das kein problem)
				(VC sein)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PDS', 'PIAT', 'NN', 'VAINF'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS nachdem)) (MF (NX (PPER wir)) (ADVX (ADV ja)) (PX (APPRART im) (NX (NN zug))) (ADVX (ADV auch)) (ADVX (ADV schon))) (VC (VXINF (VVINF arbeiten)) (VXFIN (VMFIN konnen)))))], 'auto preterminal span': (13, 18), 'span': (13, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP gut ist in ordnung nachdem wir ja im zug auch schon arbeiten konnen durfte das kein problem sein)

Sentence 546:
0 Initial errors
0 on fringe, 0 iterations

Sentence 547:
0 Initial errors
0 on fringe, 0 iterations

Sentence 548:
17 Initial errors
0 on fringe, 12 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK soll)
				(MF sich da drum)
				(VC kummern))[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX (NX[00m
							(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m [01;33m(PX[00m
						[01;31m(PX[00m
							(APPRART vom)
							[01;31m(NX[00m
								(NX kulturleben) [01;33mPX) NX)[00m
								(PX in hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (12, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK soll)
				(MF sich da drum)
				(VC kummern))[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX (NX[00m
							(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK soll)
				(MF sich da drum)
				(VC kummern))[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die)
				(LK soll)
				(MF sich da drum)
				(VC kummern))[01;36m)[00m
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))[01;36m)[00m)
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN werde))) (MF (MF (NX (PPER ich)) (NX (PPER ihnen)) (ADJX (NN neues))) (VC (VXINF (VVINF erzahlen))) (NF (PX (APPRART vom) (NX (NN kulturleben)))) (PX (APPR in) (NX (NE hannover))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV ja)) (ADVX (ADV immer)) (ADVX (ADV noch))) (VC (VXINF (VVINF einigen)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN halten))) (MF (NX (PPER sie)) (PX (PROP davon))))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN werde))) (MF (NX (PPOSAT meiner) (NN sekretarin)) (NX (NN bescheid))) (VC (VXINF (VVINF sagen))))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))[01;36m)[00m)
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (13, 23), 'span': (13, 23), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)[01;31m)[00m
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPOSAT', 'NN', 'NN', 'VVINF', 'PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (0, 6), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADJX'], 'family': ['MF', 'VC', 'NF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'right siblings': ['VC', 'NF', 'PX'], 'parent': 'MF', 'auto preterminal span': (15, 23), 'span': (15, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					[01;36m(NX[00m
						[01;36m(NX[00m
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(APPRART vom)
								(NX kulturleben))[01;31m)[00m[01;36m)[00m
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['NX', 'NX', 'NX', 'NF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [(NF (PX (APPRART vom) (NX (NN kulturleben)))), (PX (APPR in) (NX (NE hannover)))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					[01;36m(NX[00m
						(NX
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
						[01;31m(NF[00m
							(PX
								(APPRART vom)
								(NX kulturleben))[01;31m)[00m[01;36m)[00m
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['NX', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [(PX (APPR in) (NX (NE hannover)))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
						[01;31m(NF[00m
							(PX
								(APPRART vom)
								(NX kulturleben))[01;31m)[00m)
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							(ADJX neues)
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m)
						[01;31m(NF[00m
							(PX
								(APPRART vom)
								(NX kulturleben))[01;31m)[00m)
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK werde)
		(MF meiner sekretarin bescheid)
		(VC sagen)
		(NF die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX neues erzahlen)
						[01;31m(NF[00m
							(PX
								(APPRART vom)
								(NX kulturleben))[01;31m)[00m)
					(PX in hannover))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 21), 'span': (19, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern und dann werde ich ihnen neues erzahlen vom kulturleben in hannover und dann konnen wir uns ja immer noch einigen was halten sie davon)

Sentence 549:
0 Initial errors
0 on fringe, 0 iterations

Sentence 550:
0 Initial errors
0 on fringe, 0 iterations

Sentence 551:
0 Initial errors
0 on fringe, 0 iterations

Sentence 552:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(KON oder)
					(PX [01;33m(PX[00m
						[01;36m(PX[00m
							(ADVX auch)
							[01;31m(PX[00m
								(APPRART am)
								(NX wochenende)[01;31m)[00m[01;36m)[00m
						(NX siebzehnter achtzehnter januar))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m)) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (11, 17))], 'old_family': ['KON', 'PX'], 'start left siblings': ['KON'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 30), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': ['KON', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(PX
			(PX
				[01;36m(PX[00m
					(ADVX auch)
					[01;31m(PX[00m
						(APPRART am)
						(NX wochenende)[01;31m)[00m[01;36m)[00m
				(NX siebzehnter achtzehnter januar))
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPRART', 'NX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['ADVX', 'PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['PX', 'NX'], 'end left siblings': [], 'auto preterminal span': (11, 17), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPRART', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(PX auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK hatte)
		(MF jetzt am vierzehnten und funfzehnten januar zeit)
		[01;31m(NF[00m
			[01;31m(PX[00m
				(KON oder)[01;31m)[00m[01;31m)[00m
		(PX auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (10, 11), 'span': (10, 11), 'left siblings': [], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK hatte)
		(MF jetzt am vierzehnten und funfzehnten januar zeit)
		[01;31m(NF[00m
			(KON oder)[01;31m)[00m
		(PX auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (10, 11), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)

Sentence 553:
10 Initial errors
0 on fringe, 2 iterations
9 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(LK verbleiben)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPRART beim)
					[01;33m(NX[00m (NX achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX
					(APPR bezuglich)
					(NX des verkehrsmittels))[01;31m)[00m [01;33mNX) PX) MF) SIMPX)[00m
			[01;36m(SIMPX[00m
				(VF was)
				(LK haben)
				(MF sie sich da)
				(VC vorgestellt)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPRART', 'NX', 'LV'], 'mover info': [('LV', (8, 11))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['APPRART', 'NX'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(LK verbleiben)
			(MF
				(NX wir)
				(PX
					(APPRART beim)
					(NX
						(NX achtundzwanzigsten und neunundzwanzigsten januar)
						[01;31m(LV[00m
							(PX
								(APPR bezuglich)
								(NX des verkehrsmittels))[01;31m)[00m))))
		(SIMPX was haben sie sich da vorgestellt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar bezuglich des verkehrsmittels was haben sie sich da vorgestellt)

Sentence 554:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(NX ich)
			(ADVX ebenso)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX eben)
			(PX aus zeitgrunden)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX ich)
		(ADVX ebenso)
		[01;31m(PX[00m
			(ADVX eben)
			(PX aus zeitgrunden)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich ebenso eben aus zeitgrunden)

Sentence 555:
50 Initial errors
0 on fringe, 33 iterations
5 Error:NP Attachment
3 Error:Clause Attachment
3 Error:NP Attachment
3 Error:Co-ordination
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Co-ordination
2 Error:PP Attachment
2 Error:PP Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m [01;33m(MF[00m
							[01;31m(MF[00m
								(PX zum zentrum)
								[01;31m(NX[00m
									(NX funfzehn minuten) [01;33mMF)[00m
									[01;36m(VXINF[00m [01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;36m(LK[00m [01;31m(VC[00m [01;33m(SIMPX[00m
								(VXFIN
									(VAFIN hat))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF garage)
				(LK ist)
				(MF [01;33m(MF[00m
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF einzelzimmer)
					(LK kostet)
					[01;31m(MF[00m [01;33m(NX (MF[00m
						(NX
							(ADJX hundert einundfunfzig)
							(NN mark))[01;31m)[00m[01;31m)[00m
				(NX doppelzimmer hundert funf mark) [01;33mMF) NX) MF)[00m[01;36m)[00m[01;36m)[00m
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					[01;36m(MF[00m [01;31m(NX[00m
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m [01;33m(VF (NX[00m
				(NX das doppelzimmer)
				(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot) [01;33mNX) VF)[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (53, 57))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m [01;33m(MF[00m
							[01;31m(MF[00m
								(PX zum zentrum)
								[01;31m(NX[00m
									(NX funfzehn minuten) [01;33mMF)[00m
									[01;36m(VXINF[00m [01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;36m(LK[00m [01;31m(VC[00m [01;33m(SIMPX[00m
								(VXFIN
									(VAFIN hat))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF garage)
				(LK ist)
				(MF [01;33m(MF[00m
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))[01;31m)[00m
			(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark) [01;33mMF)[00m[01;36m)[00m
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					[01;36m(MF[00m [01;31m(NX[00m
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m [01;33m(VF (NX[00m
				(NX das doppelzimmer)
				(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot) [01;33mNX) VF)[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (48, 57))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m [01;33m(MF[00m
							[01;31m(MF[00m
								(PX zum zentrum)
								[01;31m(NX[00m
									(NX funfzehn minuten) [01;33mMF)[00m
									[01;36m(VXINF[00m [01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;36m(LK[00m [01;31m(VC[00m [01;33m(SIMPX[00m
								(VXFIN
									(VAFIN hat))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					[01;36m(MF[00m [01;31m(NX[00m
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m [01;33m(VF (NX[00m
				(NX das doppelzimmer)
				(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot) [01;33mNX) VF)[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'VC', 'new_family': ['NX', 'VXFIN'], 'mover info': [('NX', (32, 33))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (28, 34), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['VXFIN'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								[01;36m(VXINF[00m [01;31m(NX[00m
									(NN laufzeit)[01;31m)[00m[01;36m)[00m
								[01;36m(LK[00m
									(VXFIN [01;33m(SIMPX[00m
										(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					[01;36m(MF[00m [01;31m(NX[00m
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m [01;33m(VF (NX[00m
				(NX das doppelzimmer)
				(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot) [01;33mNX) VF)[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'KON', 'ADVX', 'NX'], 'mover info': [('ADVX', (76, 77))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['NX', 'NX', 'KON'], 'auto preterminal span': (71, 79), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								[01;36m(VXINF[00m [01;31m(NX[00m
									(NN laufzeit)[01;31m)[00m[01;36m)[00m
								[01;36m(LK[00m
									(VXFIN [01;33m(SIMPX[00m
										(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(NX[00m [01;33m(VF (NX[00m
				(NX das doppelzimmer)
				(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot) [01;33mNX) VF)[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'VF'], 'mover info': [('VF', (112, 114))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['LK', 'MF', 'NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								[01;36m(VXINF[00m [01;31m(NX[00m
									(NN laufzeit)[01;31m)[00m[01;36m)[00m
								[01;36m(LK[00m
									(VXFIN [01;33m(SIMPX[00m
										(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXINF', 'VXFIN'], 'auto preterminal span': (32, 33), 'span': (32, 33), 'subtrees': ['NN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VXINF')}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								(VXINF laufzeit)
								[01;36m(LK[00m
									(VXFIN [01;33m(SIMPX[00m
										(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(ADVX also)
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (61, 66))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'NX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 127), 'movers': ['ADJX'], 'old_parent': 'TURN', 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;33m(SIMPX[00m (SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				[01;31m(R[00m [01;33m(R[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR) PX) SIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								(VXINF laufzeit)
								[01;36m(LK[00m
									(VXFIN [01;33m(SIMPX[00m
										(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'MVC', 'VF', 'LK', 'MF'], 'mover info': [('KON', (27, 28)), ('MVC', (28, 34))], 'old_family': ['MVC', 'KON', 'MVC'], 'start left siblings': ['MVC'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 127), 'movers': ['KON', 'MVC'], 'old_parent': 'FKOORD', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;36m(SIMPX[00m
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX das maritimhotel)
						[01;33m(PX[00m (PX in hannover)[01;31m)[00m
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;36m(LK[00m
						(VXFIN [01;33m(SIMPX[00m
							(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'mover info': [('PX', (17, 19))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX'], 'end left siblings': ['SIMPX', 'SIMPX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX das maritimhotel)
					[01;33m(PX[00m (PX in hannover)[01;31m)[00m
				(R
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m[01;31m)[00m)[01;31m)[00m) [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;36m(LK[00m
						(VXFIN [01;33m(SIMPX[00m
							(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'R'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (19, 27), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['R'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel)
				(PX
					(PX in hannover)
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;36m(LK[00m
						(VXFIN [01;33m(SIMPX[00m
							(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['VXINF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN',), 'right siblings': [], 'left siblings': [(VXINF (NN laufzeit))], 'auto preterminal span': (33, 34), 'span': (33, 34), 'parent': 'VC', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel)
				(PX
					(PX in hannover)
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX
			(VF garage)
			(LK ist)
			(MF
				(MF
					(ADVX naturlich)
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX nicht)
						(ADVX nicht)[01;36m)[00m
					(ADVX unbedingt)
					(ADJX so wichtig))
				(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)))
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKNEG', 'PTKNEG'), 'right siblings': [(ADVX (ADV unbedingt)), (ADJX (ADVX (ADV so)) (ADJD wichtig))], 'left siblings': [(ADVX (ADV naturlich)), (ADVX (ADV dann))], 'auto preterminal span': (43, 45), 'span': (43, 45), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel)
				(PX
					(PX in hannover)
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX
						(ART das)
						(NX hotel loccumerhof))[01;36m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': [(ADVX (ADV anscheinend)), (ADJX (ADVX (ADV besonders)) (ADJD gunstig))], 'left siblings': [], 'auto preterminal span': (115, 118), 'span': (115, 118), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel)
				(PX
					(PX in hannover)
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 27), 'span': (19, 27), 'left siblings': ['SIMPX', 'PX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			(NX das maritimhotel)
			(PX
				(PX in hannover)
				(R
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['MF', 'VC'], 'family': ['MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (24, 27), 'span': (24, 27), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX
			(SIMPX die mus ich mit ihnen jetzt noch absprechen)
			(PX zum einen)
			(NX das maritimhotel)
			(PX
				(PX in hannover)
				(R
					(C welches)
					[01;31m(FKOORD[00m
						(MF am bahnhof)
						(VC liegt)[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'R', 'auto preterminal span': (23, 27), 'span': (24, 27), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		[01;31m(SIMPX[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					(VXINF laufzeit)
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF dort eine cafeteria)[01;31m)[00m
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'MVC', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (27, 39), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		[01;31m(MVC[00m
			(MF zum zentrum funfzehn minuten)
			[01;31m(VC[00m
				(VXINF laufzeit)
				[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
		(VF es) [01;33mSIMPX)[00m
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MVC', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (28, 34), 'left siblings': ['SIMPX', 'SIMPX', 'KON'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		[01;31m(VC[00m
			(VXINF laufzeit)
			[01;33m(SIMPX[00m (LK hat)[01;31m)[00m
		(VF es) [01;33mSIMPX)[00m
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VXINF', 'LK'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VC', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (32, 34), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF'], 'label': 'VC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		[01;36m(SIMPX[00m
			(LK hat)
			(VF es)[01;36m)[00m
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'VF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER'), 'right siblings': [(LK (VXFIN (VVFIN gibt))), (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria))), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht))) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))) (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)) (KON und) (MF (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))), (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (NF (ADVX (ADV anscheinend)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar))))), (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))), (NX (KON und) (VF (NX (NX (ART das) (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))))), (SIMPX (LK (VXFIN (VAFIN ware))) (MF (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))) (PX (APPRART zum) (NX (PIS einen))) (NX (ART das) (NE maritimhotel)) (PX (PX (APPR in) (NX (NE hannover))) (R (C (NX (PRELS welches))) (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))), (KON und), (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (VXINF (NN laufzeit))], 'auto preterminal span': (33, 35), 'span': (33, 35), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(MF ebenfalls eine garage)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (69, 79), 'span': (71, 79), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX
			(VF es)
			(LK gibt)
			[01;31m(NX[00m
				(NX eine bar)
				(NX ein restaurant)
				(KON und)
				(MF ebenfalls eine garage)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'KON', 'MF'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (69, 79), 'span': (71, 79), 'left siblings': ['VF', 'LK'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;33m(SIMPX[00m (VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (79, 88), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		[01;33m(SIMPX[00m (VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		[01;31m(NF[00m
			(ADVX
				(ADV anscheinend))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (87, 88), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		[01;33m(SIMPX[00m (VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mSIMPX)[00m
			(VF es)
			(LK gibt)
			[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer) [01;33mMF) NX)[00m
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m [01;33mMF) NX)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (88, 98), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		[01;36m(SIMPX[00m
			(VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			(ADVX anscheinend)
			(KOORD und)[01;36m)[00m
		(VF es)
		(LK gibt)
		[01;36m(NX[00m
			[01;36m(MF[00m
				[01;33m(NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF das einzelzimmer) [01;33mMF) NX)[00m
					(LK kostet)
					(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'MF', 'ADVX', 'KOORD'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON'), 'right siblings': [(VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt))), (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar)))), (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))), (NX (KON und) (VF (NX (NX (ART das) (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))))), (SIMPX (LK (VXFIN (VAFIN ware))) (MF (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))) (PX (APPRART zum) (NX (PIS einen))) (NX (ART das) (NE maritimhotel)) (PX (PX (APPR in) (NX (NE hannover))) (R (C (NX (PRELS welches))) (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))), (KON und), (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (VXINF (NN laufzeit)), (SIMPX (LK (VXFIN (VAFIN hat))) (VF (NX (PPER es)))), (LK (VXFIN (VVFIN gibt))), (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria))), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht))) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))) (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)) (KON und) (MF (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))), (KOORD (KON und))], 'auto preterminal span': (80, 89), 'span': (80, 89), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		[01;36m(NX[00m
			[01;36m(MF[00m
				[01;33m(NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF das einzelzimmer) [01;33mMF) NX)[00m
					(LK kostet)
					(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [(NX (KON und) (VF (NX (NX (ART das) (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))))), (SIMPX (LK (VXFIN (VAFIN ware))) (MF (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))) (PX (APPRART zum) (NX (PIS einen))) (NX (ART das) (NE maritimhotel)) (PX (PX (APPR in) (NX (NE hannover))) (R (C (NX (PRELS welches))) (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))), (KON und), (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (VXINF (NN laufzeit)), (SIMPX (LK (VXFIN (VAFIN hat))) (VF (NX (PPER es)))), (LK (VXFIN (VVFIN gibt))), (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria))), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht))) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))) (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)) (KON und) (MF (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))), (KOORD (KON und)), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (ADVX (ADV anscheinend)) (KOORD (KON und))), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 106), 'span': (91, 106), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		[01;36m(NX[00m
			(MF [01;33m(NX (MF[00m
				(MF ein schwimm und dampfbad und eine pianobar)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF das einzelzimmer) [01;33mMF) NX)[00m
					(LK kostet)
					(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m)[01;36m)[00m
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [(NX (KON und) (VF (NX (NX (ART das) (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))))), (SIMPX (LK (VXFIN (VAFIN ware))) (MF (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))) (PX (APPRART zum) (NX (PIS einen))) (NX (ART das) (NE maritimhotel)) (PX (PX (APPR in) (NX (NE hannover))) (R (C (NX (PRELS welches))) (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))), (KON und), (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (VXINF (NN laufzeit)), (SIMPX (LK (VXFIN (VAFIN hat))) (VF (NX (PPER es)))), (LK (VXFIN (VVFIN gibt))), (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria))), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht))) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))) (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)) (KON und) (MF (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))), (KOORD (KON und)), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (ADVX (ADV anscheinend)) (KOORD (KON und))), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 106), 'span': (91, 106), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		(NX [01;33m(NX (MF[00m
			(MF
				(MF ein schwimm und dampfbad und eine pianobar)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF das einzelzimmer) [01;33mMF) NX)[00m
					(LK kostet)
					(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (91, 106), 'span': (98, 106), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		(NX
			(MF
				[01;36m(MF[00m
					[01;36m(NX[00m
						(MF ein schwimm und dampfbad und eine pianobar)
						(KOORD und)
						(VF das einzelzimmer)[01;36m)[00m[01;36m)[00m
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)))
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'KOORD', 'VF'], 'family': ['NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN kostet))), (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))], 'left siblings': [], 'auto preterminal span': (91, 101), 'span': (91, 101), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		(NX
			(MF
				[01;36m(MF[00m
					(NX
						(MF ein schwimm und dampfbad und eine pianobar)
						(KOORD und)
						(VF das einzelzimmer))[01;36m)[00m
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)))
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN kostet))), (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))], 'left siblings': [], 'auto preterminal span': (91, 101), 'span': (91, 101), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		(NX ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark)
		[01;31m(NX[00m
			(KON und)
			(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (106, 114), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(VXINF laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria)
		(SIMPX garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(SIMPX das hotel loccumerhof ist gleich beim bahnhof anscheinend und)
		(VF es)
		(LK gibt)
		(NX ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark)
		(KON und)
		(VF das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'NX', 'KON', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (114, 127), 'left siblings': ['SIMPX', 'SIMPX', 'KON', 'MF', 'VXINF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'KOORD', 'SIMPX', 'VF', 'LK', 'NX', 'KON', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP jetzt habe ich mir auch schon einige hotelangebote herausgesucht die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage und das hotel loccumerhof ist gleich beim bahnhof anscheinend und es gibt ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig weil es gleich beim bahnhof liegt)

Sentence 556:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM in ordnung)
		(DM herr nishimoto)
		(SIMPX
			(LK verbleiben)
			(MF
				(NX wir)
				(ADVX dann)
				[01;31m(PX[00m
					(APPR bei)
					(NX unserm termin im januar)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 12), 'span': (7, 12), 'left siblings': ['NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP in ordnung herr nishimoto verbleiben wir dann bei unserm termin im januar)

Sentence 557:
0 Initial errors
0 on fringe, 0 iterations

Sentence 558:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau heinicke)
		[01;31m(SIMPX[00m
			(VF wie wir bereits ausgemacht haben)
			(LK wollten)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(APPR auf)
						[01;33m(NX[00m (NX eine eineinhalbtagige geschaftsreise)[01;31m)[00m
					(PX nach hamburg)[01;36m)[00m) [01;33mNX)[00m
			(VC fahren)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (15, 17))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau heinicke)
		[01;31m(SIMPX[00m
			(VF wie wir bereits ausgemacht haben)
			(LK wollten)
			(MF wir auf eine eineinhalbtagige geschaftsreise nach hamburg)
			(VC fahren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'VVPP', 'VAFIN', 'VMFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 18), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP guten tag frau heinicke wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)

Sentence 559:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(P[00m [01;33m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
				(KON und)
				(SIMPX in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (1, 32), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;33m(P[00m (SIMPX da wurde mir der letzte termin am besten passen)
		(KOUS weil)
		[01;31m(SIMPX[00m
			(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
			(KON und)
			(SIMPX in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei)[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOUS', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (11, 32), 'left siblings': ['DM', 'SIMPX', 'KOUS'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;36m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			(SIMPX am vierzehnten und funfzehnten ist eine messe)[01;36m)[00m
		(KON und)
		(SIMPX in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei)
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'KON', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN'), 'right siblings': [(KON und), (SIMPX (VF (PX (APPR in) (NX (ART der) (ADJX (ADJA letzten)) (NN januarwoche)))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles)) (ADJX (ADJD frei)))), (DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV doch))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (PX (APPRART am) (NX (NX (NN mittwoch)) (KON und) (NX (NN donnerstag)))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXFIN (VVFIN fahren))))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 18), 'span': (1, 18), 'parent': 'TURN', 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)

Sentence 560:
15 Initial errors
0 on fringe, 12 iterations
3 Error:VP Attachment
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					[01;36m(NX[00m
						[01;36m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover)[01;36m)[00m[01;36m)[00m
					(PX von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							[01;36m(VC[00m
								(VXINF
									(VVINF fahren))[01;36m)[00m
							[01;31m(VC[00m
								(VXINF
									(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:VP Attachment
{'new_parent': 'VC', 'new_family': ['VXINF', 'VXINF'], 'mover info': [('VXINF', (43, 44))], 'old_family': ['LK', 'MF', 'VXINF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': [], 'auto preterminal span': (35, 45), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'LKMVC', 'POS confusion': ('VVINF', 'VVINF'), 'added and moved': True, 'end right siblings': ['VXINF'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					[01;36m(NX[00m
						[01;36m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover)[01;36m)[00m[01;36m)[00m
					(PX von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF
						(VC
							[01;36m(VC[00m
								(VXINF
									(VVINF fahren))[01;36m)[00m
							(VXINF fliegen)))) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'KOORD', 'VF', 'FKOORD'], 'mover info': [('PX', (29, 32))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 68), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['KOORD', 'VF', 'FKOORD'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;36m(NX[00m
					(MF
						(NX viereinhalb stunden)
						(PX bis hannover))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF
						(VC
							[01;36m(VC[00m
								(VXINF
									(VVINF fahren))[01;36m)[00m
							(VXINF fliegen)))) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover)))))], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen)))))))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;36m(NX[00m
					(MF
						(NX viereinhalb stunden)
						(PX bis hannover))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF
						(VC
							[01;36m(VC[00m
								(VXINF
									(VVINF fahren))[01;36m)[00m
							(VXINF fliegen)))) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER er))), (LK (VXFIN (VVFIN braucht)))], 'auto preterminal span': (25, 29), 'span': (25, 29), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(NX viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF
						(VC
							[01;36m(VC[00m
								(VXINF
									(VVINF fahren))[01;36m)[00m
							(VXINF fliegen)))) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VC', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(VXINF (VVINF fliegen))], 'left siblings': [], 'auto preterminal span': (43, 44), 'span': (43, 44), 'parent': 'VC', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(NX viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF fahren fliegen)) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER'), 'right siblings': [(NX (PRF sich)), (NX (PDS das))], 'left siblings': [], 'auto preterminal span': (53, 55), 'span': (53, 55), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(NX viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF fahren fliegen)) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (11, 29), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		[01;31m(SIMPX[00m
			(VF er)
			(LK braucht)
			(NX viereinhalb stunden bis hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF fahren fliegen)) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (23, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(NX viereinhalb stunden bis hannover)
		[01;31m(SIMPX[00m
			(PX von munchen aus)
			[01;33m(SIMPX[00m (KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LKMVC
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VXINF fahren fliegen)) [01;33mSIMPX)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['PX', 'KOORD', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (29, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(NX viereinhalb stunden bis hannover)
		(PX von munchen aus)
		[01;33m(SIMPX[00m (KOORD und)
		(VF das flugzeug)
		[01;31m(FKOORD[00m
			(LKMVC
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VXINF fahren fliegen)) [01;33mSIMPX)[00m
			(KON und)
			(LKM braucht siebzig minuten)[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'PX', 'KOORD', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (35, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'PX', 'KOORD', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(NX viereinhalb stunden bis hannover)
		(PX von munchen aus)
		[01;36m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			(LKMVC
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VXINF fahren fliegen))[01;36m)[00m
		(KON und)
		(LKM braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LKMVC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'PX', 'SIMPX', 'KON', 'LKM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS wie)) (MF (NX (NX (PPER sie)) (NX (PPER es))) (NX (PRF sich)) (NX (PDS das))) (VC (VXINF (VVPP vorgestellt)) (VXFIN (VAFIN haben)))))), (SIMPX (KOORD (KON aber)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV doch)) (ADVX (ADV eher)) (PX (APPR fur) (NX (ART einen) (NN flug)))) (VC (VXINF (VVINF pladieren))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (PRF mir)) (ADVX (ADV da)) (NX (PIAT einige) (NX (NX (NN zugverbindungen)) (KON und) (NX (NN fluge))))) (VC (VXINF (VVINF geben)) (VXINF (VVINF lassen)))), (SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen))))))), (KOORD (KON und)), (VF (NX (PPER er))), (LK (VXFIN (VVFIN braucht))), (NX (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover))))), (PX (APPR von) (NX (NE munchen)) (APZR aus))], 'auto preterminal span': (32, 45), 'span': (32, 45), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(NX viereinhalb stunden bis hannover)
		(PX von munchen aus)
		(SIMPX
			(KOORD und)
			(VF das flugzeug)
			(LKMVC
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VXINF fahren fliegen)))
		(KON und)
		(LKM braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['ADJX', 'PX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (36, 43), 'span': (36, 43), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)

Sentence 561:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV dieses letzte hotel)
			(VF das)
			(LK hat)
			(MF
				(NX mich)
				(ADVX auch)
				[01;36m(PX[00m [01;31m(ADJX[00m
					(PTKA am)
					[01;36m(NX[00m
						(ADJD meisten)[01;36m)[00m[01;31m)[00m[01;36m)[00m)
			(VC interessiert))
		(SIMPX und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)))
Step:Different label
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (9, 11), 'span': (9, 11), 'subtrees': ['PTKA', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKA', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV dieses letzte hotel)
			(VF das)
			(LK hat)
			(MF
				(NX mich)
				(ADVX auch)
				(PX
					(PTKA am)
					[01;36m(NX[00m
						(ADJD meisten)[01;36m)[00m))
			(VC interessiert))
		(SIMPX und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PTKA', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PTKA am)], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja also dieses letzte hotel das hat mich auch am meisten interessiert und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)

Sentence 562:
0 Initial errors
0 on fringe, 0 iterations

Sentence 563:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				[01;36m(DM[00m
					(NX
						(NE krings))[01;36m)[00m
				(ADVX hier)[01;31m)[00m[01;31m)[00m
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [(ADVX (ADV hier))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(DM krings)
				(ADVX hier)[01;31m)[00m[01;31m)[00m
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:Unary
{'subtrees': ['DM', 'ADVX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'ADV'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (2, 4), 'span': (2, 4), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		[01;31m(DM[00m
			(DM krings)
			(ADVX hier)[01;31m)[00m
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NE', 'ADV', 'PPER', 'VAFIN', 'ART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM krings)
		(ADVX hier)
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 30), 'span': (25, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag krings hier ich habe eine frage vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover und ich wurde gern einen tag vorher am dreiundzwanzigsten anreisen)

Sentence 564:
0 Initial errors
0 on fringe, 0 iterations

Sentence 565:
0 Initial errors
0 on fringe, 0 iterations

Sentence 566:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(DM vielen dank)
		[01;36m(NX[00m
			(DM
				(ITJ tschus))[01;36m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [(DM (ITJ gut)), (DM (NX (PIDAT vielen) (NN dank)))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut vielen dank tschus)

Sentence 567:
0 Initial errors
0 on fringe, 0 iterations

Sentence 568:
6 Initial errors
0 on fringe, 2 iterations
5 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(VC zu empfehlen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX acht uhr dreisig))[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF sie)
				(LK kamen)
				(VC an)
				[01;31m(NF[00m [01;33m(NF[00m
					(PX in hannover)
					[01;33m(PX[00m (PX um ein uhr)[01;31m)[00m[01;31m)[00m
			(ADVX etwa)[01;36m)[00m)) [01;33mPX) NF)[00m
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX', 'ADVX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'ADVX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['PX', 'PX'], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(VC zu empfehlen)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX acht uhr dreisig))[01;31m)[00m)
		(SIMPX und sie kamen an in hannover um ein uhr etwa)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (5, 9), 'left siblings': ['VF', 'LK', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann ware zu empfehlen um acht uhr dreisig und sie kamen an in hannover um ein uhr etwa)

Sentence 569:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM kleinen moment)
		(SIMPX
			(VF welche preiskategorie)
			(LK sollte)
			(MF
				(NX das)
				[01;36m(ADJX[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
			(VC sein))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP ja kleinen moment welche preiskategorie sollte das ungefahr sein)

Sentence 570:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF ganz in der nahe vom bahnhof)[01;31m)[00m
		(SIMPX das ist wohl am angenehmsten)
		(SIMPX
			(VF das)
			(VXFIN ist)
			(LK liegt)
			[01;36m(PX[00m
				(MF
					(ADVX so)
					[01;31m(PX[00m
						(APPR zwischen)
						(NX funfundachtzig und einhundert dreisig mark)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (23, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF ganz in der nahe vom bahnhof)[01;31m)[00m
		(SIMPX das ist wohl am angenehmsten)
		(SIMPX das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PDS', 'VAFIN', 'ADV', 'PTKA', 'ADJD', 'PDS', 'VAFIN', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (7, 15), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof das ist wohl am angenehmsten das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)

Sentence 571:
0 Initial errors
0 on fringe, 0 iterations

Sentence 572:
15 Initial errors
0 on fringe, 11 iterations
3 Error:Co-ordination
2 Error:NP Internal Structure
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(NE gero)[01;36m)[00m
						[01;36m(NX[00m
							(NE muller)[01;36m)[00m[01;31m)[00m
					(PX aus koln)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF ich)
			[01;31m(FKOORD[00m
				[01;36m(FKOORD[00m [01;31m(LKM[00m
					(LK plane)
					[01;36m(NX[00m
						(MF
							[01;36m(MF[00m
								(NX
									(NX eine geschaftsreise)
									(PX nach hannover))[01;36m)[00m
							(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'LKMVCN'], 'mover info': [('KON', (17, 18)), ('LKMVCN', (18, 31))], 'old_family': ['LKM', 'KON', 'LKMVCN'], 'start left siblings': ['LKM'], 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['KON', 'LKMVCN'], 'old_parent': 'FKOORD', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(NE gero)[01;36m)[00m
						[01;36m(NX[00m
							(NE muller)[01;36m)[00m[01;31m)[00m
					(PX aus koln)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								[01;36m(MF[00m
									(NX
										(NX eine geschaftsreise)
										(PX nach hannover))[01;36m)[00m
								(NX anfang juli))[01;36m)[00m[01;31m)[00m))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NE', 'NX', 'PX'], 'mover info': [('NE', (5, 6))], 'old_family': ['NE', 'NE'], 'start left siblings': [], 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'start right siblings': ['NE'], 'end left siblings': [], 'auto preterminal span': (5, 9), 'movers': ['NE'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NE gero)[01;36m)[00m
					(NX muller)
					(PX aus koln)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								[01;36m(MF[00m
									(NX
										(NX eine geschaftsreise)
										(PX nach hannover))[01;36m)[00m
								(NX anfang juli))[01;36m)[00m[01;31m)[00m))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (6, 7)), ('PX', (7, 9))], 'old_family': ['NE', 'NX', 'PX'], 'start left siblings': ['NE'], 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (5, 9), 'movers': ['NX', 'PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								[01;36m(MF[00m
									(NX
										(NX eine geschaftsreise)
										(PX nach hannover))[01;36m)[00m
								(NX anfang juli))[01;36m)[00m[01;31m)[00m))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NN anfang)) (NX (NN juli)))], 'left siblings': [], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(MF eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN plane)))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'LKM', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (FKOORD (LKM (LK (VXFIN (VVFIN plane))) (NX (MF (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))) (NX (NX (NN anfang)) (NX (NN juli))))))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m))
			[01;36m(SIMPX[00m
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['KOORD', 'LKMVCN'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (FKOORD (LKM (LK (VXFIN (VVFIN plane))) (NX (MF (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))) (NX (NX (NN anfang)) (NX (NN juli))))))))], 'auto preterminal span': (17, 31), 'span': (17, 31), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (3, 9), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(VF hier)
		(LK ist)
		[01;31m(MF[00m
			(NX gero)
			(NX muller)
			(PX aus koln)[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (5, 9), 'left siblings': ['DM', 'DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(VF hier)
		(LK ist)
		(NX gero)
		(NX muller)
		(PX aus koln)
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:Unary
{'subtrees': ['LK', 'NX'], 'family': ['LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (10, 17), 'span': (10, 17), 'left siblings': [], 'label': 'LKM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(VF hier)
		(LK ist)
		(NX gero)
		(NX muller)
		(PX aus koln)
		(SIMPX
			(SIMPX ich plane eine geschaftsreise nach hannover anfang juli)
			(SIMPX
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 31), 'span': (18, 31), 'left siblings': ['KOORD'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja guten tag hier ist gero muller aus koln ich plane eine geschaftsreise nach hannover anfang juli und wurde sie bitten mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)

Sentence 573:
6 Initial errors
0 on fringe, 3 iterations
4 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(NX der zug)
					(PX hier in bonn)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m[01;31m)[00m
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (12, 17))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 44), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(NX der zug)
					(PX hier in bonn)[01;31m)[00m[01;31m)[00m)
		(SIMPX der fahrt um acht uhr neununddreisig ab)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'NE'), 'right siblings': [], 'parent': 'LV', 'auto preterminal span': (12, 17), 'span': (12, 17), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)
			[01;31m(LV[00m
				(NX der zug)
				(PX hier in bonn)[01;31m)[00m)
		(SIMPX der fahrt um acht uhr neununddreisig ab)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 17), 'span': (12, 17), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'LV', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich habe mich ja ich habe mich da auch schon erkundigt der zug hier in bonn der fahrt um acht uhr neununddreisig ab und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen konnten sie mir da was reservieren)

Sentence 574:
28 Initial errors
0 on fringe, 24 iterations
4 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m [01;33mMF)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(MF[00m
						(ART den)
						(NX ende) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							[01;31m(NX[00m
								[01;36m(NX[00m
									(ART das)[01;36m)[00m
								[01;36m(NX[00m
									(NN [01;33m(NX[00m ende)[01;36m)[00m[01;31m)[00m
							(NX der abreise)[01;31m)[00m) [01;33mNX)[00m
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (27, 28))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (27, 31), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m [01;33mMF)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(MF[00m
						(ART den)
						(NX ende) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'DM'], 'mover info': [('DM', (13, 14))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 46), 'movers': ['DM'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(MF[00m
						(ART den)
						(NX ende) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(MF[00m
						(ART den)
						(NX ende) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['ART', 'NX'], 'family': ['C', 'MF', 'ART', 'PWS', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(ART der), (PWS was), (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [(C (NX (PWS was)))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['C', 'MF', 'NX', 'PWS', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(PWS was), (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [(C (NX (PWS was))), (MF (ART den) (NX (NN ende)))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['C', 'MF', 'NX', 'NX', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [(C (NX (PWS was))), (MF (ART den) (NX (NN ende))), (NX (ART der))], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					[01;36m(C[00m
						(NX
							(PWS was)) [01;33mSIMPX)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'NX', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [(C (NX (PWS was))), (MF (ART den) (NX (NN ende))), (NX (ART der))], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (NX (NN ende)) (NX (ART der) (NN abreise)))], 'left siblings': [], 'auto preterminal span': (27, 28), 'span': (27, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': [(ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))))), (SIMPX (KOORD (KON und)) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (DM (ADVX (ADV also))))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher))) (NF (SIMPX (C (NX (PWS was))) (MF (ART den) (NX (NN ende))) (NX (ART der)) (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LKM nehme ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (2, 10), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		[01;31m(NF[00m
			(SIMPX
				(VF dann)
				(LKM nehme ich das))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (6, 10), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VMFIN', 'PPER', 'ADV'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (10, 14), 'span': (10, 11), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		[01;31m(SIMPX[00m
			(KON und)
			[01;33m(LKMVC[00m (LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt) [01;33mLKMVC)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['KON', 'LK', 'MF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (10, 14), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		[01;36m(LKMVC[00m
			(LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)
			(DM wie gesagt)[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'DM'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher))) (NF (SIMPX (C (NX (PWS was))) (MF (ART den) (NX (NN ende))) (NX (ART der)) (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging)))))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))), (KON und)], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'TURN', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC
			(LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)
			(DM wie gesagt))
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (12, 14), 'span': (13, 14), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(MF den ende) [01;33mSIMPX)[00m
					(NX der) [01;33mSIMPX)[00m
					(C was) [01;33mSIMPX)[00m
					(MF das ende der abreise)
					(VC anging)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (16, 32), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(PWS was)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(C was) [01;33mSIMPX)[00m
				(MF das ende der abreise)
				(VC anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (22, 23), 'span': (22, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(PWS was)[01;31m)[00m [01;33mSIMPX)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(C was) [01;33mSIMPX)[00m
				(MF das ende der abreise)
				(VC anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['C', 'MF', 'NX', 'C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': ['MF', 'NX', 'C', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (22, 32), 'span': (22, 23), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(PWS was) [01;33mSIMPX)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(C was) [01;33mSIMPX)[00m
				(MF das ende der abreise)
				(VC anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'VF', 'LK', 'MF', 'NF', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (22, 32), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;33m(SIMPX (SIMPX (SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(SIMPX[00m
			(PWS was) [01;33mSIMPX)[00m
			(MF den ende) [01;33mSIMPX)[00m
			(NX der) [01;33mSIMPX)[00m
			(C was) [01;33mSIMPX)[00m
			(MF das ende der abreise)
			(VC anging)[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['PWS', 'MF', 'NX', 'C', 'MF', 'VC'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'VF', 'LK', 'MF', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (22, 32), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF ich)
						(LK war)
						(MF noch nicht ganz sicher)
						(PWS was)[01;36m)[00m
					(MF den ende)[01;36m)[00m
				(NX der)[01;36m)[00m
			(C was)[01;36m)[00m
		(MF das ende der abreise)
		(VC anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'PWS'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'MF', 'NX', 'C', 'MF', 'VC', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS'), 'right siblings': [(MF (ART den) (NX (NN ende))), (NX (ART der)), (C (NX (PWS was))), (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))), (KON und), (LKMVC (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV also))) (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))))], 'auto preterminal span': (16, 23), 'span': (16, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					(SIMPX ich war noch nicht ganz sicher was)
					(MF den ende)[01;36m)[00m
				(NX der)[01;36m)[00m
			(C was)[01;36m)[00m
		(MF das ende der abreise)
		(VC anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'MF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'NX', 'C', 'MF', 'VC', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN'), 'right siblings': [(NX (ART der)), (C (NX (PWS was))), (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))), (KON und), (LKMVC (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV also))) (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))))], 'auto preterminal span': (16, 25), 'span': (16, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				(SIMPX ich war noch nicht ganz sicher was den ende)
				(NX der)[01;36m)[00m
			(C was)[01;36m)[00m
		(MF das ende der abreise)
		(VC anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'C', 'MF', 'VC', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART'), 'right siblings': [(C (NX (PWS was))), (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))), (KON und), (LKMVC (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV also))) (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))))], 'auto preterminal span': (16, 26), 'span': (16, 26), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KON und)
		(LKMVC kann ich also wie gesagt)
		[01;36m(SIMPX[00m
			(SIMPX ich war noch nicht ganz sicher was den ende der)
			(C was)[01;36m)[00m
		(MF das ende der abreise)
		(VC anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'C'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'LKMVC', 'SIMPX', 'MF', 'VC', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS'), 'right siblings': [(MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))), (KON und), (LKMVC (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV also))) (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))))], 'auto preterminal span': (16, 27), 'span': (16, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gut dann wurde ich sagen dann nehme ich das und kann ich also wie gesagt ich war noch nicht ganz sicher was den ende der was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen und dann)

Sentence 575:
0 Initial errors
0 on fringe, 0 iterations

Sentence 576:
0 Initial errors
0 on fringe, 0 iterations

Sentence 577:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		[01;36m(SIMPX[00m
			[01;36m(PX[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX da wurde ich ihnen von abraten)[01;36m)[00m
		(SIMPX das lohnt sich nicht bis hannover)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(LK mochten)
				(MF sie das)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['PWAV'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'PX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		[01;36m(SIMPX[00m
			(PX wobei)
			(SIMPX da wurde ich ihnen von abraten)[01;36m)[00m
		(SIMPX das lohnt sich nicht bis hannover)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(LK mochten)
				(MF sie das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (29, 30))], 'old_family': ['KOORD', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 33), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		[01;36m(SIMPX[00m
			(PX wobei)
			(SIMPX da wurde ich ihnen von abraten)[01;36m)[00m
		(SIMPX das lohnt sich nicht bis hannover)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX mochten sie das)))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN lohnt))) (MF (NX (PRF sich)) (ADVX (PTKNEG nicht)) (PX (APPR bis) (NX (NE hannover))))), (KOORD (KON oder)), (SIMPX (LK (VXFIN (VMFIN mochten))) (MF (NX (PPER sie)) (NX (PDS das))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN durfte))) (MF (NX (PIAT kein) (NN problem))) (VC (VXINF (VAINF sein)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (ART die) (NN zugverbindungen))) (LK (VXFIN (VAFIN sind))) (MF (ADJX (ADJD wunderbar)))), (SIMPX (VF (ADVX (ADV naturlich))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (ADV auch))) (VC (VXINF (VVINF fliegen))))], 'auto preterminal span': (16, 23), 'span': (16, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(SIMPX wobei da wurde ich ihnen von abraten)
		(SIMPX das lohnt sich nicht bis hannover)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX mochten sie das)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (29, 30), 'left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja das durfte kein problem sein also die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen wobei da wurde ich ihnen von abraten das lohnt sich nicht bis hannover oder mochten sie das)

Sentence 578:
12 Initial errors
0 on fringe, 10 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		[01;31m(SIMPX[00m
			(VF den)
			(LK kann)
			(MF ich ihnen)
			(VC buchen)[01;31m)[00m
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;31m(SIMPX[00m
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						[01;33m(PX[00m (PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX teuer) [01;33mPX) MF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		[01;31m(SIMPX[00m
			(VF den)
			(LK kann)
			(MF ich ihnen)
			(VC buchen)[01;31m)[00m
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;31m(SIMPX[00m
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			[01;31m(VC[00m
				(ADVX
					(VVPP uberlegt))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						[01;33m(PX[00m (PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX teuer) [01;33mPX) MF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'ADJX', 'new_family': ['PX', 'ADJX', 'ADJX', 'ADJX'], 'mover info': [('PX', (30, 35))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 38), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['ADJX', 'ADJX', 'ADJX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		[01;31m(SIMPX[00m
			(VF den)
			(LK kann)
			(MF ich ihnen)
			(VC buchen)[01;31m)[00m
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;31m(SIMPX[00m
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			[01;31m(VC[00m
				(ADVX
					(VVPP uberlegt))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					(NX was)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (2, 7), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;31m(SIMPX[00m
			(LK haben)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			[01;31m(VC[00m
				(ADVX
					(VVPP uberlegt))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					(NX was)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (23, 30), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;31m(MF[00m [01;33m(MF[00m
			(NX sie)
			(ADVX da)
			(ADVX schon)[01;31m)[00m
		[01;31m(VC[00m
			(ADVX
				(VVPP uberlegt))[01;31m)[00m
		[01;31m(NF[00m
			[01;31m(PX[00m
				(APPR in)
				(NX was)[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'MF', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['VC', 'NF', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (24, 27), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;33m(MF[00m (NX sie)
		(ADVX da)
		(ADVX schon)
		[01;31m(VC[00m
			(ADVX
				(VVPP uberlegt))[01;31m)[00m
		[01;31m(NF[00m
			[01;31m(PX[00m
				(APPR in)
				(NX was)[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['NF', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 28), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;33m(MF[00m (NX sie)
		(ADVX da)
		(ADVX schon)
		(ADVX uberlegt)
		[01;31m(NF[00m
			[01;31m(PX[00m
				(APPR in)
				(NX was)[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:Unary
{'subtrees': ['APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWS'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (28, 30), 'span': (28, 30), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;33m(MF[00m (NX sie)
		(ADVX da)
		(ADVX schon)
		(ADVX uberlegt)
		[01;31m(NF[00m
			(APPR in)
			(NX was)[01;31m)[00m
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (28, 30), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;33m(MF[00m (NX sie)
		(ADVX da)
		(ADVX schon)
		(ADVX uberlegt)
		(APPR in)
		(NX was)
		[01;31m(ADJX[00m
			(PX fur eine art von hotel teuer) [01;33mMF)[00m
			(ADJX billig)
			(ADJX zentral)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX', 'ADJX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (30, 38), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(VF den)
		(LK kann)
		(MF ich ihnen)
		(VC buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(LK haben)
		[01;36m(MF[00m
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			(APPR in)
			(NX was)
			(PX fur eine art von hotel teuer)[01;36m)[00m
		(ADJX billig)
		(ADJX zentral)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX', 'PX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'LK', 'MF', 'ADJX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD'), 'right siblings': [(ADJX (ADJD billig)), (ADJX (ADJD zentral))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ naturlich)), (VF (NX (PDS den))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (NX (PPER ihnen))), (VC (VXINF (VVINF buchen))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN schaue))) (MF (ADVX (ADV mal))) (VC (PTKVZ nach))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (NX (PIS was)) (ADJX (ADJD frei)))), (SIMPX (KOORD (KON und)) (VF (PX (PWAV wo))) (LK (VXFIN (VMFIN mochten))) (MF (NX (PPER sie)) (ADVX (ADV denn))) (VC (VXINF (VVINF wohnen)))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (24, 36), 'span': (24, 36), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja naturlich den kann ich ihnen buchen ich schaue mal nach da ist auch noch was frei und wo mochten sie denn wohnen haben sie da schon uberlegt in was fur eine art von hotel teuer billig zentral)

Sentence 579:
9 Initial errors
0 on fringe, 5 iterations
3 Error:NP Internal Structure
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(NX[00m
	(TURN
		(NX
			(ART das)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NE zentralhotel)[01;31m)[00m [01;33mNX)[00m
				(NX kaiserhof)[01;31m)[00m)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		[01;31m(SIMPX[00m
			(LK ist)
			(MF
				(ADVX auch)
				(PX
					(APPR mit)
					(NX
						(NX aufenthaltsraumen)
						(KON und)
						[01;31m(NX[00m
							(NN konferenzraumen)[01;31m)[00m)))
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind)))[01;31m)[00m))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NE'], 'mover info': [('ART', (0, 1))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NE'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(NX das zentralhotel kaiserhof)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		[01;31m(SIMPX[00m
			(LK ist)
			(MF
				(ADVX auch)
				(PX
					(APPR mit)
					(NX
						(NX aufenthaltsraumen)
						(KON und)
						[01;31m(NX[00m
							(NN konferenzraumen)[01;31m)[00m)))
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind)))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADV'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(NX das zentralhotel kaiserhof)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		[01;31m(SIMPX[00m
			(LK ist)
			(MF
				(ADVX auch)
				(PX
					(APPR mit)
					(NX
						(NX aufenthaltsraumen)
						(KON und)
						[01;31m(NX[00m
							(NN konferenzraumen)[01;31m)[00m)))
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							(ADVX geschaftlich)
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind)))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJD', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX das zentralhotel kaiserhof)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		[01;31m(SIMPX[00m
			(LK ist)
			(MF
				(ADVX auch)
				(PX
					(APPR mit)
					(NX
						(NX aufenthaltsraumen)
						(KON und)
						[01;31m(NX[00m
							(NN konferenzraumen)[01;31m)[00m)))
			(NF wenn sie geschaftlich unterwegs sind)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['NX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADJD', 'ADV', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (12, 23), 'left siblings': ['NX', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX das zentralhotel kaiserhof)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(LK ist)
		(MF
			(ADVX auch)
			(PX
				(APPR mit)
				(NX
					(NX aufenthaltsraumen)
					(KON und)
					[01;31m(NX[00m
						(NN konferenzraumen)[01;31m)[00m)))
		(NF wenn sie geschaftlich unterwegs sind)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (15, 18), 'span': (17, 18), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das zentralhotel kaiserhof ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)

Sentence 580:
0 Initial errors
0 on fringe, 0 iterations

Sentence 581:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(DM[00m
						(NX
							(NN frau)
							(NE bartels))[01;36m)[00m
					(PX [01;33m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							(NX
								(NX reiseburo)
								[01;36m(ADJX[00m [01;31m(NX[00m
									(NE zentral)[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(DM[00m
						(NX
							(NN frau)
							(NE bartels))[01;36m)[00m
					(PX [01;33m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							(NX reiseburo zentral) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (9, 11))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (4, 11), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(DM[00m
						(NX
							(NN frau)
							(NE bartels))[01;36m)[00m
					(PX vom reiseburo zentral in hannover)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [(PX (PX (APPRART vom) (NX (NX (NN reiseburo)) (ADJX (NE zentral)))) (PX (APPR in) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (4, 6), 'span': (4, 6), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(DM frau bartels)
					(PX vom reiseburo zentral in hannover)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 11), 'span': (4, 11), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(NX[00m
				(DM frau bartels)
				(PX vom reiseburo zentral in hannover)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 11), 'span': (4, 11), 'left siblings': ['VF', 'LK'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag ich bin frau bartels vom reiseburo zentral in hannover)

Sentence 582:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 18), 'span': (12, 13), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KON und)
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (12, 18), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KON und)
				(VF platze)
				(LK haben)
				(MF die auch noch)[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (12, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			(KON und)
			(VF platze)
			(LK haben)
			(MF die auch noch)
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'MF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (12, 20), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja eines der hotels ist das grandhotel musmann das liegt sehr zentral und platze haben die auch noch sehe ich ja kostet dann einzelzimmer dreihundert funfzig die nacht)

Sentence 583:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX
			[01;31m(PX[00m
				(APPR mit)
				[01;33m(NX[00m (NX bad)[01;31m)[00m
			[01;36m(NX[00m [01;31m(ADVX[00m
				(ADV naturlich)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK soll)
				(MF ich das jetzt fur sie)
				(VC buchen)[01;31m)[00m
			[01;36m(NF[00m
				(ADVX
					(ADV dann))[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'NX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(PX
			[01;31m(PX[00m
				(APPR mit)
				[01;33m(NX[00m (NX bad)[01;31m)[00m
			(NX naturlich)) [01;33mNX)[00m
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK soll)
				(MF ich das jetzt fur sie)
				(VC buchen)[01;31m)[00m
			[01;36m(NF[00m
				(ADVX
					(ADV dann))[01;36m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['PX', 'DM', 'SIMPX', 'ADVX'], 'start left siblings': ['PX', 'DM', 'SIMPX'], 'auto preterminals': ('APPR', 'NN', 'ADV', 'PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 12), 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(PX
			[01;31m(PX[00m
				(APPR mit)
				[01;33m(NX[00m (NX bad)[01;31m)[00m
			(NX naturlich)) [01;33mNX)[00m
		(DM ja)
		(SIMPX
			(LK soll)
			(MF ich das jetzt fur sie)
			(VC buchen)
			[01;36m(NF[00m
				(ADVX
					(ADV dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN soll))), (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (PPER sie)))), (VC (VXINF (VVINF buchen)))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(PX
			[01;31m(PX[00m
				(APPR mit)
				[01;33m(NX[00m (NX bad)[01;31m)[00m
			(NX naturlich)) [01;33mNX)[00m
		(DM ja)
		(SIMPX soll ich das jetzt fur sie buchen dann)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(PX
			(APPR mit)
			[01;36m(NX[00m
				(NX bad)
				(NX naturlich)[01;36m)[00m)
		(DM ja)
		(SIMPX soll ich das jetzt fur sie buchen dann)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPR mit)], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP mit bad naturlich ja soll ich das jetzt fur sie buchen dann)

Sentence 584:
20 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:Co-ordination
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			[01;36m(VF[00m [01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(FKOORD[00m
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK kommen)
						(MF dann am hauptbahnhof)
						(VC an)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						(KON und)
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Different label
{'family': ['VF', 'LK', 'VF'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			(VF sie)[01;31m)[00m
		[01;36m(FKOORD[00m
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK kommen)
						(MF dann am hauptbahnhof)
						(VC an)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						(KON und)
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Different label
{'family': ['LKMVC', 'KON', 'SIMPX', 'KON', 'SIMPX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			(VF sie)[01;31m)[00m
		[01;36m(FKOORD[00m
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Different label
{'family': ['SIMPX', 'FKOORD', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (4, 21), 'span': (4, 21), 'subtrees': ['LKMVC', 'KON', 'SIMPX', 'KON', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'FKOORD')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			(VF sie)[01;31m)[00m
		[01;36m(FKOORD[00m
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m)
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (10, 16), 'span': (10, 16), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			(VF sie)[01;31m)[00m
		[01;36m(FKOORD[00m
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m)
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'LKM'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dreieinhalb stunden)
				(LK fahren)[01;36m)[00m
			(VF sie)[01;31m)[00m
		[01;36m(FKOORD[00m
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				(LKM kommen direkt zum hotel))
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'VF', 'FKOORD', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('VF', (3, 4))], 'old_family': ['VF', 'LK', 'VF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 46), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('PPER', 'PPER'), 'end right siblings': ['FKOORD', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		[01;36m(FKOORD[00m
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				(LKM kommen direkt zum hotel))
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NN', 'NE', 'KON', 'NX'], 'mover info': [('NE', (29, 30)), ('KON', (30, 31))], 'old_family': ['NE', 'KON', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'start right siblings': ['NE'], 'end left siblings': ['NN'], 'auto preterminal span': (28, 32), 'movers': ['NE', 'KON'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		[01;36m(FKOORD[00m
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				(LKM kommen direkt zum hotel))
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					[01;36m(NX[00m
						(NN herr)
						(NE obrowski)[01;36m)[00m
					(KON und)
					(NX oborski))[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET add
{'subtrees': ['LKMVC', 'KON', 'LKMVC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN kommen))) (MF (PX (ADVX (ADV direkt)) (APPRART zum) (NX (NN hotel)))))], 'left siblings': [], 'auto preterminal span': (4, 16), 'span': (4, 16), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		[01;36m(FKOORD[00m
			(FKOORD
				(LKMVC
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
				(KON und)
				(LKM kommen direkt zum hotel))
			(DM ja)[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					[01;36m(NX[00m
						(NN herr)
						(NE obrowski)[01;36m)[00m
					(KON und)
					(NX oborski))[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET add
{'subtrees': ['FKOORD', 'DM'], 'family': ['SIMPX', 'VF', 'FKOORD', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT'), 'right siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN buche))) (MF (NX (PPER ich)) (NX (PDS das)) (PX (APPR fur) (NX (PPER sie))))), (DM (NX (NN herr) (NE obrowski) (KON und) (NX (NE oborski)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (ADVX (ADV nur)) (PX (APPR von) (NX (PPER ihnen))) (ADVX (ADV noch)) (NX (ART die) (NN kontonummer))) (VC (VXINF (VAINF haben))) (NF (NX (KON und) (NX (ART die) (NN formalitaten)))))], 'left siblings': [(SIMPX (VF (NX (ADJX (CARD dreieinhalb)) (NN stunden))) (LK (VXFIN (VVFIN fahren)))), (VF (NX (PPER sie)))], 'auto preterminal span': (4, 22), 'span': (4, 22), 'parent': 'TURN', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD
			(FKOORD
				(LKMVC
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KON und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
				(KON und)
				(LKM kommen direkt zum hotel))
			(DM ja))
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					[01;36m(NX[00m
						(NN herr)
						(NE obrowski)[01;36m)[00m
					(KON und)
					(NX oborski))[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET add
{'subtrees': ['KON', 'LKMVC'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an)))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'LKMVC', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja)
		[01;36m(SIMPX[00m
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					[01;36m(NX[00m
						(NN herr)
						(NE obrowski)[01;36m)[00m
					(KON und)
					(NX oborski))[01;31m)[00m[01;36m)[00m
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM'], 'family': ['SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (ADVX (ADV nur)) (PX (APPR von) (NX (PPER ihnen))) (ADVX (ADV noch)) (NX (ART die) (NN kontonummer))) (VC (VXINF (VAINF haben))) (NF (NX (KON und) (NX (ART die) (NN formalitaten)))))], 'left siblings': [(SIMPX (VF (NX (ADJX (CARD dreieinhalb)) (NN stunden))) (LK (VXFIN (VVFIN fahren)))), (VF (NX (PPER sie))), (FKOORD (FKOORD (LKMVC (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an))) (SIMPX (KON und) (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV ja)) (ADVX (ADV dann)) (NX (ART ein) (NN taxi))) (VC (VXINF (VVINF nehmen)))))) (KON und) (LKM (LK (VXFIN (VVFIN kommen))) (MF (PX (ADVX (ADV direkt)) (APPRART zum) (NX (NN hotel)))))) (DM (PTKANT ja)))], 'auto preterminal span': (22, 32), 'span': (22, 32), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja)
		(SIMPX
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					[01;36m(NX[00m
						(NN herr)
						(NE obrowski)[01;36m)[00m
					(KON und)
					(NX oborski))[01;31m)[00m)
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:NP Internal Structure
{'subtrees': ['NN', 'NE'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('NN', 'NE'), 'right siblings': [(KON und), (NX (NE oborski))], 'left siblings': [], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja)
		(SIMPX
			(SIMPX dann buche ich das fur sie)
			[01;31m(DM[00m
				(NX
					(NX herr obrowski)
					(KON und)
					(NX oborski))[01;31m)[00m)
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 32), 'span': (28, 32), 'left siblings': ['SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dreieinhalb stunden fahren sie kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja dann buche ich das fur sie herr obrowski und oborski und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)

Sentence 585:
13 Initial errors
0 on fringe, 9 iterations
3 Error:Co-ordination
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					[01;33m(NX[00m (ADVX so)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PIDAT vielen)
						(NN dank)[01;31m)[00m [01;33mNX)[00m
					(PX fur die buchung)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KON', 'DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('KON', (7, 8))], 'old_family': ['KON', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'DM', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'DM', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					[01;33m(NX[00m (ADVX so)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PIDAT vielen)
						(NN dank)[01;31m)[00m [01;33mNX)[00m
					(PX fur die buchung)[01;31m)[00m[01;31m)[00m) [01;33mMF)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'DM'], 'mover info': [('DM', (13, 18))], 'old_family': ['KON', 'DM', 'SIMPX', 'DM'], 'start left siblings': ['KON', 'DM', 'SIMPX'], 'auto preterminals': ('KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (7, 18), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					[01;33m(NX[00m (ADVX so)
					[01;31m(DM[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(PIDAT vielen)
								(NN dank)[01;31m)[00m [01;33mNX)[00m
							(PX fur die buchung)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'PIDAT', 'NN'], 'mover info': [('ADVX', (12, 13))], 'old_family': ['NX', 'ADVX', 'DM'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['DM'], 'end left siblings': [], 'auto preterminal span': (11, 18), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PIDAT', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					[01;31m(DM[00m
						[01;31m(NX[00m
							(NX so vielen dank)
							(PX fur die buchung)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN verbleibe))) (MF (NX (PPER ich)) (DM (NX (NX (ADVX (ADV so)) (PIDAT vielen) (NN dank)) (PX (APPR fur) (NX (ART die) (NN buchung)))))))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			(KOORD und)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					[01;31m(DM[00m
						[01;31m(NX[00m
							(NX so vielen dank)
							(PX fur die buchung)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 18), 'span': (9, 18), 'left siblings': ['KOORD', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			(KOORD und)
			(DM ja)
			(VF dann)
			(LK verbleibe)
			(MF
				(NX ich)
				[01;31m(DM[00m
					[01;31m(NX[00m
						(NX so vielen dank)
						(PX fur die buchung)[01;31m)[00m[01;31m)[00m))
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 18), 'span': (12, 18), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			(KOORD und)
			(DM ja)
			(VF dann)
			(LK verbleibe)
			(MF
				(NX ich)
				[01;31m(NX[00m
					(NX so vielen dank)
					(PX fur die buchung)[01;31m)[00m))
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 18), 'span': (12, 18), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX und ja dann verbleibe ich so vielen dank fur die buchung)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['KON', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (18, 21), 'span': (18, 21), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX und ja dann verbleibe ich so vielen dank fur die buchung)
		[01;31m(DM[00m
			(KON und)
			(PX auf wiederhoren)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (18, 21), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'DM', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP dann schicke ich ihnen die quittung zu und ja dann verbleibe ich so vielen dank fur die buchung und auf wiederhoren)

Sentence 586:
10 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF hier)
			(LK spricht)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						[01;36m(MF[00m
							(NE matthias) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(DM[00m
						(NE oborski)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NE'], 'mover info': [('NE', (7, 8))], 'old_family': ['NE', 'NE'], 'start left siblings': ['NE'], 'auto preterminals': ('ADV', 'VVFIN', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (4, 8), 'movers': ['NE'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF hier)
				(LK spricht)
				(MF matthias)[01;36m)[00m
			[01;36m(DM[00m
				(NE oborski)[01;36m)[00m[01;31m)[00m
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'NE', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('NE', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'NE'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 43), 'movers': ['NE'], 'old_parent': 'SIMPX', 'POS confusion': ('NE', 'NE'), 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias)
		[01;36m(DM[00m
			(NE oborski)[01;36m)[00m
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN wollte))) (MF (NX (PPER sie))) (VC (VXINF (VVINF fragen))) (NF (PX (APPR wegen) (NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))))), (SIMPX (VF (ADVX (KON und) (ADV zwar))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (PX (PX (APPRART im) (NX (NN august))) (PX (PX (APPRART vom) (NX (NN funfzehnten))) (PX (APPR bis) (PX (APPRART zum) (NX (NN siebzehnten)))))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VAINF sein)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (VC (PTKVZ vor)) (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN zug))) (PX (PX (APPR ab) (NX (NE bonn))) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fahren))))))], 'left siblings': [(DM (PTKANT ja)), (DM (NX (ADJX (ADJA schonen)) (ADJX (ADJA guten)) (NN tag))), (SIMPX (VF (ADVX (ADV hier))) (LK (VXFIN (VVFIN spricht))) (MF (NX (NE matthias))))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias)
		(DM oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (31, 43), 'span': (34, 35), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias)
		(DM oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(PTKVZ vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (38, 41), 'span': (38, 40), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias)
		(DM oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(PTKVZ vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							(APPR ab)
							[01;36m(NX[00m
								(NX bonn)
								(NX hannover)[01;36m)[00m))
					(VC zu fahren))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'left siblings': [(APPR ab)], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja schonen guten tag hier spricht matthias oborski ich wollte sie fragen wegen einer geschaftsreise nach hannover und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein und ich hatte vor mit dem zug ab bonn hannover zu fahren)

Sentence 587:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(PX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m[01;36m)[00m
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'LV'], 'family': ['PX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [(VF (ADJX (ADVX (PWAV wie)) (ADJD lange))), (LK (VXFIN (VAFIN wird))), (MF (NX (PDS das))), (VC (VXINF (VVINF dauern)))], 'left siblings': [], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(PX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m)
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LV'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': ['LV'], 'parent': 'PX', 'auto preterminal span': (1, 5), 'span': (1, 2), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(PX
				(KON und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m)
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'APPR', 'ART', 'NN', 'PWAV', 'ADJD', 'VAFIN', 'PDS', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (1, 10), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX
			(KON und)
			[01;31m(LV[00m
				(PX
					(APPR mit)
					(NX der zugverbindung))[01;31m)[00m)
		(VF wie lange)
		(LK wird)
		(MF das)
		(VC dauern)))
Step:Unary
{'subtrees': ['PX'], 'family': ['KON', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['KON'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und mit der zugverbindung wie lange wird das dauern)

Sentence 588:
6 Initial errors
0 on fringe, 6 iterations
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NE matthias)[01;31m)[00m
			[01;36m(VF[00m
				(PX
					(APPR mit)
					(NX t t h))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'BS', 'BS', 'BS'), 'right siblings': [], 'left siblings': [(NX (NE matthias))], 'auto preterminal span': (14, 18), 'span': (14, 18), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NE matthias)[01;31m)[00m
			(VF mit t t h)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX'], 'family': ['DM', 'NX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NE matthias)[01;31m)[00m
			(VF mit t t h)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': True, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (6, 13), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		(BS o)
		(BS b)
		(BS o)
		(BS r)
		(BS s)
		(BS k)
		(BS i)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NE matthias)[01;31m)[00m
			(VF mit t t h)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'VF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'APPR', 'BS', 'BS', 'BS'), 'right siblings': ['VF'], 'parent': 'NX', 'auto preterminal span': (13, 18), 'span': (13, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		(BS o)
		(BS b)
		(BS o)
		(BS r)
		(BS s)
		(BS k)
		(BS i)
		[01;31m(NX[00m
			(NE matthias)
			(VF mit t t h)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NE', 'VF'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (13, 18), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		(BS o)
		(BS b)
		(BS o)
		(BS r)
		(BS s)
		(BS k)
		(BS i)
		(NE matthias)
		(VF mit t t h)
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (18, 23), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja und der name noch mal o b o r s k i matthias mit t t h brauchen sie sonst noch etwas)

Sentence 589:
6 Initial errors
0 on fringe, 5 iterations
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(ADJX[00m
					(FM first)[01;31m)[00m
				(FM class)[01;31m)[00m
			[01;36m(NX[00m
				(NN [01;33m(NX[00m reiseburo)[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(NX
				(NE schmidt))[01;31m)[00m [01;33mNX)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'DM', 'DM', 'SIMPX'], 'mover info': [('NX', (0, 2))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(ADJX[00m
				(FM first)[01;31m)[00m
			(FM class)[01;31m)[00m
		[01;36m(NX[00m
			(NX reiseburo)
			[01;31m(DM[00m
				(NX
					(NE schmidt))[01;31m)[00m[01;36m)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:UNSET add
{'subtrees': ['NX', 'DM'], 'family': ['NX', 'NX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag))), (SIMPX (VF (PX (PWAV womit))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen))) (VC (VXINF (VVINF helfen))))], 'left siblings': [(NX (ADJX (FM first)) (FM class))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(ADJX[00m
				(FM first)[01;31m)[00m
			(FM class)[01;31m)[00m
		(NX
			(NX reiseburo)
			[01;31m(DM[00m
				(NX
					(NE schmidt))[01;31m)[00m)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['ADJX', 'FM'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM', 'FM'), 'right siblings': ['FM'], 'parent': 'NX', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(NX[00m
			(FM first)
			(FM class)[01;31m)[00m
		(NX
			(NX reiseburo)
			[01;31m(DM[00m
				(NX
					(NE schmidt))[01;31m)[00m)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:UNSET remove
{'subtrees': ['FM', 'FM'], 'family': ['NX', 'NX', 'DM', 'SIMPX'], 'over_word': False, 'over words': True, 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['NX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(FM first)
		(FM class)
		(NX
			(NX reiseburo)
			[01;31m(DM[00m
				(NX
					(NE schmidt))[01;31m)[00m)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (2, 4), 'span': (3, 4), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP first class reiseburo schmidt guten tag womit kann ich ihnen helfen)

Sentence 590:
27 Initial errors
0 on fringe, 16 iterations
4 Error:UNSET move
4 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:PP Attachment
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX noch)
					(NX die frage)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX nach dem hotel)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(C[00m
				[01;31m(NX[00m
					(NX was) [01;33mNX)[00m
					(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				[01;31m(ADJX[00m
					[01;36m(ADJX[00m
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen) [01;33mMF) SIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
					(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'C'], 'mover info': [('C', (13, 17))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['MF', 'VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 38), 'movers': ['C'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX noch)
					(NX die frage)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX nach dem hotel)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;36m(VF[00m [01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				[01;31m(ADJX[00m
					[01;36m(ADJX[00m
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen) [01;33mMF) SIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
					(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'KON'], 'mover info': [('KON', (25, 26))], 'old_family': ['ADJX', 'KON', 'PX', 'KON'], 'start left siblings': ['ADJX', 'KON', 'PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (19, 26), 'movers': ['KON'], 'old_parent': 'ADJX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX noch)
					(NX die frage)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX nach dem hotel)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;36m(VF[00m [01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADJX', 'PX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX noch)
					(NX die frage)
					(ADJX naturlich)[01;36m)[00m
				(PX nach dem hotel)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;36m(VF[00m [01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'VC'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX noch)
					(NX die frage)
					(ADJX naturlich)[01;36m)[00m
				(PX nach dem hotel)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF sie)
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (7, 10))], 'old_family': ['ADVX', 'NX', 'ADJX', 'PX'], 'start left siblings': ['ADVX', 'NX', 'ADJX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 10), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			(MF noch die frage naturlich)
			(PX nach dem hotel)[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF sie)
			(VC haben)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'VC', 'C', 'MF'], 'mover info': [('C', (19, 20)), ('MF', (20, 25))], 'old_family': ['C', 'MF', 'KON'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['KON'], 'end left siblings': ['VF', 'VC'], 'auto preterminal span': (0, 38), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			(MF noch die frage naturlich)
			(PX nach dem hotel)[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		(SIMPX
			(VF sie)
			(VC haben)
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m))[01;36m)[00m)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX naturlich)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
			(PX am flughafen)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (34, 35))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (33, 38), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			(MF noch die frage naturlich)
			(PX nach dem hotel)[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		(SIMPX
			(VF sie)
			(VC haben)
			[01;36m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m))[01;36m)[00m)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF'], 'family': ['VF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER sie))), (VC (VXFIN (VAFIN haben)))], 'auto preterminal span': (19, 25), 'span': (19, 25), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			(MF noch die frage naturlich)
			(PX nach dem hotel)[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		(SIMPX
			(VF sie)
			(VC haben)
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(PX[00m
							(KON oder)
							(PX am flughafen)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['ADJX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADJD zentral))], 'auto preterminal span': (22, 25), 'span': (22, 25), 'parent': 'ADJX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF da)
			(LK ware)
			(MF noch die frage naturlich)
			(PX nach dem hotel)[01;31m)[00m
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (1, 10), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;33m(NX[00m (NX was)
				[01;31m(NX[00m
					(NX was) [01;33mNX)[00m
					(PX fur einen hotelwunsch)[01;31m)[00m))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX
			(C ob)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX was)
					(NX was)[01;36m)[00m
				(PX fur einen hotelwunsch)))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'PWS'), 'right siblings': [(PX (APPR fur) (NX (ART einen) (NN hotelwunsch)))], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX ob sie was was fur einen hotelwunsch)
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SIMPX[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': ['DM', 'SIMPX', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (25, 26), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX ob sie was was fur einen hotelwunsch)
		(SIMPX sie haben ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX', 'KON', 'DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 33), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX', 'KON', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF da)
		(LK ware)
		(MF noch die frage naturlich)
		(PX nach dem hotel)
		(SIMPX ob sie was was fur einen hotelwunsch)
		(SIMPX sie haben ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(C wenn)
		(MF sie mit der bahn)
		(VC kommen)
		[01;31m(PX[00m
			(ADVX dann)
			(ADVX naturlich nicht)
			(PX am flughafen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX', 'KON', 'DM', 'C', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (33, 38), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'PX', 'SIMPX', 'SIMPX', 'KON', 'DM', 'C', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)

Sentence 591:
14 Initial errors
0 on fringe, 8 iterations
4 Error:NP Attachment
3 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;33m(R (NF[00m (NF was ziemlich zentral ist)[01;31m)[00m
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX halt)
				[01;31m(NX[00m [01;33m(NX[00m
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung) [01;33mNX) MF) SIMPX)[00m
							[01;33m(NX[00m (NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(PX je nachdem))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (43, 50))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminal span': (34, 50), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;33m(R (NF[00m (NF was ziemlich zentral ist)[01;31m)[00m
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF
					(ADVX halt)
					(NX
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX ubernachtung))[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;33m(NX[00m (NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m
		(PX je nachdem))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'NX', 'PX'], 'mover info': [('NX', (43, 50))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NX'], 'start left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 52), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;33m(R (NF[00m (NF was ziemlich zentral ist)[01;31m)[00m
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX ubernachtung))[01;31m)[00m[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6)), ('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 9), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;33m(R (NF[00m (NF was ziemlich zentral ist)[01;31m)[00m
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX ubernachtung))[01;31m)[00m[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['PX', 'SIMPX', 'SIMPX', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (9, 21), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		[01;36m(NF[00m
			[01;36m(R[00m
				(NF was ziemlich zentral ist)
				(PX mit konferenzraum und garage)
				(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX ubernachtung))[01;31m)[00m[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:PP Attachment
{'subtrees': ['NF', 'PX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'R', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PDS das))) (LK (VXFIN (VAFIN hatte))) (MF (ADVX (ADV halt)) (NX (NX (ART eine) (NN preisklasse)) (PX (APPR von) (NX (PX (APPR pro) (NX (NN ubernachtung)))))))), (NX (NX (NX (NN einzelzimmer)) (NX (ADJX (ADJX (CARD zweihundert) (CARD funfundvierzig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfundneunzig))) (NN mark))) (PX (ADVX (ADV je)) (PROP nachdem)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ sicher)), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN sagten))) (MF (ADVX (ADV gerade)) (ADVX (PTKNEG nicht)) (ADVX (ADV gerade)) (NX (ART das) (NN billigste)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV vielleicht)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE schweizerhof))))), (VC (VXINF (VVINF empfehlen)))], 'auto preterminal span': (17, 34), 'span': (17, 34), 'parent': 'TURN', 'label': 'R', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		[01;36m(NF[00m
			(R
				(NF was ziemlich zentral ist)
				(PX mit konferenzraum und garage)
				(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen))[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX ubernachtung))[01;31m)[00m[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:Unary
{'subtrees': ['R'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PDS das))) (LK (VXFIN (VAFIN hatte))) (MF (ADVX (ADV halt)) (NX (NX (ART eine) (NN preisklasse)) (PX (APPR von) (NX (PX (APPR pro) (NX (NN ubernachtung)))))))), (NX (NX (NX (NN einzelzimmer)) (NX (ADJX (ADJX (CARD zweihundert) (CARD funfundvierzig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfundneunzig))) (NN mark))) (PX (ADVX (ADV je)) (PROP nachdem)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ sicher)), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN sagten))) (MF (ADVX (ADV gerade)) (ADVX (PTKNEG nicht)) (ADVX (ADV gerade)) (NX (ART das) (NN billigste)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV vielleicht)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE schweizerhof))))), (VC (VXINF (VVINF empfehlen)))], 'auto preterminal span': (17, 34), 'span': (17, 34), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		(NF was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX ubernachtung))[01;31m)[00m[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 43), 'span': (40, 43), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		(NF was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					(APPR von)
					[01;31m(NX[00m
						(PX
							(APPR pro)
							(NX ubernachtung))[01;31m)[00m)))
		(NX einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 43), 'span': (41, 43), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja sicher sie sagten gerade nicht gerade das billigste dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen und das hatte halt eine preisklasse von pro ubernachtung einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)

Sentence 592:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF sie)
			(LK sagten)
			(NF sie wollten morgens ankommen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						(PX von bonn sechs uhr funfundvierzig)[01;31m)[00m
					(ADJX zu fruh)))
			(SIMPX
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK ginge)
					(MF das)[01;36m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD', 'KON', 'VVFIN', 'PDS'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN sagten))) (NF (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VMFIN wollten))) (MF (ADVX (ADV morgens))) (VC (VXINF (VVINF ankommen))))))], 'auto preterminal span': (7, 21), 'span': (7, 21), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF sie)
			(LK sagten)
			(NF sie wollten morgens ankommen)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						(PX von bonn sechs uhr funfundvierzig)[01;31m)[00m
					(ADJX zu fruh)))
			(SIMPX
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK ginge)
					(MF das)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF sie)
			(LK sagten)
			(NF sie wollten morgens ankommen)[01;31m)[00m
		(SIMPX
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						(PX von bonn sechs uhr funfundvierzig)[01;31m)[00m
					(ADJX zu fruh)))
			(SIMPX oder ginge das))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD', 'KON', 'VVFIN', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (1, 7), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF sie)
		(LK sagten)
		(NF sie wollten morgens ankommen)
		(SIMPX
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						(PX von bonn sechs uhr funfundvierzig)[01;31m)[00m
					(ADJX zu fruh)))
			(SIMPX oder ginge das))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 18), 'span': (9, 16), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja sie sagten sie wollten morgens ankommen ware ihnen die abfahrt von bonn sechs uhr funfundvierzig zu fruh oder ginge das)

Sentence 593:
0 Initial errors
0 on fringe, 0 iterations

Sentence 594:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX halb acht)
		(SIMPX dann waren sie um zwei minuten nach elf in hannover)
		[01;31m(DM[00m
			(KON und)[01;31m)[00m
		(DM ja)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'SIMPX', 'DM', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD', 'CARD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'APPR', 'NE', 'KON', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (12, 13), 'left siblings': ['NX', 'SIMPX'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP halb acht dann waren sie um zwei minuten nach elf in hannover und ja)

Sentence 595:
0 Initial errors
0 on fringe, 0 iterations

Sentence 596:
3 Initial errors
0 on fringe, 3 iterations
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		[01;31m(SIMPX[00m
			(VF und zwar)
			(LK mochte)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(PX im august)
					(PX fur ein paar tage)[01;36m)[00m)
			(VC wegfahren)
			(NF nach hannover)[01;31m)[00m
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJX vierte)
						(ADJX funfte)[01;31m)[00m
					(NN august))))
		(SIMPX was konnen sie mir da anbieten)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (14, 20), 'span': (14, 20), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		[01;31m(SIMPX[00m
			(VF und zwar)
			(LK mochte)
			(MF ich im august fur ein paar tage)
			(VC wegfahren)
			(NF nach hannover)[01;31m)[00m
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJX vierte)
						(ADJX funfte)[01;31m)[00m
					(NN august))))
		(SIMPX was konnen sie mir da anbieten)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		(VF und zwar)
		(LK mochte)
		(MF ich im august fur ein paar tage)
		(VC wegfahren)
		(NF nach hannover)
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					(ART der)
					[01;31m(ADJX[00m
						(ADJX vierte)
						(ADJX funfte)[01;31m)[00m
					(NN august))))
		(SIMPX was konnen sie mir da anbieten)))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'ADJX'], 'family': ['ART', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (33, 37), 'span': (34, 36), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ich wurde ganz gern eine reise buchen bei ihnen und zwar mochte ich im august fur ein paar tage wegfahren nach hannover und zwar wurde das am montag dienstag sein das ist der vierte funfte august was konnen sie mir da anbieten)

Sentence 597:
10 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;31m(SIMPX[00m
			(LK habe)
			[01;31m(MF[00m [01;33m(MF (MF[00m
				(NX ich)
				(NX mir)
				[01;33m(DP[00m (ADVX noch)[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(PIAT keine) [01;33mDP) MF)[00m[01;36m)[00m
		(DM ja) [01;33mMF)[00m
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'PIAT'], 'mover info': [('PIAT', (7, 8))], 'old_family': ['DM', 'DM', 'SIMPX', 'PIAT', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 44), 'adding node already present': False, 'movers': ['PIAT'], 'old_parent': 'TURN', 'POS confusion': ('PIAT', 'PIAT'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF [01;33m(MF[00m
				(NX ich)
				(NX mir)
				(DP
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))[01;31m)[00m
		(DM ja) [01;33mMF)[00m
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (39, 44), 'span': (39, 44), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF [01;33m(MF[00m
				(NX ich)
				(NX mir)
				(DP
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))[01;31m)[00m
		(DM ja) [01;33mMF)[00m
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PIAT'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIAT',), 'right siblings': [], 'left siblings': [(ADVX (ADV noch))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'DP', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;31m(SIMPX[00m
			(LK habe)
			[01;33m(MF[00m (MF ich mir noch keine)[01;31m)[00m
		(DM ja) [01;33mMF)[00m
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (3, 8), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(LK habe)
		[01;36m(MF[00m
			(MF ich mir noch keine)
			(DM ja)[01;36m)[00m
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:UNSET add
{'subtrees': ['MF', 'DM'], 'family': ['DM', 'DM', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV noch)) (NX (PIAT keine) (NN gedanken)) (PX (PROP drum))) (VC (VXINF (VVPP gemacht)))), (DM (PTKANT ja)), (SIMPX (VF (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VMFIN sollte))) (MF (ADVX (ADV schon)) (ADJX (ADVX (ADVX (ADV relativ)) (ADV zentral)) (ADJD gelegen))) (VC (VXINF (VAINF sein))))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VMFIN mus))) (MF (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (NX (PIS eines)) (NX (ART der) (NN schlechteren)))) (VC (VXINF (VAINF sein)))), (SIMPX (LK (VXFIN (VAFIN hatten))) (MF (NX (PPER sie)) (ADVX (ADV da)) (NX (PIS eines))) (NF (SIMPX (C (NX (PRELS das))) (MF (NX (PPER sie)) (NX (PPER mir))) (VC (VXINF (VVINF empfehlen)) (VXFIN (VMFIN konnten))))))], 'left siblings': [(DM (ITJ ach) (ADVX (ADV so))), (DM (ITJ stimmt)), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (4, 9), 'span': (4, 9), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(LK habe)
		(MF ich mir noch keine ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (18, 27), 'left siblings': ['DM', 'DM', 'LK', 'MF', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(LK habe)
		(MF ich mir noch keine ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(VF es sollte schon relativ zentral gelegen sein)
		(LK denke)
		(MF ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PRELS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (39, 40), 'span': (39, 40), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ach so stimmt habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht ja es sollte schon relativ zentral gelegen sein denke ich es mus auch nicht eines der schlechteren sein hatten sie da eines das sie mir empfehlen konnten)

Sentence 598:
0 Initial errors
0 on fringe, 0 iterations

Sentence 599:
8 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;31m(SIMPX[00m
			(VF was)
			(LK war)
			(MF das jetzt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			[01;36m(MF[00m
				(ADVX dann)
				(ADJX
					(NX drei vier tage)
					[01;36m(ADVX[00m
						(ADJD spater)[01;36m)[00m)
				(ADVX wieder)
				(PX nach hause)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'ADVX'], 'mover info': [('ART', (25, 26))], 'old_family': ['VF', 'LK', 'ART', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (23, 29), 'movers': ['ART'], 'old_parent': 'SIMPX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;31m(SIMPX[00m
			(VF was)
			(LK war)
			(MF das jetzt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			[01;36m(MF[00m
				(ADVX dann)
				(ADJX
					(NX drei vier tage)
					[01;36m(ADVX[00m
						(ADJD spater)[01;36m)[00m)
				(ADVX wieder)
				(PX nach hause)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			(MF
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				(NX die ausstellung)
				(ADVX vorbei)))
		(SIMPX das ware also dann spatestens am achten august)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADJX', 'ADVX', 'PX'], 'family': ['KON', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(KON und)], 'auto preterminal span': (15, 23), 'span': (15, 23), 'parent': 'PX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;31m(SIMPX[00m
			(VF was)
			(LK war)
			(MF das jetzt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(MF
				(ADVX dann)
				(ADJX
					(NX drei vier tage)
					[01;36m(ADVX[00m
						(ADJD spater)[01;36m)[00m)
				(ADVX wieder)
				(PX nach hause))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			(MF
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				(NX die ausstellung)
				(ADVX vorbei)))
		(SIMPX das ware also dann spatestens am achten august)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (ADJX (ADJX (CARD drei)) (ADJX (CARD vier))) (NN tage))], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'ADJX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;31m(SIMPX[00m
			(VF was)
			(LK war)
			(MF das jetzt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(MF dann drei vier tage spater wieder nach hause)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			(MF
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				(NX die ausstellung)
				(ADVX vorbei)))
		(SIMPX das ware also dann spatestens am achten august)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (ART die) (NN ausstellung)), (ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;31m(SIMPX[00m
			(VF was)
			(LK war)
			(MF das jetzt)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(MF dann drei vier tage spater wieder nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (2, 6), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM wie gesagt)
		(VF was)
		(LK war)
		(MF das jetzt)
		[01;31m(SIMPX[00m
			(VF montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(MF dann drei vier tage spater wieder nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (6, 14), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM wie gesagt)
		(VF was)
		(LK war)
		(MF das jetzt)
		(VF montag der vierte august)
		(LK wollte)
		(MF ich dann)
		(VC los)
		[01;31m(PX[00m
			(KON und)
			(MF dann drei vier tage spater wieder nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET remove
{'subtrees': ['KON', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (14, 23), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wie gesagt was war das jetzt montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause dann ist das die ausstellung vorbei das ware also dann spatestens am achten august)

Sentence 600:
0 Initial errors
0 on fringe, 0 iterations

Sentence 601:
11 Initial errors
0 on fringe, 6 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			[01;36m(MF[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						[01;36m(ADVX[00m
							(NN [01;33m(NX[00m gepack)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP nachgesendet)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNX)[00m
		(SIMPX mus ich das selber schleppen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF so ein ruckenleiden)[01;31m)[00m
			(PX deswegen)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'VC'], 'mover info': [('VC', (11, 12))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (8, 12), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m
						[01;36m(NX[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP nachgesendet)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m))
		(SIMPX mus ich das selber schleppen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF so ein ruckenleiden)[01;31m)[00m
			(PX deswegen)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m
						[01;31m(VC[00m
							(NX
								(VVPP nachgesendet))[01;31m)[00m)[01;31m)[00m))
		(SIMPX mus ich das selber schleppen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF so ein ruckenleiden)[01;31m)[00m
			(PX deswegen)[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (22, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['PX'], 'old_parent': 'TURN', 'POS confusion': ('PROP', 'PROP'), 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m
						[01;31m(VC[00m
							(NX
								(VVPP nachgesendet))[01;31m)[00m)[01;31m)[00m))
		(SIMPX mus ich das selber schleppen)
		(SIMPX ich habe so ein ruckenleiden deswegen)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (10, 12))], 'old_family': ['ART', 'NX'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (9, 12), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			(MF
				(NX das)
				(NX
					[01;36m(ADVX[00m
						(NN gepack)[01;36m)[00m
					[01;31m(VC[00m
						(NX
							(VVPP nachgesendet))[01;31m)[00m)))
		(SIMPX mus ich das selber schleppen)
		(SIMPX ich habe so ein ruckenleiden deswegen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(VC (NX (VVPP nachgesendet)))], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(LK wird)
			(MF
				(NX das)
				(NX
					(ADVX gepack)
					[01;31m(VC[00m
						(NX
							(VVPP nachgesendet))[01;31m)[00m)))
		(SIMPX mus ich das selber schleppen)
		(SIMPX ich habe so ein ruckenleiden deswegen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (10, 12), 'span': (11, 12), 'left siblings': ['ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay wie ist das mit dem gepack wird das gepack nachgesendet mus ich das selber schleppen ich habe so ein ruckenleiden deswegen)

Sentence 602:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(NX sie)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m [01;33mMF)[00m
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'NX'], 'mover info': [('MF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (11, 19), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX ich)
							(NX sie)
							(ADVX doch)[01;31m)[00m
						(NX das))
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'PDS'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (13, 17), 'span': (13, 16), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF ich sie doch das)
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(SIMPX[00m
				(MF ich sie doch das)
				(VC zu buchen)[01;31m)[00m)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja okay werde ich mich drum kummern ja prima dann bitte ich sie doch das zu buchen ja)

Sentence 603:
0 Initial errors
0 on fringe, 0 iterations

Sentence 604:
0 Initial errors
0 on fringe, 0 iterations

Sentence 605:
15 Initial errors
0 on fringe, 8 iterations
7 Error:Clause Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						[01;36m(LKMVC[00m
							[01;33m(FKOORD[00m (LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(FKOORD[00m
					(LK ware)
					(MF doch gut)
					(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mFKOORD) NF) SIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (18, 31))], 'old_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'FKOORD'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						[01;36m(LKMVC[00m
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							[01;36m(FKOORD[00m
								(LK ware)
								(MF doch gut)
								(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m))))))
Step:Single Word Phrase
{'family': ['PX', 'VXINF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						[01;36m(LKMVC[00m
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VC[00m
										(VXINF
											(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							[01;36m(FKOORD[00m
								(LK ware)
								(MF doch gut)
								(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [(SIMPX (KOORD (KON und)) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)) (ADJX (ADJD gut))) (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV eben))) (VC (VXFIN (VVFIN zusammensetzen)))) (KON und) (MVC (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN klaren))))))))], 'left siblings': [], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VC[00m
										(VXINF
											(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							[01;36m(FKOORD[00m
								(LK ware)
								(MF doch gut)
								(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN sollen))), (MF (ADVX (ADV zusammen))), (VC (VXINF (VVINF verreisen)))], 'auto preterminal span': (15, 18), 'span': (15, 18), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							(PX
								(NF
									(PX nach hannover)
									[01;36m(VC[00m
										(VXINF
											(ADJD geschaftlich))[01;36m)[00m)))
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							[01;36m(FKOORD[00m
								(LK ware)
								(MF doch gut)
								(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PX (APPR nach) (NX (NE hannover)))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NF', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							[01;36m(FKOORD[00m
								(LK ware)
								(MF doch gut)
								(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['KOORD', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (19, 31), 'span': (19, 31), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(FKOORD ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'FKOORD'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (18, 31), 'span': (18, 19), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						[01;31m(SIMPX[00m
							(KON und)
							(FKOORD ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['KON', 'FKOORD'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (12, 31), 'span': (18, 31), 'left siblings': ['LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo herr klein gut das wir uns treffen ich habe gehort wir sollen zusammen verreisen nach hannover geschaftlich und ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)

Sentence 606:
0 Initial errors
0 on fringe, 0 iterations

Sentence 607:
0 Initial errors
0 on fringe, 0 iterations

Sentence 608:
0 Initial errors
0 on fringe, 0 iterations

Sentence 609:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX habe ich)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich)
			(VC dabei)[01;31m)[00m
		(DM ja)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VAFIN', 'PPER', 'VAFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (3, 6), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja habe ich habe ich dabei ja)

Sentence 610:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist auch preislich in ordnung)
		[01;31m(SIMPX[00m
			(VF da)
			(LK bin)
			(MF ich mit einverstanden)[01;31m)[00m
		[01;36m(NF[00m [01;31m(DM[00m
			(PX
				(APPR auf)
				(NX jeden fall))[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'auto preterminal span': (12, 15), 'span': (12, 15), 'subtrees': ['PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'NF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist auch preislich in ordnung)
		[01;31m(SIMPX[00m
			(VF da)
			(LK bin)
			(MF ich mit einverstanden)[01;31m)[00m
		(NF auf jeden fall)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'PPER', 'PROP', 'ADJD', 'APPR', 'PIDAT', 'NN', 'PTKANT'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (7, 12), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja das ist auch preislich in ordnung da bin ich mit einverstanden auf jeden fall ja)

Sentence 611:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			[01;36m(MF[00m
				(MF ich die sache)
				[01;36m(NX[00m [01;31m(VC[00m
					(PTKVZ feste)[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			[01;36m(MF[00m
				(MF ich die sache)
				(NX feste)
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'NX', 'NF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN mache)))], 'auto preterminal span': (3, 9), 'span': (3, 9), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			(MF
				(MF ich die sache)
				(NX feste)
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 9), 'span': (7, 9), 'left siblings': ['MF', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann mache ich die sache feste im reiseburo)

Sentence 612:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF hier schon eine liste)
				(VC liegen)[01;36m)[00m
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'NF', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (17, 19)), ('NF', (19, 25))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 33), 'movers': ['DM', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX ich habe hier schon eine liste liegen)
		(DM und zwar)
		[01;31m(NF[00m
			(NX
				(NX der zugverbindungen)
				(PX von bonn nach hannover))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (NX (NN frau) (NE schmidt))), (SIMPX (LK (VXFIN (VMFIN musten))) (MF (NX (PRF uns)) (NX (PDS das))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (ADVX (ADV schon)) (NX (ART eine) (NN liste))) (VC (VXINF (VVINF liegen)))), (DM (KON und) (ADVX (ADV zwar))), (NF (NX (NX (ART der) (NN zugverbindungen)) (PX (PX (APPR von) (NX (NE bonn))) (PX (APPR nach) (NX (NE hannover))))))], 'auto preterminal span': (25, 33), 'span': (25, 33), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX ich habe hier schon eine liste liegen)
		(DM und zwar)
		[01;31m(NF[00m
			(NX
				(NX der zugverbindungen)
				(PX von bonn nach hannover))[01;31m)[00m
		(SIMPX was meinen sie denn wann sollten wir fahren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (19, 25), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay frau schmidt musten uns das zu machen also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover was meinen sie denn wann sollten wir fahren)

Sentence 613:
4 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK denke)
				[01;33m(MF[00m (MF ich auch)[01;31m)[00m
			(ADJX
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m
				(ADVX nicht)
				(ADJX zu fruh)) [01;33mMF)[00m[01;36m)[00m
		(SIMPX ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADJX'], 'mover info': [('ADJX', (4, 8))], 'old_family': ['DM', 'SIMPX', 'ADJX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKANT', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK denke)
			(MF
				(MF ich auch)
				(ADJX
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX nicht)
					(ADJX zu fruh))))
		(SIMPX ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'right siblings': ['ADVX', 'ADJX'], 'parent': 'ADJX', 'auto preterminal span': (4, 8), 'span': (4, 5), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja denke ich auch aber nicht zu fruh ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)

Sentence 614:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX da)
				(NX mich)
				(ADVX da)
				(ADVX auch)
				(ADVX noch)
				[01;31m(ADJX[00m
					(NX so ein bischen)
					(ADJD schlau)[01;31m)[00m)
			(VC gemacht))
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK halten)
			(MF sie davon)[01;31m)[00m
		(SIMPX ich dachte mehr an theaterbesuch im ballhof)
		(SIMPX da kommen auch die andern kollegen mit)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht)
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK halten)
			(MF sie davon)[01;31m)[00m
		(SIMPX ich dachte mehr an theaterbesuch im ballhof)
		(SIMPX da kommen auch die andern kollegen mit)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (27, 31), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht konnte ja auch nach der veranstaltung noch was unternehmen was halten sie davon ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)

Sentence 615:
7 Initial errors
0 on fringe, 2 iterations
6 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		(DM ach gott)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(LK haben)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX sie)
					(NX eine liste) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV da))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK konnen)
			(MF sie mir die eben)
			(VC reichen)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 15), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ach so)
		(DM ach gott)
		(SIMPX haben sie eine liste)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADV da))[01;36m)[00m
			(LK konnen)
			(MF sie mir die eben)
			(VC reichen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER sie)) (NX (PPER mir)) (NX (PDS die)) (ADVX (ADV eben))), (VC (VXINF (VVINF reichen)))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ach so ach gott haben sie eine liste da konnen sie mir die eben reichen)

Sentence 616:
9 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ ah)[01;36m)[00m
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		[01;36m(DM[00m
			(DM danke)
			(DM ja)[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LV das hotel savoy) [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						(VF das)
						(LK ist)
						(MF ganz nett)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['ITJ', 'DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('ITJ', (0, 1))], 'old_family': ['ITJ', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'start right siblings': ['PTKANT'], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['ITJ'], 'old_parent': 'DM', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(ITJ ah)[01;36m)[00m
		(DM ja)
		[01;36m(DM[00m
			(DM danke)
			(DM ja)[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LV das hotel savoy) [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						(VF das)
						(LK ist)
						(MF ganz nett)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (6, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (6, 13), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(ITJ ah)[01;36m)[00m
		(DM ja)
		[01;36m(DM[00m
			(DM danke)
			(DM ja)[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(LV das hotel savoy) [01;33mSIMPX)[00m
				(SIMPX das ist ganz nett)[01;31m)[00m[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (PTKANT ja)), (DM (PTKANT danke)), (DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (LV (NX (ART das) (NX (NX (NN hotel)) (NX (NE savoy))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ganz)) (ADJD nett)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war))) (MF (NX (ART ein) (NN kollege)) (ADVX (ADV letztens)) (PX (PROP drin))) (VC (VXINF (VAPP gewesen)))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN meinte))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))), (DM (PTKANT ja))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ah)
		(DM ja)
		[01;36m(DM[00m
			(DM danke)
			(DM ja)[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(LV das hotel savoy) [01;33mSIMPX)[00m
				(SIMPX das ist ganz nett)[01;31m)[00m[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (LV (NX (ART das) (NX (NX (NN hotel)) (NX (NE savoy))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ganz)) (ADJD nett)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war))) (MF (NX (ART ein) (NN kollege)) (ADVX (ADV letztens)) (PX (PROP drin))) (VC (VXINF (VAPP gewesen)))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN meinte))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))), (DM (PTKANT ja))], 'left siblings': [(DM (ITJ ah)), (DM (PTKANT ja))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(DM ah)
		(DM ja)
		(DM danke ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(LV das hotel savoy) [01;33mSIMPX)[00m
				(SIMPX das ist ganz nett)[01;31m)[00m[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SIMPX', 'SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (4, 13), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ah)
		(DM ja)
		(DM danke ja)
		[01;33m(SIMPX[00m (VF ich)
		(LK denke)
		[01;31m(NF[00m
			(LV das hotel savoy) [01;33mSIMPX)[00m
			(SIMPX das ist ganz nett)[01;31m)[00m
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:Clause Attachment
{'subtrees': ['LV', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'VF', 'LK', 'NF', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SIMPX', 'SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (6, 13), 'left siblings': ['DM', 'DM', 'DM', 'VF', 'LK'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ah)
		(DM ja)
		(DM danke ja)
		[01;36m(SIMPX[00m
			(VF ich)
			(LK denke)
			(LV das hotel savoy)[01;36m)[00m
		(SIMPX das ist ganz nett)
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX der meinte das ware in ordnung)
		(DM ja)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'LV'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'NE'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ganz)) (ADJD nett)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war))) (MF (NX (ART ein) (NN kollege)) (ADVX (ADV letztens)) (PX (PROP drin))) (VC (VXINF (VAPP gewesen)))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN meinte))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))), (DM (PTKANT ja))], 'left siblings': [(DM (ITJ ah)), (DM (PTKANT ja)), (DM (DM (PTKANT danke)) (DM (PTKANT ja)))], 'auto preterminal span': (4, 9), 'span': (4, 9), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ah ja danke ja ich denke das hotel savoy das ist ganz nett da war ein kollege letztens drin gewesen der meinte das ware in ordnung ja)

Sentence 617:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		[01;31m(DM[00m
			(ADVX dann)
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		[01;31m(SIMPX[00m
			[01;36m(C[00m [01;31m(PARORD[00m
				(KOUS weil)[01;31m)[00m[01;36m)[00m
			(LV das mit dem reiseburo)
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack)[01;31m)[00m
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Single Word Phrase
{'family': ['C', 'LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PARORD', 'C')}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		[01;31m(DM[00m
			(ADVX dann)
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		[01;31m(SIMPX[00m
			(C weil)
			(LV das mit dem reiseburo)
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack)[01;31m)[00m
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'start right siblings': ['PTKANT'], 'end left siblings': ['DM', 'SIMPX', 'DM'], 'auto preterminal span': (0, 46), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		[01;31m(SIMPX[00m
			(C weil)
			(LV das mit dem reiseburo)
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack)[01;31m)[00m
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['C', 'LV', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (27, 41), 'left siblings': ['DM', 'SIMPX', 'DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay dann kummern sie sich drum ne dann ja ich habe ja noch eine telefonnummer von dem hotel ich denke mal da konnte ich das dann festmachen weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein ja)

Sentence 618:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX meurer)
					(PX aus bonn)[01;31m)[00m[01;31m)[00m)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK muste)
			(MF
				(PX
					(PX um neun uhr morgens)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
				(ADVX da))
			(VC sein))))
Step:Single Word Phrase
{'family': ['PX', 'ADJX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX meurer)
					(PX aus bonn)[01;31m)[00m[01;31m)[00m)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX und ich muste um neun uhr morgens ungefahr da sein)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 7), 'span': (4, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX meurer)
				(PX aus bonn)[01;31m)[00m)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX und ich muste um neun uhr morgens ungefahr da sein)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 7), 'span': (4, 7), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag hier ist meurer aus bonn ich brauche eine verbindung nach hannover und zwar fur den funfzehnten juli und ich muste um neun uhr morgens ungefahr da sein)

Sentence 619:
2 Initial errors
0 on fringe, 1 iterations
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das kommt drauf an wann ich ankomme)
		(DM also)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						[01;31m(NX[00m
							(PX mit dem flug)
							[01;36m(NX[00m
								(PDS das)[01;36m)[00m[01;31m)[00m
						(PX an demselben tag))
					(VC packe)))
			(LK ginge)
			(MF das eigentlich auch))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'PX'], 'mover info': [('PX', (10, 13))], 'old_family': ['PX', 'PDS'], 'start left siblings': [], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'PDS', 'APPR', 'PDAT', 'NN'), 'start right siblings': ['PDS'], 'end left siblings': ['NX'], 'auto preterminal span': (9, 17), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP das kommt drauf an wann ich ankomme also wenn ich mit dem flug das an demselben tag packe ginge das eigentlich auch)

Sentence 620:
4 Initial errors
0 on fringe, 3 iterations
2 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				[01;36m(PX[00m
					[01;31m(NX[00m
						(NX ein nachtexpres)
						(KON oder)
						[01;33m(PX[00m (ADVX so)[01;31m)[00m
					[01;31m(PX[00m
						(PROP dahin)[01;31m)[00m[01;36m)[00m)))) [01;33mPX)[00m
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['NX', 'PROP'], 'mover info': [('NX', (12, 16))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (9, 17), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['PROP'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				(PX
					[01;31m(NX[00m
						(NX ein nachtexpres)
						(KON oder)
						[01;33m(PX[00m (ADVX so)[01;31m)[00m
					(PROP dahin)))))) [01;33mPX)[00m
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['NX', 'PROP'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'PROP'), 'right siblings': ['PROP'], 'parent': 'PX', 'auto preterminal span': (12, 17), 'span': (12, 16), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				(PX
					(NX ein nachtexpres)
					(KON oder)
					[01;36m(PX[00m
						(ADVX so)
						(PROP dahin)[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['ADVX', 'PROP'], 'family': ['NX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PROP'), 'right siblings': [], 'left siblings': [(NX (ART ein) (NN nachtexpres)), (KON oder)], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP das ware knapp aber es muste eigentlich auch geht auch irgendwie noch ein nachtexpres oder so dahin)

Sentence 621:
0 Initial errors
0 on fringe, 0 iterations

Sentence 622:
14 Initial errors
0 on fringe, 8 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK bleibe)
				(MF sowieso einige tage)[01;36m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ da)[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wieviel)
				(LK kostet)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'PX', 'NX'], 'mover info': [('NX', (28, 30))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ', 'PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ', 'PDS', 'VAFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ADV', 'CARD', 'NN', 'PWS', 'VVFIN', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX', 'PX'], 'auto preterminal span': (0, 30), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK bleibe)
				(MF sowieso einige tage)[01;36m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ da)[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK bleibe)
				(MF sowieso einige tage)[01;36m)[00m
			(ADVX da))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK bleibe)
				(MF sowieso einige tage)[01;36m)[00m
			(ADVX da))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				(ADVX da)[01;36m)[00m[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK bleibe)
				(MF sowieso einige tage)[01;36m)[00m
			(ADVX da))
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			(MF drei tage da)[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PIAT', 'NN'), 'right siblings': [(ADVX (PTKVZ da))], 'left siblings': [], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			(MF drei tage da)[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (ADVX (ADV so)) (NX (NN mittelklasse)))], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK bleibe)
			(MF drei tage da)[01;31m)[00m
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				(NX ein hotel in hannover)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ', 'PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ', 'PDS', 'VAFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ADV', 'CARD', 'NN', 'PWS', 'VVFIN', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (7, 12), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(VF ich)
		(LK bleibe)
		(MF drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				(NX ein hotel in hannover)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also ich bleibe sowieso einige tage da ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte wieviel kostet denn ein hotel in hannover so mittelklasse)

Sentence 623:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF was)
			(LK ware)
			[01;31m(MF[00m
				(ADVX denn)
				(NX das nachstbilligere hotel)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(ADVX auch)
			[01;36m(NX[00m
				(ADVX so)
				[01;31m(NX[00m
					(ADJX zentrale)
					(NN lage)[01;31m)[00m[01;36m)[00m
			(ADVX eher)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF was)
			(LK ware)
			[01;31m(MF[00m
				(ADVX denn)
				(NX das nachstbilligere hotel)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(ADVX auch)
			(NX so zentrale lage)
			(ADVX eher)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 6), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF was)
		(LK ware)
		[01;31m(MF[00m
			(ADVX denn)
			(NX das nachstbilligere hotel)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX auch)
			(NX so zentrale lage)
			(ADVX eher)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (2, 6), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF was)
		(LK ware)
		(ADVX denn)
		(NX das nachstbilligere hotel)
		[01;31m(NX[00m
			(ADVX auch)
			(NX so zentrale lage)
			(ADVX eher)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (6, 11), 'left siblings': ['VF', 'LK', 'ADVX', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP was ware denn das nachstbilligere hotel auch so zentrale lage eher)

Sentence 624:
7 Initial errors
0 on fringe, 3 iterations
5 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						[01;36m(VF[00m
							[01;36m(SIMPX[00m
								(C wenn)
								(MF man es)
								(VC zusammenrechnet)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C wenn)
					(MF ich einfach am selben tag)
					(VC fliegen wurde))[01;36m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['KOORD', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 21), 'adding node already present': True, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(SIMPX
		(TURN
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF wenn man es zusammenrechnet)
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C wenn)
					(MF ich einfach am selben tag)
					(VC fliegen wurde))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON aber)), (SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (NX (PIS man)) (NX (PPER es))) (VC (VXFIN (VVFIN zusammenrechnet))))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV ja)) (ADVX (ADV eigentlich)) (NX (ART der) (NN flug)) (ADVX (ADV doch)) (ADVX (ADV noch)) (ADJX (ADJD gunstiger))))], 'auto preterminal span': (13, 21), 'span': (13, 21), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF wenn man es zusammenrechnet)
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)[01;31m)[00m
			(NF wenn ich einfach am selben tag fliegen wurde))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (1, 13), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP aber wenn man es zusammenrechnet ware ja eigentlich der flug doch noch gunstiger wenn ich einfach am selben tag fliegen wurde)

Sentence 625:
0 Initial errors
0 on fringe, 0 iterations

Sentence 626:
0 Initial errors
0 on fringe, 0 iterations

Sentence 627:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM genau)
		(DM ja)
		(SIMPX
			(VF wann)
			(LK kann)
			(MF
				(NX ich)
				(PX bei ihnen)
				(NX
					(NX das flugticket)
					(KON und)
					[01;36m(NX[00m
						(NX die hotelbuchung)
						(KON und)
						(ADVX so weiter)[01;36m)[00m))
			(VC abholen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(NX (ART das) (NN flugticket)), (KON und)], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja genau ja wann kann ich bei ihnen das flugticket und die hotelbuchung und so weiter abholen)

Sentence 628:
0 Initial errors
0 on fringe, 0 iterations

Sentence 629:
9 Initial errors
0 on fringe, 3 iterations
7 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX denn)
					[01;31m(NX[00m [01;33m(NX[00m
						(NX ein termin)
						[01;31m(PX[00m [01;33m(PX[00m
							(APPR unter)
							[01;33m(NX[00m (NX der woche)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART der)
						(ADJX funfzehnte)
						(NN juli))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX) PX) NX)[00m
		(SIMPX lassen sie mich mal gucken)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NF'], 'mover info': [('NF', (8, 11))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK ist)
			(MF
				(NX es)
				(ADVX denn)
				(NX
					(NX ein termin)
					(PX
						(APPR unter)
						(NX
							(NX der woche)
							[01;31m(NF[00m
								(NX
									(ART der)
									(ADJX funfzehnte)
									(NN juli))[01;31m)[00m))))[01;31m)[00m
		(SIMPX lassen sie mich mal gucken)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (0, 11), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK ist)
		(MF
			(NX es)
			(ADVX denn)
			(NX
				(NX ein termin)
				(PX
					(APPR unter)
					(NX
						(NX der woche)
						[01;31m(NF[00m
							(NX
								(ART der)
								(ADJX funfzehnte)
								(NN juli))[01;31m)[00m))))
		(SIMPX lassen sie mich mal gucken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist es denn ein termin unter der woche der funfzehnte juli lassen sie mich mal gucken)

Sentence 630:
9 Initial errors
0 on fringe, 4 iterations
4 Error:PP Attachment
3 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX einen flug)
				[01;36m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX jeden tag)
							[01;31m(PX[00m [01;33m(PX (PX[00m
								(PX von montag)
								[01;33m(PX[00m (PX bis freitag)[01;31m)[00m[01;31m)[00m
						(PX um sieben uhr zehn)[01;31m)[00m [01;33mPX) PX)[00m
					(PX von kolnbonn)[01;36m)[00m)[01;31m)[00m [01;33mPX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['PX', 'PX'], 'auto preterminal span': (10, 20), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX einen flug)
				[01;36m(NX[00m
					[01;31m(NX[00m
						(NX jeden tag)
						[01;33m(PX[00m (PX von montag bis freitag um sieben uhr zehn)[01;31m)[00m
					(PX von kolnbonn)[01;36m)[00m)[01;31m)[00m [01;33mPX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (20, 22))], 'old_family': ['NX', 'NX', 'PX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (8, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)[01;31m)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 22), 'span': (2, 6), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		[01;31m(SIMPX[00m
			(SIMPX wenn sie fliegen mochten)
			(VF es)
			(LK gibt)
			(MF einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)[01;31m)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'VAFIN', 'PPER', 'PDS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (2, 22), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also wenn sie fliegen mochten es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn und dann kommen sie in hannover um acht uhr zehn an wurde ihnen das reichen)

Sentence 631:
28 Initial errors
0 on fringe, 20 iterations
5 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK gucke)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX
					(ADV mal))[01;31m)[00m
			[01;31m(VC[00m [01;33m(PX[00m
				(PTKVZ nach)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV nachts))[01;31m)[00m [01;33mPX) MF) SIMPX)[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie nicht)
				(VC fahren)[01;36m)[00m[01;31m)[00m
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				[01;36m(LKMN[00m [01;31m(LKMVCN[00m
					(LK musten)
					(MF sie allerdings)
					(VC umsteigen)
					(NF in dusseldorf hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment))[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'VF'], 'mover info': [('VF', (5, 6))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 72), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)[01;36m)[00m)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				[01;36m(LKMN[00m [01;31m(LKMVCN[00m
					(LK musten)
					(MF sie allerdings)
					(VC umsteigen)
					(NF in dusseldorf hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment))[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Different label
{'family': ['LKMN', 'KON', 'LKVCN'], 'auto preterminal span': (28, 35), 'span': (28, 35), 'subtrees': ['LK', 'MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMVCN', 'LKMN')}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)[01;36m)[00m)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment))[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Different label
{'family': ['LKMN', 'KON', 'LKM'], 'auto preterminal span': (36, 44), 'span': (36, 44), 'subtrees': ['LK', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKVCN', 'LKM')}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)[01;36m)[00m)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment))[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('PX', (4, 6))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV'), 'start right siblings': [], 'end left siblings': ['ADVX'], 'auto preterminal span': (1, 6), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)))
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment))[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'VF', 'FKOORD'], 'mover info': [('ADVX', (50, 51))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 72), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['VF', 'FKOORD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)))
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m[01;36m)[00m
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LKMVC', 'KON', 'LKMVC'], 'family': ['FKOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [(LKMVCN (LK (VXFIN (VVFIN kommen))) (MF (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei))))))], 'left siblings': [], 'auto preterminal span': (52, 64), 'span': (52, 64), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)))
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					[01;36m(SIMPX[00m
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [(NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei)))))], 'left siblings': [], 'auto preterminal span': (64, 68), 'span': (64, 68), 'parent': 'LKMVCN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)))
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VC', 'VF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKVZ', 'ADV'), 'right siblings': ['VF'], 'parent': 'PX', 'auto preterminal span': (4, 6), 'span': (4, 5), 'left siblings': [], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(PX
					(PTKVZ nach)
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m)))
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PTKVZ', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PTKVZ'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(MF um funf uhr zehn)
			(VC ab)
			[01;31m(NF[00m
				(PX
					(APPR von)
					(NX bonn))[01;31m)[00m)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 27), 'span': (25, 27), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			[01;31m(FKOORD[00m
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof) [01;33mSIMPX)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)[01;31m)[00m)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LKMN', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 44), 'span': (28, 44), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LKMN musten sie allerdings umsteigen in dusseldorf hauptbahnhof)[01;36m)[00m
			(KON und)
			(LKM
				(LK kamen)
				[01;31m(VC[00m
					(PTKVZ an)[01;31m)[00m
				[01;31m(NF[00m
					(PX um sechs uhr zehn)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LKMN'], 'family': ['SIMPX', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN kamen))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
			(KON und)
			(LKM
				(LK kamen)
				[01;31m(VC[00m
					(PTKVZ an)[01;31m)[00m
				[01;31m(NF[00m
					(PX um sechs uhr zehn)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['NF'], 'parent': 'LKM', 'auto preterminal span': (36, 44), 'span': (37, 38), 'left siblings': ['LK'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
			(KON und)
			(LKM
				(LK kamen)
				(PTKVZ an)
				[01;31m(NF[00m
					(PX um sechs uhr zehn)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['LK', 'PTKVZ', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (36, 44), 'span': (38, 44), 'left siblings': ['LK', 'PTKVZ'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		[01;31m(SIMPX[00m
			(ADVX mal)
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen)[01;31m)[00m)
				[01;31m(LKMVCN[00m
					(SIMPX
						(LK kommen)
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (50, 72), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(VF sie)
		(FKOORD [01;33m(FKOORD[00m
			(FKOORD
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;31m(LKMVC[00m
					(LK mussen)
					(MF da)
					(VC umsteigen)[01;31m)[00m)
			[01;31m(LKMVCN[00m
				(SIMPX
					(LK kommen)
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an)) [01;33mFKOORD)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (52, 64), 'span': (61, 64), 'left siblings': ['LKMVC', 'KON'], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(VF sie)
		(FKOORD [01;33m(FKOORD[00m
			(FKOORD kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen)
			[01;31m(LKMVCN[00m
				(SIMPX
					(LK kommen)
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an)) [01;33mFKOORD)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'NF'], 'family': ['FKOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (52, 72), 'span': (64, 72), 'left siblings': ['FKOORD'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(VF sie)
		(FKOORD
			[01;36m(FKOORD[00m
				(FKOORD kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen)
				(SIMPX
					(LK kommen)
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an))[01;36m)[00m
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX neun uhr zwei))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['FKOORD', 'SIMPX'], 'family': ['FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [(NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei)))))], 'left siblings': [], 'auto preterminal span': (52, 68), 'span': (52, 68), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(VF sie)
		(FKOORD
			(FKOORD
				(FKOORD kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen)
				(SIMPX
					(LK kommen)
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an)))
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX neun uhr zwei))[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (64, 68), 'span': (65, 67), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach nachts)
		(SIMPX konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(VF sie)
		(FKOORD
			(FKOORD kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX neun uhr zwei))[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (52, 72), 'span': (68, 72), 'left siblings': ['FKOORD'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP moment ich gucke mal nach nachts konnen sie nicht fahren also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover das ist ein ic oh moment mal sie kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an um neun uhr zwei)

Sentence 632:
14 Initial errors
0 on fringe, 13 iterations
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			(MF [01;33m(SIMPX (MF[00m
				(NX
					(ADVX nur)
					[01;36m(NX[00m
						(NX samstag)
						(NX sonntag)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF
				[01;36m(MF[00m
					(ADVX dann)
					(PX um sechs uhr funf)[01;36m)[00m
				[01;36m(VF[00m
					(NX
						(ART der)
						(ADJX erste)
						(NN zug))[01;36m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(ADJX[00m
				(ADVX auch)
				(ADJX zu spat)[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'NF', 'ADVX'], 'mover info': [('ADVX', (26, 27))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'start right siblings': ['ADVX', 'ADJX'], 'end left siblings': ['LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 30), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			(MF [01;33m(SIMPX (MF[00m
				(NX
					(ADVX nur)
					[01;36m(NX[00m
						(NX samstag)
						(NX sonntag)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF
				[01;36m(MF[00m
					(ADVX dann)
					(PX um sechs uhr funf)[01;36m)[00m
				[01;36m(VF[00m
					(NX
						(ART der)
						(ADJX erste)
						(NN zug))[01;36m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(ADJX auch zu spat)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV nur))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF
				[01;36m(MF[00m
					(ADVX dann)
					(PX um sechs uhr funf)[01;36m)[00m
				[01;36m(VF[00m
					(NX
						(ART der)
						(ADJX erste)
						(NN zug))[01;36m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(ADJX auch zu spat)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(NX (ART der) (ADJX (ADJA erste)) (NN zug))], 'left siblings': [], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF
				(MF dann um sechs uhr funf)
				[01;36m(VF[00m
					(NX
						(ART der)
						(ADJX erste)
						(NN zug))[01;36m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(ADJX auch zu spat)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funf)))))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(ADJX auch zu spat)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kommen))), (MF (NX (PPER sie))), (VC (PTKVZ an)), (NF (PX (APPR um) (NX (NX (ADJX (CARD zehn)) (NN uhr)) (ADJX (CARD neunzehn)))))], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fahrt)[01;31m)[00m[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'LK', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF der)
			[01;31m(LK[00m
				(VVFIN fahrt)[01;31m)[00m)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VF', 'LK'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 2), 'span': (1, 2), 'left siblings': ['VF'], 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SIMPX[00m
			(VF der)
			(LK fahrt)
			[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (4, 9), 'left siblings': ['SIMPX', 'DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(VF der)
		(LK fahrt)
		[01;33m(SIMPX (MF[00m (MF nur samstag sonntag)
		[01;31m(SIMPX[00m
			(VF taglich) [01;33mMF)[00m
			(LK fahrt) [01;33mSIMPX)[00m
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (9, 19), 'left siblings': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(VF der)
		(LK fahrt)
		[01;36m(SIMPX[00m
			[01;36m(MF[00m
				(MF nur samstag sonntag)
				(VF taglich)[01;36m)[00m
			(LK fahrt)[01;36m)[00m
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:UNSET add
{'subtrees': ['MF', 'VF'], 'family': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'NN', 'ADJD'), 'right siblings': [(LK (VXFIN (VVFIN fahrt))), (MF (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funf))))) (VF (NX (ART der) (ADJX (ADJA erste)) (NN zug)))), (SIMPX (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER sie))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD zehn)) (NN uhr)) (ADJX (CARD neunzehn))))) (DM (ADVX (ADV also)))), (ADJX (ADVX (ADV auch)) (ADJX (PTKA zu) (ADJD spat)))], 'left siblings': [(SIMPX (VF (NX (PDS der))) (VVFIN fahrt)), (DM (ITJ ah)), (DM (NX (NN entschuldigung))), (VF (NX (PDS der))), (LK (VXFIN (VVFIN fahrt)))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(VF der)
		(LK fahrt)
		[01;36m(SIMPX[00m
			(MF nur samstag sonntag taglich)
			(LK fahrt)[01;36m)[00m
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:UNSET add
{'subtrees': ['MF', 'LK'], 'family': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'SIMPX', 'MF', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'NN', 'ADJD', 'VVFIN'), 'right siblings': [(MF (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funf))))) (VF (NX (ART der) (ADJX (ADJA erste)) (NN zug)))), (SIMPX (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER sie))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD zehn)) (NN uhr)) (ADJX (CARD neunzehn))))) (DM (ADVX (ADV also)))), (ADJX (ADVX (ADV auch)) (ADJX (PTKA zu) (ADJD spat)))], 'left siblings': [(SIMPX (VF (NX (PDS der))) (VVFIN fahrt)), (DM (ITJ ah)), (DM (NX (NN entschuldigung))), (VF (NX (PDS der))), (LK (VXFIN (VVFIN fahrt)))], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(VF der)
		(LK fahrt)
		(SIMPX nur samstag sonntag taglich fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SIMPX[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m
			(DM also)[01;31m)[00m
		(ADJX auch zu spat)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF', 'DM'], 'family': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'SIMPX', 'MF', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (19, 27), 'left siblings': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'SIMPX', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(VF der)
		(LK fahrt)
		(SIMPX nur samstag sonntag taglich fahrt)
		(MF dann um sechs uhr funf der erste zug)
		(LK kommen)
		(MF sie)
		(VC an)
		[01;31m(NF[00m
			(PX
				(APPR um)
				(NX zehn uhr neunzehn))[01;31m)[00m
		(DM also)
		(ADJX auch zu spat)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'SIMPX', 'MF', 'LK', 'MF', 'VC', 'NF', 'DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['DM', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (22, 26), 'left siblings': ['SIMPX', 'DM', 'DM', 'VF', 'LK', 'SIMPX', 'MF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP der fahrt ah entschuldigung der fahrt nur samstag sonntag taglich fahrt dann um sechs uhr funf der erste zug kommen sie an um zehn uhr neunzehn also auch zu spat)

Sentence 633:
25 Initial errors
0 on fringe, 15 iterations
5 Error:PP Attachment
3 Error:UNSET move
4 Error:NP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;31m(MF[00m [01;33m(MF (MF (MF[00m
				(NX sie)
				(ADVX denn)
				(ADVX eher)
				[01;33m(NX[00m (NX eine zentrale lage)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(PX[00m
					(PX am bahnhof oder am flughafen) [01;33mNX) MF)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV direkt))[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADVX so)
						(ADV ungefahr)) [01;33mSIMPX)[00m[01;36m)[00m
				(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)[01;31m)[00m
			[01;31m(NF[00m [01;33m(VF (NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;36m(NX[00m
						(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark))[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'PX'], 'mover info': [('PX', (8, 13))], 'old_family': ['PX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADVX so)
						(ADV ungefahr)) [01;33mSIMPX)[00m[01;36m)[00m
				(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)[01;31m)[00m
			[01;31m(NF[00m [01;33m(VF (NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;36m(NX[00m
						(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (31, 33))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADVX so)
						(ADV ungefahr)) [01;33mSIMPX)[00m[01;36m)[00m
				(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark))[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'NX', 'LK', 'MF'], 'mover info': [('NX', (23, 31))], 'old_family': ['ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['NX', 'LK', 'MF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (31, 32))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (31, 33), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(NX (NN mittelklasse)), (SIMPX (LK (VXFIN (VMFIN wollen))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (ADVX (ADV eher)) (NX (NX (ART eine) (ADJX (ADJA zentrale)) (NN lage)) (PX (PX (APPRART am) (NX (NN bahnhof))) (KON oder) (PX (APPRART am) (NX (NN flughafen))))))), (SIMPX (VF (PX (ADVX (ADV direkt)))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PIS eines))) (VC (VXINF (VVINF anbieten)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADVX (ADV so)) (ADV ungefahr)))), (SIMPX (NX (NX (ADJX (ADJA mittlere)) (NN preisklasse)) (PX (APPR mit) (NX (NX (NN restaurant)) (NX (NN konferenzraum)) (NX (NN garage)) (KON und) (NX (NN sauna))))) (NX (VF (NF (ART das) (NX (NN hotel))) (NX (NE forahotel)))) (LK (VXFIN (VVFIN heist))) (MF (NX (PDS das))))], 'auto preterminal span': (36, 49), 'span': (36, 49), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX mittelklasse)
		[01;31m(SIMPX[00m
			(LK wollen)
			[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (1, 13), 'left siblings': ['NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
		[01;31m(SIMPX[00m
			(VF
				[01;31m(PX[00m
					(ADVX
						(ADV direkt))[01;31m)[00m) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (13, 14), 'span': (13, 14), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
		[01;31m(SIMPX[00m
			(VF direkt) [01;33mMF)[00m
			(LK kann)
			(MF ich ihnen eines) [01;33mMF)[00m
			(VC anbieten)[01;31m)[00m
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['NX', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (13, 19), 'left siblings': ['NX', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		[01;36m(MF[00m
			[01;36m(MF[00m
				(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
				(VF direkt)[01;36m)[00m
			(LK kann)
			(MF ich ihnen eines)[01;36m)[00m
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET add
{'subtrees': ['MF', 'VF'], 'family': ['NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'right siblings': [(LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PIS eines))), (VC (VXINF (VVINF anbieten))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADVX (ADV so)) (ADV ungefahr)))), (SIMPX (NX (NX (ADJX (ADJA mittlere)) (NN preisklasse)) (PX (APPR mit) (NX (NX (NN restaurant)) (NX (NN konferenzraum)) (NX (NN garage)) (KON und) (NX (NN sauna))))) (NX (VF (NF (ART das) (NX (NN hotel))) (NX (NE forahotel)))) (LK (VXFIN (VVFIN heist))) (MF (NX (PDS das)))), (NF (SIMPX (VF (NX (NX (ART die) (NN kategorie)) (PX (APPR fur) (NX (ART ein) (NN einzelzimmer))))) (LK (VXFIN (VVFIN liegt))) (MF (PX (APPR bei) (NX (ADJX (ADJX (CARD hundert) (CARD dreisig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfunddreisig))) (NN mark))))))], 'left siblings': [(NX (NN mittelklasse)), (LK (VXFIN (VMFIN wollen)))], 'auto preterminal span': (2, 14), 'span': (2, 14), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		[01;36m(MF[00m
			(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt)
			(LK kann)
			(MF ich ihnen eines)[01;36m)[00m
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET add
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS'), 'right siblings': [(VC (VXINF (VVINF anbieten))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADVX (ADV so)) (ADV ungefahr)))), (SIMPX (NX (NX (ADJX (ADJA mittlere)) (NN preisklasse)) (PX (APPR mit) (NX (NX (NN restaurant)) (NX (NN konferenzraum)) (NX (NN garage)) (KON und) (NX (NN sauna))))) (NX (VF (NF (ART das) (NX (NN hotel))) (NX (NE forahotel)))) (LK (VXFIN (VVFIN heist))) (MF (NX (PDS das)))), (NF (SIMPX (VF (NX (NX (ART die) (NN kategorie)) (PX (APPR fur) (NX (ART ein) (NN einzelzimmer))))) (LK (VXFIN (VVFIN liegt))) (MF (PX (APPR bei) (NX (ADJX (ADJX (CARD hundert) (CARD dreisig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfunddreisig))) (NN mark))))))], 'left siblings': [(NX (NN mittelklasse)), (LK (VXFIN (VMFIN wollen)))], 'auto preterminal span': (2, 18), 'span': (2, 18), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		[01;31m(SIMPX[00m
			(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'LK', 'MF'], 'family': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (23, 36), 'left siblings': ['NX', 'LK', 'MF', 'VC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				[01;31m(NF[00m
					(ART das)
					[01;33m(NX[00m (NX hotel)[01;31m)[00m
				(NX forahotel))) [01;33mNX)[00m
		(LK heist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (31, 34), 'span': (31, 33), 'left siblings': [], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				(ART das)
				[01;36m(NX[00m
					(NX hotel)
					(NX forahotel)[01;36m)[00m))
		(LK heist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (32, 34), 'span': (32, 34), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'NX', 'NX', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (35, 36), 'left siblings': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'NX', 'NX', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(LK wollen)
		(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr)
		(NX mittlere preisklasse mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		[01;31m(NX[00m
			(PDS das)[01;31m)[00m
		(NF die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'NX', 'NX', 'LK', 'NX', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (35, 36), 'left siblings': ['NX', 'LK', 'MF', 'VC', 'SIMPX', 'NX', 'NX', 'LK'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP mittelklasse wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten das ist so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna das hotel forahotel heist das die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)

Sentence 634:
0 Initial errors
0 on fringe, 0 iterations

Sentence 635:
19 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
4 Error:Modifier Attachment
4 Error:Modifier Attachment
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD oder)
					[01;36m(SIMPX[00m
						[01;36m(VF[00m
							(C was)
							(MF
								[01;31m(ADJX[00m
									[01;31m(ADVX[00m
										(ADVX noch)
										[01;36m(ADVX[00m
											(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
									(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
							(VC ware)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(NX hotel)
					(NX loccumerhof))[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			[01;31m(ADJX[00m
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
			(PX mit konferenzraum)[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF
				(SIMPX
					(C was)
					(MF
						[01;31m(ADJX[00m
							[01;31m(ADVX[00m
								(ADVX noch)
								[01;36m(ADVX[00m
									(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
							(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
					(VC ware)))
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(NX hotel)
					(NX loccumerhof))[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			[01;31m(ADJX[00m
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
			(PX mit konferenzraum)[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (2, 5), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF was noch etwas preiswerter ware)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(NX hotel)
					(NX loccumerhof))[01;31m)[00m[01;31m)[00m
		[01;31m(ADJX[00m
			[01;31m(ADJX[00m
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
			(PX mit konferenzraum)[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADJX'], 'mover info': [('ADJX', (9, 12))], 'old_family': ['ADJX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 23), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(KOORD oder)
			(VF was noch etwas preiswerter ware)
			(LK ware)
			(MF
				(NX hotel loccumerhof)
				[01;31m(ADJX[00m
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m[01;31m)[00m))
		[01;31m(ADJX[00m
			(PX
				(APPR mit)
				(NX konferenzraum))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SIMPX', 'ADJX', 'SIMPX'], 'auto preterminal span': (14, 23), 'span': (14, 23), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(SIMPX
			(KOORD oder)
			(VF was noch etwas preiswerter ware)
			(LK ware)
			(MF
				(NX hotel loccumerhof)
				[01;31m(ADJX[00m
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m[01;31m)[00m))
		[01;31m(ADJX[00m
			(PX
				(APPR mit)
				(NX konferenzraum))[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen)
		[01;31m(ADJX[00m
			(PX
				(APPR mit)
				(NX konferenzraum))[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'ADJX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (12, 14), 'left siblings': ['SIMPX'], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen)
		(PX mit konferenzraum)
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (20, 23), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen)
		(PX mit konferenzraum)
		(SIMPX
			(NX die preislage)
			(NX
				[01;36m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					(ADJX hundert achtzig)[01;36m)[00m
				(NN mark)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum die preislage hundert funfundvierzig mark bis hundert achtzig mark)

Sentence 636:
8 Initial errors
0 on fringe, 3 iterations
5 Error:NP Attachment
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(VF fur welches)
				(LK hatten)
				(MF sie sich jetzt)
				(VC entschieden)[01;31m)[00m
			[01;36m(PX[00m
				[01;36m(NF[00m
					[01;31m(PX[00m
						(APPR fur)
						[01;31m(NX[00m [01;33m(NX[00m
							(NX das)
							[01;33m(PX[00m (PX mit konferenzraum)[01;31m)[00m[01;31m)[00m
					(NX hotel loccumerhof)[01;36m)[00m[01;36m)[00m)) [01;33mPX) NX)[00m[01;36m)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'NX'], 'mover info': [('NX', (11, 13))], 'old_family': ['SIMPX', 'PX', 'NX'], 'start left siblings': ['SIMPX', 'PX'], 'auto preterminals': ('APPR', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 13), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(VF fur welches)
				(LK hatten)
				(MF sie sich jetzt)
				(VC entschieden)[01;31m)[00m
			[01;36m(NF[00m
				(PX
					(APPR fur)
					(NX das mit konferenzraum hotel loccumerhof))[01;36m)[00m))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'mover info': [('PX', (7, 13))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('APPR', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 13), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF fur welches)
			(LK hatten)
			(MF sie sich jetzt)
			(VC entschieden)
			[01;36m(NF[00m
				(PX
					(APPR fur)
					(NX das mit konferenzraum hotel loccumerhof))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'right siblings': [], 'left siblings': [(VF (PX (APPR fur) (NX (PWS welches)))), (LK (VXFIN (VAFIN hatten))), (MF (NX (PPER sie)) (NX (PRF sich)) (ADVX (ADV jetzt))), (VC (VXINF (VVPP entschieden)))], 'auto preterminal span': (7, 13), 'span': (7, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP fur welches hatten sie sich jetzt entschieden fur das mit konferenzraum hotel loccumerhof)

Sentence 637:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF wir)
			(LK wollten)
			(MF
				(PX in den nachsten drei monaten)
				(ADVX doch)
				(ADVX noch)
				(ADVX mal)
				(APPR nach)
				[01;31m(PX[00m
					(PX nach hannover)
					(PX zu unserer filiale)[01;31m)[00m)
			(VC fahren))
		(SIMPX haben sie jetzt einen freien termin gefunden)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'CARD', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'APPR', 'NE', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 18), 'span': (13, 18), 'left siblings': ['PX', 'ADVX', 'ADVX', 'ADVX', 'APPR'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren haben sie jetzt einen freien termin gefunden)

Sentence 638:
7 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK meinen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ADVX eher)
				(NX flug)[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['DM', 'PX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'PX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 9), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPRART am) (NX (NN zwanzigsten)))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			(DM also)
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(DM also)
		(PX am zwanzigsten)
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay also am zwanzigsten was meinen sie eher flug)

Sentence 639:
0 Initial errors
0 on fringe, 0 iterations

Sentence 640:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(ADJX am besten)
			(SIMPX wahrscheinlich brauchen wir auch eine reservierung)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['ADJX', 'SIMPX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 9), 'span': (1, 9), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja am besten wahrscheinlich brauchen wir auch eine reservierung)

Sentence 641:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			[01;36m(KOORD[00m [01;31m(VF[00m
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Single Word Phrase
{'family': ['KOORD'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Unary
{'subtrees': ['KOORD'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 12), 'span': (2, 3), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut ja aber gehen wir doch dann sonntag abend noch ins theater)

Sentence 642:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;31m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF einen konferenzraum)[01;31m)[00m)
		(SIMPX aber das brauchen wir eigentlich nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK war)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(MF[00m [01;31m(VF[00m
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(ART das)[01;36m)[00m[01;36m)[00m
					(NN einzelzimmer))[01;31m)[00m[01;36m)[00m
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:Different label
{'family': ['MF', 'LK', 'MF', 'VC'], 'auto preterminal span': (29, 31), 'span': (29, 31), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;31m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF einen konferenzraum)[01;31m)[00m)
		(SIMPX aber das brauchen wir eigentlich nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK war)[01;31m)[00m
		[01;31m(SIMPX[00m
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(ART das)[01;36m)[00m[01;36m)[00m
					(NN einzelzimmer)))
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN einzelzimmer)], 'left siblings': [], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;31m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF einen konferenzraum)[01;31m)[00m)
		(SIMPX aber das brauchen wir eigentlich nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK war)[01;31m)[00m
		[01;31m(SIMPX[00m
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART das))[01;36m)[00m
					(NN einzelzimmer)))
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART',), 'right siblings': [(NN einzelzimmer)], 'left siblings': [], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;31m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF einen konferenzraum)[01;31m)[00m)
		(SIMPX aber das brauchen wir eigentlich nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK war)[01;31m)[00m
		[01;31m(SIMPX[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 21), 'span': (17, 21), 'left siblings': ['SIMPX', 'KON', 'DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral und ja okay es hat einen konferenzraum)
		(SIMPX aber das brauchen wir eigentlich nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK war)[01;31m)[00m
		[01;31m(SIMPX[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (27, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war)
		(SIMPX das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral und ja okay es hat einen konferenzraum)
		(SIMPX aber das brauchen wir eigentlich nicht)
		(VF da)
		(LK war)
		[01;31m(SIMPX[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (29, 36), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich war das letzte mal war ich im intercityhotel das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht da war das einzelzimmer hat ungefahr zweihundert mark gekostet)

Sentence 643:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		[01;33m(SIMPX[00m (SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung) [01;33mSIMPX)[00m
			(KOUS weil)
			(SIMPX
				(VF das letzte mal)
				(LK haben)
				(MF
					(NX die)
					[01;31m(ADJX[00m
						(ADVX wirklich)
						[01;36m(ADJX[00m
							(ADJD gut)[01;36m)[00m[01;31m)[00m)
				(VC gespielt))[01;31m)[00m
		(SIMPX
			(VF ansonsten)
			(LK weis)
			(MF ich gar nicht)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;36m(PX[00m
							(PX im moment)
							(PX in hannover)[01;36m)[00m
						(ADVX so)
						(ADVX los))
					(VC ist))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (30, 31))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'ADJD'), 'start right siblings': ['ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (29, 32), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		[01;33m(SIMPX[00m (SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung) [01;33mSIMPX)[00m
			(KOUS weil)
			(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX
			(VF ansonsten)
			(LK weis)
			(MF ich gar nicht)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;36m(PX[00m
							(PX im moment)
							(PX in hannover)[01;36m)[00m
						(ADVX so)
						(ADVX los))
					(VC ist))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV so)), (ADVX (ADV los))], 'left siblings': [], 'auto preterminal span': (39, 43), 'span': (39, 43), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		[01;33m(SIMPX[00m (SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung) [01;33mSIMPX)[00m
			(KOUS weil)
			(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 12), 'span': (8, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		[01;33m(SIMPX[00m (SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung) [01;33mSIMPX)[00m
			(KOUS weil)
			(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (17, 33), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		[01;36m(SIMPX[00m
			(SIMPX das heist ballhof oder so)
			(SIMPX vielleicht haben die auch eine gute inszenierung)[01;36m)[00m
		(KOUS weil)
		(SIMPX das letzte mal haben die wirklich gut gespielt)
		(SIMPX ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [(KOUS weil), (SIMPX (VF (NX (ART das) (ADJX (ADJA letzte)) (NN mal))) (LK (VXFIN (VAFIN haben))) (MF (NX (PDS die)) (ADVX (ADV wirklich)) (ADJX (ADJD gut))) (VC (VXINF (VVPP gespielt)))), (SIMPX (VF (ADVX (ADV ansonsten))) (LK (VXFIN (VVFIN weis))) (MF (NX (PPER ich)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (NF (SIMPX (C (NX (PWS was))) (MF (PX (PX (APPRART im) (NX (NN moment))) (PX (APPR in) (NX (NE hannover)))) (ADVX (ADV so)) (ADVX (ADV los))) (VC (VXFIN (VAFIN ist))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV bestimmt)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (NX (ART ein) (NN theater)) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (12, 24), 'span': (12, 24), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja das ist bestimmt nicht schlecht ich kenne ein theater in hannover das heist ballhof oder so vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)

Sentence 644:
0 Initial errors
0 on fringe, 0 iterations

Sentence 645:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		(SIMPX so weit ist das ja nicht bis hannover)
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF wir mit dem zug ja nur zwei drei stunden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (18, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach ich finde mit dem zug konnen wir auch fahren so weit ist das ja nicht bis hannover da fahren wir mit dem zug ja nur zwei drei stunden)

Sentence 646:
0 Initial errors
0 on fringe, 0 iterations

Sentence 647:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK mus)
			(MF mal)
			(VC gucken)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;31m(NX[00m
							(NX samstag)
							(NX sonntag)[01;31m)[00m)
					(VC fahrt))))
		(SIMPX
			(VF wann)
			(LK wollen)
			(MF
				(NX sie)
				(ADVX denn)
				[01;36m(ADJX[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
			(VC fahren))
		(SIMPX mittags reicht eigentlich)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK mus)
			(MF mal)
			(VC gucken)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;31m(NX[00m
							(NX samstag)
							(NX sonntag)[01;31m)[00m)
					(VC fahrt))))
		(SIMPX wann wollen sie denn ungefahr fahren)
		(SIMPX mittags reicht eigentlich)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 7), 'span': (5, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich mus mal gucken was samstag sonntag fahrt wann wollen sie denn ungefahr fahren mittags reicht eigentlich)

Sentence 648:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(LV[00m
			(SIMPX
				(C wenn)
				(MF wir mittags)
				(VC fahren))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnten)
			(MF wir den)
			(VC nehmen)
			[01;36m(PX[00m
				(NF
					(PX um zwolf uhr funfundvierzig)
					(PX zum beispiel))[01;36m)[00m[01;31m)[00m
		(SIMPX dann sind wir um sechzehn uhr vier in hannover)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (NX (PDS den))) (VC (VXINF (VVINF nehmen))) (NF (PX (APPR um) (NX (NX (ADJX (CARD zwolf)) (NN uhr)) (ADJX (CARD funfundvierzig)))) (PX (APPRART zum) (NX (NN beispiel))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (NX (ADJX (CARD sechzehn)) (NN uhr)) (ADJX (CARD vier)))) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'TURN', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(LV wenn wir mittags fahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnten)
			(MF wir den)
			(VC nehmen)
			[01;36m(PX[00m
				(NF
					(PX um zwolf uhr funfundvierzig)
					(PX zum beispiel))[01;36m)[00m[01;31m)[00m
		(SIMPX dann sind wir um sechzehn uhr vier in hannover)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN konnten))), (MF (NX (PPER wir)) (NX (PDS den))), (VC (VXINF (VVINF nehmen)))], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(LV wenn wir mittags fahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnten)
			(MF wir den)
			(VC nehmen)
			(PX um zwolf uhr funfundvierzig zum beispiel)[01;31m)[00m
		(SIMPX dann sind wir um sechzehn uhr vier in hannover)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'PX'], 'family': ['LV', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'ADV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (4, 15), 'left siblings': ['LV'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP wenn wir mittags fahren da konnten wir den nehmen um zwolf uhr funfundvierzig zum beispiel dann sind wir um sechzehn uhr vier in hannover)

Sentence 649:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kann)
			(MF ja schon mal zwei platze)
			(VC reservieren lassen)[01;31m)[00m
		(SIMPX
			(VF sie)
			(LK rauchen)
			(SIMPX glaube ich)
			[01;31m(MF[00m
				(ADVX auch)
				(ADVX nicht)[01;31m)[00m)
		(DM frau meurer)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'VVINF', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'NN', 'NE'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (2, 11), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja schon mal zwei platze)
		(VC reservieren lassen)
		(SIMPX
			(VF sie)
			(LK rauchen)
			(SIMPX glaube ich)
			[01;31m(MF[00m
				(ADVX auch)
				(ADVX nicht)[01;31m)[00m)
		(DM frau meurer)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['VF', 'LK', 'SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 17), 'span': (15, 17), 'left siblings': ['VF', 'LK', 'SIMPX'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ja ich kann ja schon mal zwei platze reservieren lassen sie rauchen glaube ich auch nicht frau meurer)

Sentence 650:
0 Initial errors
0 on fringe, 0 iterations

Sentence 651:
10 Initial errors
0 on fringe, 9 iterations
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Unary
2 Error:UNSET move
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kann)
			(MF ja mal im reiseburo)
			(VC anrufen)[01;31m)[00m
		(KON oder)
		(APPRART im)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX wo wir schlafen wollen)
					[01;36m(NF[00m
						(SIMPX [01;33m(SIMPX[00m
							(C ob)
							(MF wir ein hotel)
							(VC nehmen)
							(NF oder pension))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF schlafen)) (VXFIN (VMFIN wollen))))], 'auto preterminal span': (20, 27), 'span': (20, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kann)
			(MF ja mal im reiseburo)
			(VC anrufen)[01;31m)[00m
		(KON oder)
		(APPRART im)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX wo wir schlafen wollen)
					[01;33m(SIMPX[00m (NF ob wir ein hotel nehmen oder pension)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KON', 'APPRART', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['KON', 'APPRART', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX wo wir schlafen wollen)
					[01;33m(SIMPX[00m (NF ob wir ein hotel nehmen oder pension)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (10, 27), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX wo wir schlafen wollen)
				[01;33m(SIMPX[00m (NF ob wir ein hotel nehmen oder pension)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (16, 27), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		[01;31m(SIMPX[00m
			(SIMPX wo wir schlafen wollen)
			[01;33m(SIMPX[00m (NF ob wir ein hotel nehmen oder pension)[01;31m)[00m
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF', 'SIMPX'], 'mover info': [('NF', (20, 27))], 'old_family': ['SIMPX', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'auto preterminal span': (0, 42), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		(SIMPX wo wir schlafen wollen)
		(SIMPX
			(NF ob wir ein hotel nehmen oder pension)
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'KON', 'VCN'], 'family': ['VF', 'LK', 'MF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (32, 42), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		(SIMPX wo wir schlafen wollen)
		(SIMPX
			(NF ob wir ein hotel nehmen oder pension)
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;33m(VXINF (VC[00m (VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (34, 42), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'KON'], 'label': 'VCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		(SIMPX wo wir schlafen wollen)
		(SIMPX
			(NF ob wir ein hotel nehmen oder pension)
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(VC anrufen)
						(KON und)
						(VC fragen)[01;36m)[00m[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'VC'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(VF wir)
		(LK mussen)
		(MF uns eh noch)
		(VC uberlegen)
		(SIMPX wo wir schlafen wollen)
		(SIMPX
			(NF ob wir ein hotel nehmen oder pension)
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					(VXINF
						(VC anrufen)
						(KON und)
						(VC fragen))[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension da kann ich ja mal anrufen und fragen ob die ein programm haben fur theater)

Sentence 652:
18 Initial errors
0 on fringe, 13 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(ADVX ja)
				(ADVX auch)
				[01;36m(ADJX[00m [01;31m(NX[00m
					(NN bahntickets)[01;31m)[00m[01;36m)[00m)
			(VC kaufen))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX
				(C das)
				[01;31m(MF[00m
					(NX die)
					[01;36m(MF[00m
						(NX mir)
						(ADVX da)[01;36m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m
					[01;36m(MVC[00m [01;31m(MVCN[00m
						(MF die da)
						(VC anrufen)
						(NF vielleicht)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;31m(MVCN[00m
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m
						(VC reservieren)
						(NF fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'ADJX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX
				(C das)
				[01;31m(MF[00m
					(NX die)
					[01;36m(MF[00m
						(NX mir)
						(ADVX da)[01;36m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m
					[01;36m(MVC[00m [01;31m(MVCN[00m
						(MF die da)
						(VC anrufen)
						(NF vielleicht)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;31m(MVCN[00m
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m
						(VC reservieren)
						(NF fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['MVC', 'KON', 'MVCN'], 'auto preterminal span': (38, 42), 'span': (38, 42), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX
				(C das)
				[01;31m(MF[00m
					(NX die)
					[01;36m(MF[00m
						(NX mir)
						(ADVX da)[01;36m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m
					(MVC die da anrufen vielleicht)
					(KON und)
					[01;31m(MVCN[00m
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m
						(VC reservieren)
						(NF fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'SIMPX', 'C', 'FKOORD'], 'mover info': [('SIMPX', (24, 33)), ('SIMPX', (33, 37))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['SIMPX', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['C', 'FKOORD'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX
				(C das)
				[01;31m(MF[00m
					(NX die)
					[01;36m(MF[00m
						(NX mir)
						(ADVX da)[01;36m)[00m[01;31m)[00m)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (2, 8))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 8), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX
				(C das)
				[01;31m(MF[00m
					(NX die)
					[01;36m(MF[00m
						(NX mir)
						(ADVX da)[01;36m)[00m[01;31m)[00m)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'NX', 'MF'], 'mover info': [('NX', (34, 35))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': ['C'], 'auto preterminal span': (33, 37), 'movers': ['NX'], 'old_parent': 'MF', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': ['MF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF ich da))[01;36m)[00m
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV'), 'right siblings': [(SIMPX (KOORD (KON oder)) (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gehe))) (MF (PX (APPRART ins) (NX (NN reiseburo))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV auch)) (ADJX (NN bahntickets))) (VC (VXINF (VVINF kaufen)))), (SIMPX (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN frage))) (MF (NX (PPER ich)) (ADVX (ADV da)) (ADVX (ADV gleich)) (PX (APPR wegen) (NX (ART der) (NN hotelbuchung))))) (SIMPX (C (KOUS das)) (NX (PDS die)) (MF (NX (PPER mir)) (ADVX (ADV da)))) (C (KOUS das)) (FKOORD (MVC (MF (NX (PDS die)) (ADVX (ADV da))) (VC (VXFIN (VVFIN anrufen))) (NF (ADVX (ADV vielleicht)))) (KON und) (MVCN (MF (NX (ADJX (CARD zwei)) (NN zimmer))) (VC (VXFIN (VVFIN reservieren))) (NF (PX (APPR fur) (NX (ART eine) (NN termine)))))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN meinen))) (MF (NX (PPER sie)) (NF (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN wissen))) (MF (NX (PDS das)) (PX (APPR bei) (NX (ART der) (NN bahn))))))))], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF die)
						(LK wissen)
						(MF das bei der bahn)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF
			(NX sie)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF die)
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 8), 'span': (2, 8), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF
			(NX sie)
			[01;31m(SIMPX[00m
				(VF die)
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 8), 'span': (2, 8), 'left siblings': ['NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die wissen das bei der bahn)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'C', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (24, 49), 'span': (24, 33), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die wissen das bei der bahn)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK frage)
			(MF ich da gleich wegen der hotelbuchung)
			(SIMPX das die mir da)
			(C das)
			[01;31m(FKOORD[00m
				(MVC die da anrufen vielleicht)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (24, 49), 'span': (38, 49), 'left siblings': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die wissen das bei der bahn)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK frage)
			(MF ich da gleich wegen der hotelbuchung)
			(SIMPX das die mir da)
			(C das)
			(MVC die da anrufen vielleicht)
			(KON und)
			[01;31m(MVCN[00m
				[01;31m(MF[00m
					(NX
						(ADJX zwei)
						(NN zimmer))[01;31m)[00m
				(VC reservieren)
				(NF fur eine termine)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['VC', 'NF'], 'parent': 'MVCN', 'auto preterminal span': (43, 49), 'span': (43, 45), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die wissen das bei der bahn)
		(NF wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK frage)
			(MF ich da gleich wegen der hotelbuchung)
			(SIMPX das die mir da)
			(C das)
			(MVC die da anrufen vielleicht)
			(KON und)
			[01;31m(MVCN[00m
				(NX zwei zimmer)
				(VC reservieren)
				(NF fur eine termine)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['NX', 'VC', 'NF'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'C', 'MVC', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (24, 49), 'span': (43, 49), 'left siblings': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'C', 'MVC', 'KON'], 'label': 'MVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen und dann frage ich da gleich wegen der hotelbuchung das die mir da das die da anrufen vielleicht und zwei zimmer reservieren fur eine termine)

Sentence 653:
3 Initial errors
0 on fringe, 2 iterations
2 Error:NP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX sollen wir so verbleiben)
		[01;31m(SIMPX[00m
			(VF da)
			(LK rufe)
			(MF
				(NX ich)
				(NX sie)
				[01;31m(ADVX[00m
					(NX ein paar tage)
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m
				(ADVX noch)
				(ADVX mal))
			(VC an)[01;31m)[00m
		(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (6, 14), 'movers': ['NX'], 'old_parent': 'ADVX', 'end right siblings': ['ADVX', 'ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sollen wir so verbleiben)
		[01;31m(SIMPX[00m
			(VF da)
			(LK rufe)
			(MF ich sie ein paar tage vorher noch mal)
			(VC an)[01;31m)[00m
		(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPRART', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (4, 15), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sollen wir so verbleiben da rufe ich sie ein paar tage vorher noch mal an ansonsten sehen wir uns ja vielleicht im in der firma)

Sentence 654:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX dann)
				(PX ganz nach lust und laune)[01;31m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				[01;36m(PX[00m
					(PX ganz nach lust und laune)
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'NX', 'NX'], 'auto preterminal span': (45, 46), 'span': (45, 46), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX dann)
				(PX ganz nach lust und laune)[01;31m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				[01;36m(PX[00m
					(PX ganz nach lust und laune)
					(ADVX stundlich)[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['NX', 'PX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD'), 'right siblings': [(NX (PRF uns)), (NX (ART einen) (NN zug))], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (40, 46), 'span': (40, 46), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX dann)
				(PX ganz nach lust und laune)[01;31m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX ganz nach lust und laune stundlich)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (PX (PX (ADVX (ADV ganz)) (APPR nach) (NX (NX (NN lust)) (KON und) (NX (NN laune)))) (ADVX (ADJD stundlich)))], 'auto preterminal span': (46, 49), 'span': (46, 49), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX dann)
				(PX ganz nach lust und laune)[01;31m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'ADVX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 27), 'span': (19, 27), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen das konnen wir uns dann ganz nach lust und laune vielleicht haben wir noch lust irgendwie vormittags zu bummeln und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)

Sentence 655:
0 Initial errors
0 on fringe, 0 iterations

Sentence 656:
10 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
3 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(DM[00m
			[01;36m(NX[00m
				[01;31m(DM[00m
					(ADVX
						(ADV so))[01;31m)[00m
				[01;31m(DM[00m
					[01;31m(NX[00m
						(ADJX guten)
						(NN tag)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;36m(NX[00m
						[01;33m(NX[00m (ADJX stadtische)
						[01;31m(NX[00m
							(NX reiseburo) [01;33mNX)[00m
							(NX bonn)[01;31m)[00m[01;36m)[00m)))
		[01;31m(DM[00m
			(NX
				(NX bergmann)
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['DM', 'ADJX', 'NN'], 'mover info': [('DM', (1, 2))], 'old_family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM
			(NX
				[01;31m(DM[00m
					(ADVX
						(ADV so))[01;31m)[00m
				(ADJX guten)
				(NN tag)))
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;36m(NX[00m
						[01;33m(NX[00m (ADJX stadtische)
						[01;31m(NX[00m
							(NX reiseburo) [01;33mNX)[00m
							(NX bonn)[01;31m)[00m[01;36m)[00m)))
		[01;31m(DM[00m
			(NX
				(NX bergmann)
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADJX', 'NX', 'NX'], 'mover info': [('ADJX', (7, 8))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (6, 10), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'added and moved': True, 'end right siblings': ['NX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM
			(NX
				[01;31m(DM[00m
					(ADVX
						(ADV so))[01;31m)[00m
				(ADJX guten)
				(NN tag)))
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX stadtische reiseburo bonn))))
		[01;31m(DM[00m
			(NX
				(NX bergmann)
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (NX (ADJX (ADJA stadtische)) (NX (NN reiseburo))) (NX (NE bonn)))], 'left siblings': [], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM
			(NX
				[01;31m(DM[00m
					(ADVX
						(ADV so))[01;31m)[00m
				(ADJX guten)
				(NN tag)))
		(SIMPX hier ist das stadtische reiseburo bonn)
		[01;31m(DM[00m
			(NX
				(NX bergmann)
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJA', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (1, 4), 'span': (1, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so guten tag)
		(SIMPX hier ist das stadtische reiseburo bonn)
		[01;31m(DM[00m
			(NX
				(NX bergmann)
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (10, 12), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja so guten tag hier ist das stadtische reiseburo bonn bergmann apparat wie kann ich ihnen helfen)

Sentence 657:
11 Initial errors
0 on fringe, 10 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF [01;33m(MF[00m
						[01;36m(MF[00m
							(NX das)
							(PX von kolnbonn)[01;36m)[00m
						[01;31m(SIMPX[00m
							(C wenn)
							(MF sie von kolnbonn) [01;33mMF)[00m
							(VC fliegen wollen)[01;31m)[00m
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m
						(ADJX moglich))
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'ADVX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (8, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF [01;33m(MF[00m
						[01;36m(MF[00m
							(NX das)
							(PX von kolnbonn)[01;36m)[00m
						[01;31m(SIMPX[00m
							(C wenn)
							(MF sie von kolnbonn) [01;33mMF)[00m
							(VC fliegen wollen)
							(ADVX nur)[01;31m)[00m
						[01;31m(ADVX[00m
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						(ADJX moglich))
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['MF', 'SIMPX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen))) (ADVX (ADV nur))), (ADVX (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))), (ADJX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF [01;33m(MF[00m
						(MF das von kolnbonn)
						[01;31m(SIMPX[00m
							(C wenn)
							(MF sie von kolnbonn) [01;33mMF)[00m
							(VC fliegen wollen)
							(ADVX nur)[01;31m)[00m
						[01;31m(ADVX[00m
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						(ADJX moglich))
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': ['DM', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (2, 23), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C das)
				(MF [01;33m(MF[00m
					(MF das von kolnbonn)
					[01;31m(SIMPX[00m
						(C wenn)
						(MF sie von kolnbonn) [01;33mMF)[00m
						(VC fliegen wollen)
						(ADVX nur)[01;31m)[00m
					[01;31m(ADVX[00m
						(ADVX einmal)
						(PX am tag)[01;31m)[00m
					(ADJX moglich))
				(VC ist)[01;31m)[00m[01;31m)[00m
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': ['DM', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (7, 23), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		[01;31m(SIMPX[00m
			(C das)
			(MF [01;33m(MF[00m
				(MF das von kolnbonn)
				[01;31m(SIMPX[00m
					(C wenn)
					(MF sie von kolnbonn) [01;33mMF)[00m
					(VC fliegen wollen)
					(ADVX nur)[01;31m)[00m
				[01;31m(ADVX[00m
					(ADVX einmal)
					(PX am tag)[01;31m)[00m
				(ADJX moglich))
			(VC ist)[01;31m)[00m
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': ['DM', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (7, 23), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(C das)
		(MF [01;33m(MF[00m
			(MF das von kolnbonn)
			[01;31m(SIMPX[00m
				(C wenn)
				(MF sie von kolnbonn) [01;33mMF)[00m
				(VC fliegen wollen)
				(ADVX nur)[01;31m)[00m
			[01;31m(ADVX[00m
				(ADVX einmal)
				(PX am tag)[01;31m)[00m
			(ADJX moglich))
		(VC ist)
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['C', 'MF', 'VC', 'ADVX'], 'family': ['MF', 'SIMPX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'right siblings': ['ADVX', 'ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 22), 'span': (11, 18), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(C das)
		(MF
			[01;36m(MF[00m
				(MF das von kolnbonn)
				(C wenn)
				(MF sie von kolnbonn)[01;36m)[00m
			(VC fliegen wollen)
			(ADVX nur)
			[01;31m(ADVX[00m
				(ADVX einmal)
				(PX am tag)[01;31m)[00m
			(ADJX moglich))
		(VC ist)
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'C', 'MF'], 'family': ['MF', 'VC', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE'), 'right siblings': [(VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen))), (ADVX (ADV nur)), (ADVX (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))), (ADJX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (8, 15), 'span': (8, 15), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(C das)
		(MF
			(MF das von kolnbonn wenn sie von kolnbonn)
			(VC fliegen wollen)
			(ADVX nur)
			[01;31m(ADVX[00m
				(ADVX einmal)
				(PX am tag)[01;31m)[00m
			(ADJX moglich))
		(VC ist)
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'VC', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 22), 'span': (18, 21), 'left siblings': ['MF', 'VC', 'ADVX'], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(C das)
		(MF das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich)
		(VC ist)
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'KON', 'PX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'C', 'MF', 'VC', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (25, 35), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'C', 'MF', 'VC', 'DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(C das)
		(MF das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich)
		(VC ist)
		(DM und zwar)
		(PX um sieben uhr zehn)
		(KON und)
		[01;31m(PX[00m
			(PX am wochenende)
			(ADVX leider)
			(ADVX gar nicht)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'C', 'MF', 'VC', 'DM', 'PX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (30, 35), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'C', 'MF', 'VC', 'DM', 'PX', 'KON'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja selbstverstandlich ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist und zwar um sieben uhr zehn und am wochenende leider gar nicht)

Sentence 658:
0 Initial errors
0 on fringe, 0 iterations

Sentence 659:
0 Initial errors
0 on fringe, 0 iterations

Sentence 660:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ADJX siebten)
				[01;36m(NX[00m
					(NN siebten)[01;36m)[00m[01;31m)[00m
			(APPR bis)
			(PX zum zehnten juli)[01;31m)[00m
		(DM ja)
		(SIMPX das kann ich machen)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADJX', 'NX', 'APPR', 'PX'], 'mover info': [('ADJX', (0, 1))], 'old_family': ['ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': ['NX', 'APPR', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADJX siebten)
			(NX siebten)
			(APPR bis)
			(PX zum zehnten juli)[01;31m)[00m
		(DM ja)
		(SIMPX das kann ich machen)))
Step:PP Attachment
{'subtrees': ['ADJX', 'NX', 'APPR', 'PX'], 'family': ['NX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'PTKANT', 'PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP siebten siebten bis zum zehnten juli ja das kann ich machen)

Sentence 661:
13 Initial errors
0 on fringe, 9 iterations
3 Error:Clause Attachment
3 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX gerade)
					(ADVX ja)
					(ADVX nicht)
					[01;31m(ADJX[00m
						(ADJX so gut) [01;33mMF)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(ADJD informiert)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				[01;33m(SIMPX (NF[00m (NF das der vielleicht abends ist)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK werde)
				(MF ich noch)
				(VC nachgucken)[01;31m)[00m[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (26, 30))], 'old_family': ['DM', 'P', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'P', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 30), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX gerade)
					(ADVX ja)
					(ADVX nicht)
					[01;31m(ADJX[00m
						(ADJX so gut) [01;33mMF)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(ADJD informiert)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			[01;36m(NF[00m
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADJD'], 'mover info': [('ADJD', (9, 10))], 'old_family': ['ADJX', 'ADJD'], 'start left siblings': ['ADJX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 10), 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich gerade ja nicht so gut)
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(ADJD informiert)[01;36m)[00m[01;36m)[00m)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			[01;36m(NF[00m
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN bin))), (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich gerade ja nicht so gut)
				[01;36m(VC[00m
					(VXINF
						(ADJD informiert))[01;36m)[00m)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			[01;36m(NF[00m
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)[01;36m)[00m)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN bin))), (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			[01;36m(NF[00m
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (VC (VXINF (VVINF geben))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut))) (VC (VXINF (ADJD informiert))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'P', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			[01;36m(NF[00m
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke))), (MF (ADVX (ADV auch)))], 'auto preterminal span': (21, 30), 'span': (21, 30), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(NF
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wird)
			(MF es einen flug)
			(VC geben)[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(NF
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (11, 17), 'left siblings': ['DM', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		(VF da)
		(LK wird)
		(MF es einen flug)
		(VC geben)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(NF
				(SIMPX
					(NF das der vielleicht abends ist)
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 30), 'span': (26, 30), 'left siblings': ['NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP tja da bin ich gerade ja nicht so gut informiert aber da wird es einen flug geben und ich denke auch das der vielleicht abends ist werde ich noch nachgucken)

Sentence 662:
12 Initial errors
0 on fringe, 6 iterations
5 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(ADVX[00m
					(VF
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m)[01;36m)[00m
				(LK fahrt)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ein zug)
					[01;33m(PX[00m (PX um achtundfunfzig)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX die volle stunde) [01;33mPX) MF) SIMPX)[00m
					[01;33m(NF[00m (ADVX immer)[01;31m)[00m
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m[01;31m)[00m [01;33mNF)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX'], 'mover info': [('NX', (15, 18))], 'old_family': ['NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'PIS', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'start right siblings': ['ADVX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 38), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;36m(ADVX[00m
					(VF
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m)[01;36m)[00m
				(LK fahrt)
				(MF ein zug um achtundfunfzig die volle stunde))
			[01;36m(NF[00m [01;31m(NX[00m
				[01;31m(NX[00m
					(ADVX
						(ADV immer))[01;31m)[00m
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde)
			[01;36m(NF[00m [01;31m(NX[00m
				[01;31m(NX[00m
					(ADVX
						(ADV immer))[01;31m)[00m
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'NF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde)
			(NF
				[01;31m(NX[00m
					(ADVX
						(ADV immer))[01;31m)[00m
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m)[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'right siblings': [(SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN dauert))) (MF (ADVX (ADV dann)) (NX (NX (ADJX (CARD drei)) (NN stunden)) (KON und) (NX (CARD zwanzig))))), (SIMPX (VF (NX (PIS man))) (LK (VXFIN (VMFIN mus))) (MF (ADVX (ADV da)) (ADVX (ADV aber))) (VC (VXINF (VVINF bedenken))) (NF (SIMPX (C (KOUS das)) (MF (NX (PIS man)) (PX (APPR in) (NX (NE dortmund)))) (VC (VXINF (VVINF umsteigen)) (VXFIN (VMFIN muste))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPR mit) (NX (ART dem) (NN zug)))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (ADJD moglich)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))))], 'auto preterminal span': (9, 20), 'span': (9, 20), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde)
			(NF
				[01;31m(NX[00m
					(ADVX
						(ADV immer))[01;31m)[00m
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD'), 'right siblings': ['NX'], 'parent': 'NF', 'auto preterminal span': (18, 20), 'span': (18, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde)
			(NF
				(ADVX immer)
				[01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'CARD'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (18, 20), 'span': (19, 20), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja mit dem zug ist es moglich das ist stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig der dauert dann drei stunden und zwanzig man mus da aber bedenken das man in dortmund umsteigen muste)

Sentence 663:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK sagten)
				(MF jetzt eben)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF sie)
					(LK mochten)
					(MF zentral))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'NF'], 'mover info': [('NF', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 9), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX sie sagten jetzt eben)
		[01;31m(NF[00m
			(SIMPX
				(VF sie)
				(LK mochten)
				(MF zentral))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (6, 9), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja selbstverstandlich sie sagten jetzt eben sie mochten zentral)

Sentence 664:
6 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX
			(VF das)
			[01;36m(FKOORD[00m [01;31m(LKMN[00m
				(LKM liegt sehr zentral)
				(KON und)
				(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
				(PX zwischen funfundachtzig und hundert dreisig mark))))) [01;33mNX) PX)[00m
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (32, 38))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (27, 38), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX
			(VF das)
			[01;36m(FKOORD[00m [01;31m(LKMN[00m
				(LKM liegt sehr zentral)
				(KON und)
				(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;31m)[00m))))
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (16, 24), 'span': (16, 24), 'subtrees': ['LKM', 'KON', 'LKM'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'FKOORD')}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (27, 38), 'span': (27, 38), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hundert mark also ich sehe jetzt hier gerade habe ich einmal das hotel am thielenplatz das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)

Sentence 665:
0 Initial errors
0 on fringe, 0 iterations

Sentence 666:
0 Initial errors
0 on fringe, 0 iterations

Sentence 667:
17 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(DM[00m
			[01;31m(NX[00m
				(NE offergeld)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;36m(MF[00m
			(NX
				(PPOSAT mein)
				(NN name))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							(PX an sie)[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					(ADVX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['DM', 'DM', 'VXFIN', 'NX', 'SIMPX', 'ADVX', 'SIMPX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('NE',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VXFIN')}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		[01;36m(LK[00m
			(VXFIN
				[01;31m(NX[00m
					(NE offergeld)[01;31m)[00m)[01;36m)[00m
		[01;36m(MF[00m
			(NX
				(PPOSAT mein)
				(NN name))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							(PX an sie)[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					(ADVX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['LK'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NE'], 'parent': 'VXFIN', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'LK')}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		[01;36m(MF[00m
			(NX
				(PPOSAT mein)
				(NN name))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							(PX an sie)[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					(ADVX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'NF'], 'mover info': [('ADVX', (19, 21))], 'old_family': ['DM', 'DM', 'VXFIN', 'NX', 'SIMPX', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'VXFIN', 'NX', 'SIMPX'], 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 32), 'movers': ['ADVX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		[01;36m(MF[00m
			(NX
				(PPOSAT mein)
				(NN name))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							(PX an sie)[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN', 'PX'], 'mover info': [('ART', (9, 10)), ('ADJX', (10, 11))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NN', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		[01;36m(MF[00m
			(NX
				(PPOSAT mein)
				(NN name))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						(PX an sie)[01;31m)[00m
					[01;31m(PX[00m
						[01;36m(ADVX[00m
							(APPR bezuglich)[01;36m)[00m
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'VXFIN', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPOSAT', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (NX (NX (ART ein) (ADJX (PIDAT paar)) (NN fragen)) (PX (APPR an) (NX (PPER sie)))) (PX (APPR bezuglich) (NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover)))))))), (SIMPX (ADVX (ADVX (ADV erst)) (ADVX (ADV mal))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADVX (ADV grundsatzlich)) (ADJX (ADJD moglich))) (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen))))))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag))), (DM (NX (NN frau) (NE bergmann))), (VXFIN (LK (NE offergeld)))], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						(PX an sie)[01;31m)[00m
					[01;31m(PX[00m
						[01;36m(ADVX[00m
							(APPR bezuglich)[01;36m)[00m
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						(PX an sie)[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADVX (ADV grundsatzlich)) (ADJX (ADJD moglich))), (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen)))))], 'left siblings': [], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						(PX an sie)[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'VXFIN', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (7, 19), 'left siblings': ['DM', 'DM', 'VXFIN', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		(VF ich)
		(LK habe)
		[01;31m(MF[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(PX an sie)[01;31m)[00m
				[01;31m(PX[00m
					(ADVX bezuglich)
					(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (9, 19), 'span': (9, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		(VF ich)
		(LK habe)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(NX ein paar fragen)
				(PX an sie)
				[01;31m(PX[00m
					(ADVX bezuglich)
					(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (9, 19), 'left siblings': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		(VF ich)
		(LK habe)
		[01;31m(NX[00m
			(NX ein paar fragen)
			(PX an sie)
			[01;31m(PX[00m
				(ADVX bezuglich)
				(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (9, 19), 'left siblings': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		(VF ich)
		(LK habe)
		(NX ein paar fragen)
		(PX an sie)
		[01;31m(PX[00m
			(ADVX bezuglich)
			(NX einer geschaftsreise nach hannover)[01;31m)[00m
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK', 'NX', 'PX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (14, 19), 'left siblings': ['DM', 'DM', 'VXFIN', 'MF', 'VF', 'LK', 'NX', 'PX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(VXFIN offergeld)
		(MF mein name)
		(VF ich)
		(LK habe)
		(NX ein paar fragen)
		(PX an sie)
		(ADVX bezuglich)
		(NX einer geschaftsreise nach hannover)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(ADVX grundsatzlich)
				[01;31m(ADJX[00m
					(ADJD moglich)[01;31m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 25), 'span': (24, 25), 'left siblings': ['NX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP guten tag frau bergmann offergeld mein name ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)

Sentence 668:
9 Initial errors
0 on fringe, 5 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;31m(MF[00m
					(NX
						(ART ein)
						(NN hotel))[01;31m)[00m
				(NF
					(R
						(C was)
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADVX moglichst)
									[01;36m(ADVX[00m
										(ADV [01;33m(ADJX[00m zentral)[01;36m)[00m[01;31m)[00m
								(ADJD gelegen)[01;31m)[00m) [01;33mADJX)[00m
						(VC ist))))[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			(MF
				[01;36m(ADJX[00m [01;36m(MF[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(NX die transferzeit vom flughafen zum hotel)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (35, 38), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(PX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;31m(MF[00m
					(NX
						(ART ein)
						(NN hotel))[01;31m)[00m
				(NF was moglichst zentral gelegen ist))[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			(MF
				[01;36m(ADJX[00m [01;36m(MF[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(NX die transferzeit vom flughafen zum hotel)))))
Step:Single Word Phrase
{'family': ['MF', 'NX'], 'auto preterminal span': (42, 43), 'span': (42, 43), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'MF')}
(TOP
	(TURN
		(PX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;31m(MF[00m
					(NX
						(ART ein)
						(NN hotel))[01;31m)[00m
				(NF was moglichst zentral gelegen ist))[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			(MF
				[01;36m(ADJX[00m
					(MF
						(ADV ungefahr))[01;36m)[00m
				(NX die transferzeit vom flughafen zum hotel)))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['PX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [(SIMPX (VF (ADJX (ADVX (PWAV wie)) (ADJD lange))) (LK (VXFIN (VAFIN ware))) (MF (MF (ADV ungefahr)) (NX (NX (ART die) (NN transferzeit)) (PX (PX (APPRART vom) (NX (NN flughafen))) (PX (APPRART zum) (NX (NN hotel)))))))], 'left siblings': [(PX (PX (APPRART am) (NX (NN wochenende))) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))), (DM (PTKANT ja)), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mochte))) (MF (ADVX (ADV montags))) (VC (VXINF (VVINF fliegen)))), (SIMPX (VF (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mus))) (MF (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))) (PX (APPR bei) (NX (ART einer) (NN konferenz)))) (VC (VXINF (VAINF sein))))], 'auto preterminal span': (27, 39), 'span': (27, 39), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(PX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;31m(MF[00m
					(NX
						(ART ein)
						(NN hotel))[01;31m)[00m
				(NF was moglichst zentral gelegen ist)))
		(SIMPX
			(VF wie lange)
			(LK ware)
			(MF
				[01;36m(ADJX[00m
					(MF
						(ADV ungefahr))[01;36m)[00m
				(NX die transferzeit vom flughafen zum hotel)))))
Step:Unary
{'subtrees': ['MF'], 'family': ['ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (NX (ART die) (NN transferzeit)) (PX (PX (APPRART vom) (NX (NN flughafen))) (PX (APPRART zum) (NX (NN hotel)))))], 'left siblings': [], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(PX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;31m(MF[00m
					(NX
						(ART ein)
						(NN hotel))[01;31m)[00m
				(NF was moglichst zentral gelegen ist)))
		(SIMPX wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (30, 39), 'span': (32, 34), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am wochenende gar nicht ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist wie lange ware ungefahr die transferzeit vom flughafen zum hotel)

Sentence 669:
12 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF dann)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					[01;31m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover)
							(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM richtig)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 12))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(MF
				(NX ich)
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m))
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					[01;31m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover)
							(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM richtig)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('SIMPX', (12, 15))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['KON', 'SIMPX'], 'end left siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 27), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(MF
				(NX ich)
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (PX (APPR in) (NX (NE hannover))) (PX (APPRART am) (NX (NN flughafen))))))], 'left siblings': [], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(MF
				(NX ich)
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 12), 'span': (8, 12), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (12, 15), 'left siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(LK wurde)
		(MF ich)
		(VC losfliegen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 26), 'span': (16, 26), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(LK wurde)
		(MF ich)
		(VC losfliegen)
		(SIMPX
			(KOORD und)
			(VF acht uhr zehn)
			(LK ware)
			[01;31m(MF[00m
				(NX ich)
				(ADVX dann)
				[01;31m(PX[00m
					(PX in hannover)
					(PX am flughafen)[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 26), 'span': (20, 26), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(LK wurde)
		(MF ich)
		(VC losfliegen)
		(SIMPX
			(KOORD und)
			(VF acht uhr zehn)
			(LK ware)
			(NX ich)
			(ADVX dann)
			[01;31m(PX[00m
				(PX in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['KOORD', 'VF', 'LK', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 26), 'span': (22, 26), 'left siblings': ['KOORD', 'VF', 'LK', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP halbe stunde ja sehr gut dann ware ich um sieben uhr zehn wurde ich losfliegen und acht uhr zehn ware ich dann in hannover am flughafen richtig)

Sentence 670:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX wie sieht das mit den buchungsterminen aus)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF das generell moglich)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich am siebten juli))[01;36m)[00m[01;36m)[00m
		(SIMPX das ist montags)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 20), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(SIMPX wie sieht das mit den buchungsterminen aus)
		(SIMPX
			(LK ist)
			(MF das generell moglich)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich am siebten juli))[01;36m)[00m)
		(SIMPX das ist montags)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PDS das)) (ADVX (ADV generell)) (ADJX (ADJD moglich)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut wie sieht das mit den buchungsterminen aus ist das generell moglich das ich am siebten juli das ist montags)

Sentence 671:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr)
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		(DM sehr gut)
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(ADJX[00m
			(ADVX sehr)
			(ADJD gut)[01;31m)[00m
		(DM sehr gut)
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP sehr gut sehr gut vier tage mochte ich bleiben das ware dann bis zum zehnten juli konnen sie da fur mich eine buchung vornehmen)

Sentence 672:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			[01;36m(PX[00m
				(PX mit dem zug)
				(ADVX abends)[01;36m)[00m
			[01;36m(VC[00m [01;31m(ADVX[00m
				(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wenn das mit dem flugzeug)))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'VC'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			[01;36m(PX[00m
				(PX mit dem zug)
				(ADVX abends)[01;36m)[00m
			(VC zuruck)[01;31m)[00m
		(SIMPX wenn das mit dem flugzeug)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': [(VC (ADV zuruck))], 'left siblings': [(ADVX (ADV ansonsten)), (ADVX (ADV vielleicht)), (ADVX (ADV auch))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'ADVX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			(PX mit dem zug abends)
			(VC zuruck)[01;31m)[00m
		(SIMPX wenn das mit dem flugzeug)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX', 'VC'], 'family': ['SIMPX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (7, 15), 'left siblings': ['SIMPX'], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das ich dann abends wieder zuruckfliegen kann ansonsten vielleicht auch mit dem zug abends zuruck wenn das mit dem flugzeug)

Sentence 673:
11 Initial errors
0 on fringe, 5 iterations
6 Error:VP Attachment
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(C ob)
						(MF
							(NX ich)
							(PX an dem abend)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD exakt)[01;31m)[00m[01;36m)[00m
							(PX nach hause))
						(VC fahren kann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(VC[00m
					[01;36m(NF[00m
						(VXINF
							(VVINF fliegen))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:VP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'VXINF'], 'mover info': [('VXINF', (21, 22))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'VXINF'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'ADJD', 'APPR', 'NN', 'VVINF', 'VMFIN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 22), 'movers': ['VXINF'], 'old_parent': 'TURN', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX ich)
						(PX an dem abend)
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD exakt)[01;31m)[00m[01;36m)[00m
						(PX nach hause))
					(VC fahren kann)
					[01;36m(SIMPX[00m
						[01;36m(VC[00m
							[01;36m(NF[00m
								(VXINF
									(VVINF fliegen))[01;36m)[00m[01;36m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF ich an dem abend exakt nach hause)
					(VC fahren kann)
					[01;36m(SIMPX[00m
						[01;36m(VC[00m
							[01;36m(NF[00m
								(VXINF
									(VVINF fliegen))[01;36m)[00m[01;36m)[00m[01;36m)[00m)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(C (KOUS ob)), (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))), (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF ich an dem abend exakt nach hause)
					(VC fahren kann)
					[01;36m(SIMPX[00m
						[01;36m(VC[00m
							(NF
								(VXINF
									(VVINF fliegen)))[01;36m)[00m[01;36m)[00m)))))
Step:Unary
{'subtrees': ['NF'], 'family': ['C', 'MF', 'VC', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(C (KOUS ob)), (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))), (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF ich an dem abend exakt nach hause)
					(VC fahren kann)
					[01;36m(SIMPX[00m
						(VC
							(NF
								(VXINF
									(VVINF fliegen))))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['VC'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(C (KOUS ob)), (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))), (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ah ist naturlich sehr kompliziert wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann fliegen)

Sentence 674:
0 Initial errors
0 on fringe, 0 iterations

Sentence 675:
0 Initial errors
0 on fringe, 0 iterations

Sentence 676:
0 Initial errors
0 on fringe, 0 iterations

Sentence 677:
9 Initial errors
0 on fringe, 5 iterations
3 Error:Clause Attachment
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX sie)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF (MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen)[01;31m)[00m [01;33mMF)[00m
			(VC zuruckrufen) [01;33mMF)[00m
			(NF das wir alles festmachen)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'ADVX', 'VC', 'NF'], 'mover info': [('SIMPX', (6, 9)), ('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'ADVX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM sehr gut)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF sie dann)[01;36m)[00m
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF (MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen) [01;33mMF)[00m
				(VC zuruckrufen) [01;33mMF)[00m
				(NF das wir alles festmachen))[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (6, 15))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'ADJD', 'PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 15), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX ich wurde sie dann)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m [01;33m(MF (MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m[01;31m)[00m
			(ADVX morgen) [01;33mMF)[00m
			(VC zuruckrufen) [01;33mMF)[00m
			(NF das wir alles festmachen))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['SIMPX', 'ADVX', 'VC', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': ['VC', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 15), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX ich wurde sie dann)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;33m(MF[00m (MF mal morgen)[01;31m)[00m
			(VC zuruckrufen) [01;33mMF)[00m
			(NF das wir alles festmachen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 15), 'span': (6, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX ich wurde sie dann)
		(SIMPX
			(VF ich)
			(LK sage)
			[01;36m(MF[00m
				(MF mal morgen)
				(VC zuruckrufen)[01;36m)[00m
			(NF das wir alles festmachen))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (VXFIN (VVFIN festmachen)))))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN sage)))], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP sehr gut ich wurde sie dann ich sage mal morgen zuruckrufen das wir alles festmachen)

Sentence 678:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM alles klar)
		(DM gut)
		(SIMPX dann bedanke ich mich erst mal)
		[01;36m(SIMPX[00m
			(SIMPX ich rufe dann morgen wieder an)
			(SIMPX sie sind im haus)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'PPER', 'VAFIN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(DM (NX (PIS alles)) (ADJX (ADJD klar))), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN bedanke))) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ADV erst)) (ADVX (ADV mal))))], 'auto preterminal span': (9, 19), 'span': (9, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP alles klar gut dann bedanke ich mich erst mal ich rufe dann morgen wieder an sie sind im haus)

Sentence 679:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(DM[00m
			(DM alles klar)
			(DM danke schon)[01;36m)[00m
		(DM frau berit)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJD', 'PTKANT', 'ADJD'), 'right siblings': [(DM (NX (NN frau) (NE berit)))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP alles klar danke schon frau berit)

Sentence 680:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(VF zugdauer)
				[01;36m(SIMPX[00m
					(LK dauert)
					(MF drei stunden zwanzig minuten)[01;36m)[00m)
			[01;31m(NX[00m
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['KON', 'LK', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'LK')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(VF zugdauer)
				[01;36m(SIMPX[00m
					(LK dauert)
					(MF drei stunden zwanzig minuten)[01;36m)[00m)
			[01;31m(NX[00m
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m
						(LK
							(NN fliegen))[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'KON', 'LK', 'NX'], 'mover info': [('KON', (24, 25)), ('LK', (25, 26))], 'old_family': ['KON', 'LK', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['KON', 'LK'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SIMPX
			(SIMPX
				(VF zugdauer)
				[01;36m(SIMPX[00m
					(LK dauert)
					(MF drei stunden zwanzig minuten)[01;36m)[00m)
			(KON und)
			[01;36m(LKM[00m
				[01;36m(VXFIN[00m
					(LK
						(NN fliegen))[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (NN zugdauer)))], 'auto preterminal span': (19, 24), 'span': (19, 24), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SIMPX
			(SIMPX zugdauer dauert drei stunden zwanzig minuten)
			(KON und)
			[01;36m(LKM[00m
				[01;36m(VXFIN[00m
					(LK
						(NN fliegen))[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m[01;36m)[00m)))
Step:Unary
{'subtrees': ['LK'], 'family': ['SIMPX', 'KON', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART eine) (NN stunde))], 'left siblings': [(SIMPX (VF (NX (NN zugdauer))) (SIMPX (LK (VXFIN (VVFIN dauert))) (MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))))), (KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SIMPX
			(SIMPX zugdauer dauert drei stunden zwanzig minuten)
			(KON und)
			[01;36m(LKM[00m
				(VXFIN fliegen)
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VXFIN', 'NX'], 'family': ['SIMPX', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (NN zugdauer))) (SIMPX (LK (VXFIN (VVFIN dauert))) (MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))))), (KON und)], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SIMPX
			(SIMPX zugdauer dauert drei stunden zwanzig minuten)
			(KON und)
			(LKM
				(VXFIN fliegen)
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VXFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(VXFIN (LK (NN fliegen)))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SIMPX zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (10, 18), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und zugfahren dauert mir vielleicht auch ein bischen zu lange ich habe jetzt hier den plan vor mir zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)

Sentence 681:
0 Initial errors
0 on fringe, 0 iterations

Sentence 682:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;36m(VF[00m [01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es ihnen da nicht)
					(VC past))[01;31m)[00m[01;36m)[00m
			(LK konnen)
			(MF wir auch am zweiten juliwochenende)
			(VC fahren))
		(SIMPX ich bin da flexibler)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (2, 8), 'span': (2, 8), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP ja also wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren ich bin da flexibler)

Sentence 683:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mussen wir uns auf das hotel einigen)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(ADJX
					(ADJX am besten)
					[01;36m(DM[00m
						(ADJD zentral)[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (PTKA am) (ADJD besten))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja mussen wir uns auf das hotel einigen ich wurde sagen am besten zentral)

Sentence 684:
0 Initial errors
0 on fringe, 0 iterations

Sentence 685:
10 Initial errors
0 on fringe, 5 iterations
5 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX es)
						(ADVX vielleicht)
						(ADVX auch)
						[01;36m(PX[00m
							[01;31m(PX[00m
								(APPR uber)
								[01;31m(NX[00m [01;33m(NX[00m
									(ART das)
									[01;36m(NX[00m
										(NN [01;33m(NX[00m reiseburo)[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD moglich)[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNX) NX)[00m
					(VC ware))))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (12, 13))], 'old_family': ['NX', 'ADVX', 'ADVX', 'PX', 'ADJX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (6, 13), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX es)
						(ADVX vielleicht)
						(ADVX auch)
						(PX
							(APPR uber)
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN reiseburo)[01;36m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD moglich)[01;31m)[00m[01;36m)[00m))))
					(VC ware))))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX es)
						(ADVX vielleicht)
						(ADVX auch)
						(PX
							(APPR uber)
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN reiseburo)[01;36m)[00m
									(NX moglich)))))
					(VC ware))))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(C wenn)
				(MF nicht)[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF'], 'family': ['SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware ich konnte ja mal nachfragen und wenn nicht konnen wir ja weitersehen ja das ware vielleicht das beste)

Sentence 686:
17 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m
				(ADVX
					(ADV gerade))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX genau)
								[01;36m(PX[00m
									(APPR in)
									(NX der woche)[01;36m)[00m[01;31m)[00m
							[01;36m(PX[00m [01;31m(R[00m
								(C in der)
								(MF wir da)
								(VC sein werden)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						(LK ist)
						(MF
							[01;31m(NX[00m
								(ART das)
								(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'PX')}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m
				(ADVX
					(ADV gerade))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX genau)
								[01;36m(PX[00m
									(APPR in)
									(NX der woche)[01;36m)[00m[01;31m)[00m
							(PX in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						(LK ist)
						(MF
							[01;31m(NX[00m
								(ART das)
								(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'VF'], 'mover info': [('VF', (7, 17))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 20), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK sehe)
				[01;31m(MF[00m
					(ADVX gerade)
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX genau)
								[01;36m(PX[00m
									(APPR in)
									(NX der woche)[01;36m)[00m[01;31m)[00m
							(PX in der wir da sein werden)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(LK ist)
					(MF
						[01;31m(NX[00m
							(ART das)
							(NN schutzenfest)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'PX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'mover info': [('NF', (17, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'PX', 'SIMPX'], 'auto preterminal span': (0, 33), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m
				(ADVX gerade)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(ADVX genau)
							[01;36m(PX[00m
								(APPR in)
								(NX der woche)[01;36m)[00m[01;31m)[00m
						(PX in der wir da sein werden)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(NF[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'PX', 'PX'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (7, 17), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m
				(ADVX gerade)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX genau)
						(PX in der woche)
						(PX in der wir da sein werden)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(NF[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'VF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (6, 17), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX
			(VF ich)
			(LK sehe)
			(ADVX gerade)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(ADVX genau)
					(PX in der woche)
					(PX in der wir da sein werden)[01;31m)[00m[01;31m)[00m)
		[01;31m(NF[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (7, 17), 'left siblings': ['VF', 'LK', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX
			(VF ich)
			(LK sehe)
			(ADVX gerade)
			[01;31m(PX[00m
				(ADVX genau)
				(PX in der woche)
				(PX in der wir da sein werden)[01;31m)[00m)
		[01;31m(NF[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX', 'PX'], 'family': ['VF', 'LK', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (7, 17), 'left siblings': ['VF', 'LK', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		[01;31m(NF[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'PX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (17, 20), 'left siblings': ['DM', 'PX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NN schutzenfest)[01;31m)[00m))
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['ART', 'NN'], 'family': ['NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (18, 20), 'span': (18, 20), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (23, 25), 'span': (23, 24), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF [01;33m(NX[00m
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJA grostes) [01;33mNX)[00m
						(NN [01;33m(PX[00m schutzenfest)[01;31m)[00m
					(NX der welt))) [01;33mPX)[00m
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:NP Internal Structure
{'subtrees': ['ADJA', 'NN'], 'family': ['KOKOM', 'NX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOKOM', 'ADJA', 'NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (22, 27), 'span': (23, 25), 'left siblings': ['KOKOM'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						(ADJA grostes)[01;36m)[00m
					[01;36m(PX[00m
						(NN schutzenfest)
						(NX der welt)[01;36m)[00m))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:NP Internal Structure
{'subtrees': ['KOKOM', 'ADJA'], 'family': ['NX', 'NN', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOKOM', 'ADJA'), 'right siblings': [(NN schutzenfest), (NX (ART der) (NN welt))], 'left siblings': [], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(SIMPX ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(NX als grostes)
					[01;36m(PX[00m
						(NN schutzenfest)
						(NX der welt)[01;36m)[00m))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET add
{'subtrees': ['NN', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (KOKOM als) (ADJA grostes))], 'auto preterminal span': (24, 27), 'span': (24, 27), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest das wird als grostes schutzenfest der welt deklariert da konnten wir mal vorbeischauen)

Sentence 687:
0 Initial errors
0 on fringe, 0 iterations

Sentence 688:
0 Initial errors
0 on fringe, 0 iterations

Sentence 689:
6 Initial errors
0 on fringe, 3 iterations
4 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK geht)
			(MF uns auch nicht soviel zeit)
			[01;36m(VXINF[00m
				(VC
					(PTKVZ verloren))[01;36m)[00m)
		(DM ja)
		(SIMPX wie machen wir das)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(SIMPX rufen sie beim reiseburo an)
				(KON oder)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(LK soll)
					(MF ich es)
					(VC machen)[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(PX
					(APPR wegen)
					(NX der flugverbindung))[01;36m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 27))], 'old_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 27), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK geht)
			(MF uns auch nicht soviel zeit)
			[01;36m(VXINF[00m
				(VC
					(PTKVZ verloren))[01;36m)[00m)
		(DM ja)
		(SIMPX wie machen wir das)
		(SIMPX
			(SIMPX rufen sie beim reiseburo an)
			(KON oder)
			(SIMPX
				(LK soll)
				(MF ich es)
				(VC machen)
				[01;36m(NF[00m
					(PX
						(APPR wegen)
						(NX der flugverbindung))[01;36m)[00m))))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN geht))), (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da geht uns auch nicht soviel zeit verloren)
		(DM ja)
		(SIMPX wie machen wir das)
		(SIMPX
			(SIMPX rufen sie beim reiseburo an)
			(KON oder)
			(SIMPX
				(LK soll)
				(MF ich es)
				(VC machen)
				[01;36m(NF[00m
					(PX
						(APPR wegen)
						(NX der flugverbindung))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN soll))), (MF (NX (PPER ich)) (NX (PPER es))), (VC (VXINF (VVINF machen)))], 'auto preterminal span': (24, 27), 'span': (24, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja da geht uns auch nicht soviel zeit verloren ja wie machen wir das rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)

Sentence 690:
14 Initial errors
0 on fringe, 7 iterations
5 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK meine)
			[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
				(VF wir)
				(LK hatten)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX letztes mal) [01;33mNF) SIMPX) SIMPX)[00m
							[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						[01;36m(PX[00m [01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
							(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
					(VC gehabt)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (1, 22), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF wir hatten letztes mal)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PX
								(APPR bei)
								(NX der expo))[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						[01;36m(PX[00m [01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
							(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
					(VC gehabt))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF wir hatten letztes mal)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PX
								(APPR bei)
								(NX der expo))[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						[01;36m(PX[00m [01;31m(NX[00m
							(ADVX flugmoglichkeiten)
							(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
					(VC gehabt))[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'PX'], 'auto preterminal span': (12, 21), 'span': (12, 21), 'subtrees': ['ADVX', 'PX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF wir hatten letztes mal)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PX
								(APPR bei)
								(NX der expo))[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
					(VC gehabt))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'NF'], 'mover info': [('NF', (7, 22))], 'old_family': ['VF', 'LK', 'NF', 'NF'], 'start left siblings': ['VF', 'LK', 'NF'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich meine wir hatten letztes mal)
		[01;31m(NF[00m
			(SIMPX
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PX
							(APPR bei)
							(NX der expo))[01;31m)[00m[01;31m)[00m
				(LK hatten)
				(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
				(VC gehabt))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (7, 22), 'span': (7, 10), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich meine wir hatten letztes mal)
		[01;31m(NF[00m
			(SIMPX
				[01;31m(NX[00m
					(PX
						(APPR bei)
						(NX der expo))[01;31m)[00m
				(LK hatten)
				(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
				(VC gehabt))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (7, 22), 'span': (7, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich meine wir hatten letztes mal)
		[01;31m(NF[00m
			(SIMPX
				(PX bei der expo)
				(LK hatten)
				(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
				(VC gehabt))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 22), 'left siblings': ['DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich meine wir hatten letztes mal bei der expo hatten wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn gehabt)

Sentence 691:
0 Initial errors
0 on fringe, 0 iterations

Sentence 692:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM moment)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK gucke)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX mal)
					(ADVX eben)[01;31m)[00m
				[01;31m(VC[00m [01;33m(PX[00m
					(PTKVZ nach)[01;31m)[00m[01;31m)[00m
			(NX erstes juliwochenende)[01;36m)[00m)) [01;33mPX) MF)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['DM', 'DM', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX mal)
					(ADVX eben)[01;31m)[00m
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					(NX erstes juliwochenende))[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('PX', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX'], 'auto preterminal span': (2, 9), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM moment)
		(SIMPX
			(VF ich)
			(LK gucke)
			(MF
				(ADVX mal)
				(ADVX eben)
				(PX
					[01;31m(VC[00m
						(PTKVZ nach)[01;31m)[00m
					(NX erstes juliwochenende))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VC', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKVZ', 'ADJA', 'NN'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (6, 9), 'span': (6, 7), 'left siblings': [], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja moment ich gucke mal eben nach erstes juliwochenende)

Sentence 693:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		(SIMPX das wochenende ware der funfte sechste)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					(C wenn)
					(MF wir dann am montag)
					(VC starten)[01;31m)[00m[01;31m)[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:Unary
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'LV', 'auto preterminal span': (11, 17), 'span': (11, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		(SIMPX das wochenende ware der funfte sechste)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(C wenn)
				(MF wir dann am montag)
				(VC starten)[01;31m)[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['LV', 'DM', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': ['DM', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 23), 'span': (11, 17), 'left siblings': [], 'label': 'LV', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		(SIMPX das wochenende ware der funfte sechste)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF wir dann am montag)
			(VC starten)
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'DM', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (11, 23), 'left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das ware okay also das wochenende ware der funfte sechste wenn wir dann am montag starten genau ware das der siebte juli)

Sentence 694:
7 Initial errors
0 on fringe, 4 iterations
4 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m
			(LK mochte)
			(MF
				(ADVX auch)
				[01;36m(NX[00m
					[01;33m(NX[00m (ADVX so)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ART ein)
							(ADJX bischen)
							(PIS was)[01;31m)[00m [01;33mNX)[00m
						(PX von hannover)[01;31m)[00m[01;36m)[00m)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
			[01;33m(SIMPX[00m (LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben))) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'ADJX', 'PIS'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'ADJX', 'PIS'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m
			(LK mochte)
			(MF auch so ein bischen was von hannover)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
			[01;33m(SIMPX[00m (LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (4, 13), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		(LK mochte)
		(MF auch so ein bischen was von hannover)
		(VC sehen)
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
			[01;33m(SIMPX[00m (LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (13, 25), 'left siblings': ['DM', 'DM', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		(LK mochte)
		(MF auch so ein bischen was von hannover)
		(VC sehen)
		(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
		[01;36m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(SIMPX wenn sie da interesse dran haben)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'SIMPX'], 'family': ['DM', 'DM', 'LK', 'MF', 'VC', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (PX (APPR auf) (NX (PIDAT jeden) (NN fall)))), (LK (VXFIN (VMFIN mochte))), (MF (ADVX (ADV auch)) (NX (NX (ADVX (ADV so)) (ART ein) (ADJX (PIDAT bischen)) (PIS was)) (PX (APPR von) (NX (NE hannover))))), (VC (VXINF (VVINF sehen))), (VF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (NX (ART ein) (ADJX (PIDAT paar)) (NN sehenswurdigkeiten)) (NX (PRF uns))) (VC (VXFIN (VVFIN anschauen)))))], 'auto preterminal span': (22, 31), 'span': (22, 31), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja auf jeden fall mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)

Sentence 695:
7 Initial errors
0 on fringe, 6 iterations
2 Error:NP Internal Structure
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnen)
			(MF wir vielleicht noch nach der messe ein bischen was)
			(VC besprechen)[01;31m)[00m
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX [01;33m(NX[00m
						[01;36m(NX[00m
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m[01;36m)[00m
						(APPR mit)
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NN teilnehmer) [01;33mNX)[00m[01;36m)[00m
							(NX der messe)[01;31m)[00m)
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'APPR', 'NN', 'NX'], 'mover info': [('NN', (42, 43))], 'old_family': ['NN', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ART', 'ADJX', 'APPR'], 'auto preterminal span': (39, 45), 'adding node already present': False, 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Internal Structure', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnen)
			(MF wir vielleicht noch nach der messe ein bischen was)
			(VC besprechen)[01;31m)[00m
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							[01;36m(NX[00m
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m[01;36m)[00m
							(APPR mit)
							[01;36m(NX[00m
								(NN teilnehmer)[01;36m)[00m)
						(NX der messe))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'APPR', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [(APPR mit), (NN teilnehmer)], 'left siblings': [], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnen)
			(MF wir vielleicht noch nach der messe ein bischen was)
			(VC besprechen)[01;31m)[00m
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(APPR mit)
							[01;36m(NX[00m
								(NN teilnehmer)[01;36m)[00m)
						(NX der messe))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART ein) (ADJX (PIDAT paar))), (APPR mit)], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SIMPX[00m
			(VF da)
			(LK konnen)
			(MF wir vielleicht noch nach der messe ein bischen was)
			(VC besprechen)[01;31m)[00m
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(APPR mit)
							(NX teilnehmer))
						(NX der messe))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (23, 35), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(VF da)
		(LK konnen)
		(MF wir vielleicht noch nach der messe ein bischen was)
		(VC besprechen)
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(APPR mit)
							(NX teilnehmer))
						(NX der messe))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (35, 47), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'label': 'ADVX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(VF da)
		(LK konnen)
		(MF wir vielleicht noch nach der messe ein bischen was)
		(VC besprechen)
		(ADVX auch)
		(SIMPX
			(C wenn)
			(MF
				(NX wir)
				(ADVX noch)
				(NX
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(APPR mit)
						(NX teilnehmer))
					(NX der messe))
				(ADVX mit))
			(VC einladen))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (39, 41), 'span': (40, 41), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm es liegt sehr zentral hat einen konferenzraum da konnen wir vielleicht noch nach der messe ein bischen was besprechen auch wenn wir noch ein paar mit teilnehmer der messe mit einladen)

Sentence 696:
11 Initial errors
0 on fringe, 7 iterations
2 Error:Modifier Attachment
2 Error:NP Attachment
2 Error:Modifier Attachment
2 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (NX die kosten)
		(ART der)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX die frage)
					[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX) SIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (8, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (NX die kosten)
		(ART der)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX die frage)
					[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK konnen)
				(MF wir) [01;33mSIMPX) SIMPX) SIMPX)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'LK', 'MF', 'ADVX'], 'mover info': [('NX', (6, 8))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['LK', 'MF', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (NX die kosten)
		(ART der)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(ART die)
					(NN frage))[01;31m)[00m
			[01;31m(SIMPX[00m
				(SIMPX der kosten konnen wir) [01;33mSIMPX) SIMPX)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'SIMPX', 'ADVX', 'LK', 'MF', 'VC'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['SIMPX', 'ADVX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['VF', 'SIMPX'], 'auto preterminal span': (4, 17), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (NX die kosten)
		(ART der)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(ART die)
						(NN frage))[01;31m)[00m
				(SIMPX der kosten konnen wir) [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken))[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'ART', 'VF', 'SIMPX', 'SIMPX'], 'mover info': [('VF', (4, 6)), ('SIMPX', (6, 10))], 'old_family': ['VF', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': ['DM', 'NX', 'ART'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['VF', 'SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(NX die kosten)
			(ART der)
			[01;36m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(ART die)
						(NN frage))[01;31m)[00m
				(SIMPX der kosten konnen wir)[01;36m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken))))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX'], 'family': ['NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [], 'left siblings': [(NX (ART die) (NN kosten)), (ART der)], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(NX die kosten)
			(ART der)
			(SIMPX
				[01;31m(VF[00m
					(NX
						(ART die)
						(NN frage))[01;31m)[00m
				(SIMPX der kosten konnen wir)))
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADV dann))[01;36m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(NX die kosten)
			(ART der)
			(SIMPX
				[01;31m(VF[00m
					(NX
						(ART die)
						(NN frage))[01;31m)[00m
				(SIMPX der kosten konnen wir)))
		(SIMPX dann kann ich mit unserem vorgesetzten abchecken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (4, 10), 'span': (4, 6), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja die kosten der die frage der kosten konnen wir dann kann ich mit unserem vorgesetzten abchecken)

Sentence 697:
0 Initial errors
0 on fringe, 0 iterations

